
bldc_atmel_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000200  00800100  000021fa  0000228e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000021fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000085f  00800300  00800300  0000248e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000248e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000024c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  000024fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004c8c  00000000  00000000  0000277c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010a5  00000000  00000000  00007408  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018ae  00000000  00000000  000084ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000784  00000000  00000000  00009d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00009db7  00000000  00000000  0000a4e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a9a  00000000  00000000  00014297  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  00015d31  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000135b  00000000  00000000  00015f51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	66 c0       	rjmp	.+204    	; 0xce <__ctors_end>
       2:	00 00       	nop
       4:	83 c0       	rjmp	.+262    	; 0x10c <__bad_interrupt>
       6:	00 00       	nop
       8:	81 c0       	rjmp	.+258    	; 0x10c <__bad_interrupt>
       a:	00 00       	nop
       c:	7f c0       	rjmp	.+254    	; 0x10c <__bad_interrupt>
       e:	00 00       	nop
      10:	7d c0       	rjmp	.+250    	; 0x10c <__bad_interrupt>
      12:	00 00       	nop
      14:	7b c0       	rjmp	.+246    	; 0x10c <__bad_interrupt>
      16:	00 00       	nop
      18:	79 c0       	rjmp	.+242    	; 0x10c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	77 c0       	rjmp	.+238    	; 0x10c <__bad_interrupt>
      1e:	00 00       	nop
      20:	75 c0       	rjmp	.+234    	; 0x10c <__bad_interrupt>
      22:	00 00       	nop
      24:	73 c0       	rjmp	.+230    	; 0x10c <__bad_interrupt>
      26:	00 00       	nop
      28:	71 c0       	rjmp	.+226    	; 0x10c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6f c0       	rjmp	.+222    	; 0x10c <__bad_interrupt>
      2e:	00 00       	nop
      30:	6d c0       	rjmp	.+218    	; 0x10c <__bad_interrupt>
      32:	00 00       	nop
      34:	6b c0       	rjmp	.+214    	; 0x10c <__bad_interrupt>
      36:	00 00       	nop
      38:	0c 94 62 0e 	jmp	0x1cc4	; 0x1cc4 <__vector_14>
      3c:	67 c0       	rjmp	.+206    	; 0x10c <__bad_interrupt>
      3e:	00 00       	nop
      40:	65 c0       	rjmp	.+202    	; 0x10c <__bad_interrupt>
      42:	00 00       	nop
      44:	63 c0       	rjmp	.+198    	; 0x10c <__bad_interrupt>
      46:	00 00       	nop
      48:	61 c0       	rjmp	.+194    	; 0x10c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	5f c0       	rjmp	.+190    	; 0x10c <__bad_interrupt>
      4e:	00 00       	nop
      50:	5d c0       	rjmp	.+186    	; 0x10c <__bad_interrupt>
      52:	00 00       	nop
      54:	5b c0       	rjmp	.+182    	; 0x10c <__bad_interrupt>
      56:	00 00       	nop
      58:	59 c0       	rjmp	.+178    	; 0x10c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	57 c0       	rjmp	.+174    	; 0x10c <__bad_interrupt>
      5e:	00 00       	nop
      60:	55 c0       	rjmp	.+170    	; 0x10c <__bad_interrupt>
      62:	00 00       	nop
      64:	53 c0       	rjmp	.+166    	; 0x10c <__bad_interrupt>
      66:	00 00       	nop
      68:	51 c0       	rjmp	.+162    	; 0x10c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4f c0       	rjmp	.+158    	; 0x10c <__bad_interrupt>
      6e:	00 00       	nop
      70:	4d c0       	rjmp	.+154    	; 0x10c <__bad_interrupt>
      72:	00 00       	nop
      74:	4b c0       	rjmp	.+150    	; 0x10c <__bad_interrupt>
      76:	00 00       	nop
      78:	49 c0       	rjmp	.+146    	; 0x10c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	47 c0       	rjmp	.+142    	; 0x10c <__bad_interrupt>
      7e:	00 00       	nop
      80:	45 c0       	rjmp	.+138    	; 0x10c <__bad_interrupt>
      82:	00 00       	nop
      84:	43 c0       	rjmp	.+134    	; 0x10c <__bad_interrupt>
      86:	00 00       	nop
      88:	41 c0       	rjmp	.+130    	; 0x10c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c2 00       	.word	0x00c2	; ????
      8e:	86 0b       	sbc	r24, r22
      90:	86 0b       	sbc	r24, r22
      92:	86 0b       	sbc	r24, r22
      94:	e0 00       	.word	0x00e0	; ????
      96:	86 0b       	sbc	r24, r22
      98:	86 0b       	sbc	r24, r22
      9a:	86 0b       	sbc	r24, r22
      9c:	86 0b       	sbc	r24, r22
      9e:	86 0b       	sbc	r24, r22
      a0:	86 0b       	sbc	r24, r22
      a2:	86 0b       	sbc	r24, r22
      a4:	77 0b       	sbc	r23, r23
      a6:	4b 02       	muls	r20, r27
      a8:	4b 02       	muls	r20, r27
      aa:	7f 0b       	sbc	r23, r31
      ac:	2f 07       	cpc	r18, r31
      ae:	2f 07       	cpc	r18, r31
      b0:	86 0b       	sbc	r24, r22
      b2:	86 0b       	sbc	r24, r22
      b4:	1e 02       	muls	r17, r30
      b6:	2e 02       	muls	r18, r30
      b8:	86 0b       	sbc	r24, r22
      ba:	96 0a       	sbc	r9, r22
      bc:	86 0b       	sbc	r24, r22
      be:	86 0b       	sbc	r24, r22
      c0:	86 0b       	sbc	r24, r22
      c2:	86 0b       	sbc	r24, r22
      c4:	86 0b       	sbc	r24, r22
      c6:	86 0b       	sbc	r24, r22
      c8:	f5 0a       	sbc	r15, r21
      ca:	2a 0b       	sbc	r18, r26
      cc:	5e 0b       	sbc	r21, r30

000000ce <__ctors_end>:
      ce:	11 24       	eor	r1, r1
      d0:	1f be       	out	0x3f, r1	; 63
      d2:	cf ef       	ldi	r28, 0xFF	; 255
      d4:	d0 e1       	ldi	r29, 0x10	; 16
      d6:	de bf       	out	0x3e, r29	; 62
      d8:	cd bf       	out	0x3d, r28	; 61

000000da <__do_copy_data>:
      da:	13 e0       	ldi	r17, 0x03	; 3
      dc:	a0 e0       	ldi	r26, 0x00	; 0
      de:	b1 e0       	ldi	r27, 0x01	; 1
      e0:	ea ef       	ldi	r30, 0xFA	; 250
      e2:	f1 e2       	ldi	r31, 0x21	; 33
      e4:	00 e0       	ldi	r16, 0x00	; 0
      e6:	0b bf       	out	0x3b, r16	; 59
      e8:	02 c0       	rjmp	.+4      	; 0xee <__do_copy_data+0x14>
      ea:	07 90       	elpm	r0, Z+
      ec:	0d 92       	st	X+, r0
      ee:	a0 30       	cpi	r26, 0x00	; 0
      f0:	b1 07       	cpc	r27, r17
      f2:	d9 f7       	brne	.-10     	; 0xea <__do_copy_data+0x10>

000000f4 <__do_clear_bss>:
      f4:	2b e0       	ldi	r18, 0x0B	; 11
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b3 e0       	ldi	r27, 0x03	; 3
      fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
      fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
      fe:	af 35       	cpi	r26, 0x5F	; 95
     100:	b2 07       	cpc	r27, r18
     102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
     104:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <main>
     108:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <_exit>

0000010c <__bad_interrupt>:
     10c:	79 cf       	rjmp	.-270    	; 0x0 <__vectors>

0000010e <bldc_interface_init>:
void bldc_interface_set_rx_mcconf_received_func(void(*func)(void)) {
	rx_mcconf_received_func = func;
}

void bldc_interface_set_rx_appconf_received_func(void(*func)(void)) {
	rx_appconf_received_func = func;
     10e:	90 93 19 03 	sts	0x0319, r25	; 0x800319 <send_func+0x1>
     112:	80 93 18 03 	sts	0x0318, r24	; 0x800318 <send_func>
     116:	08 95       	ret

00000118 <bldc_interface_process_packet>:
     118:	8f 92       	push	r8
     11a:	9f 92       	push	r9
     11c:	af 92       	push	r10
     11e:	bf 92       	push	r11
     120:	cf 92       	push	r12
     122:	df 92       	push	r13
     124:	ef 92       	push	r14
     126:	ff 92       	push	r15
     128:	0f 93       	push	r16
     12a:	1f 93       	push	r17
     12c:	cf 93       	push	r28
     12e:	df 93       	push	r29
     130:	00 d0       	rcall	.+0      	; 0x132 <bldc_interface_process_packet+0x1a>
     132:	00 d0       	rcall	.+0      	; 0x134 <bldc_interface_process_packet+0x1c>
     134:	cd b7       	in	r28, 0x3d	; 61
     136:	de b7       	in	r29, 0x3e	; 62
     138:	61 15       	cp	r22, r1
     13a:	71 05       	cpc	r23, r1
     13c:	11 f4       	brne	.+4      	; 0x142 <bldc_interface_process_packet+0x2a>
     13e:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     142:	7c 01       	movw	r14, r24
     144:	e0 91 16 03 	lds	r30, 0x0316	; 0x800316 <forward_func>
     148:	f0 91 17 03 	lds	r31, 0x0317	; 0x800317 <forward_func+0x1>
     14c:	30 97       	sbiw	r30, 0x00	; 0
     14e:	19 f0       	breq	.+6      	; 0x156 <bldc_interface_process_packet+0x3e>
     150:	09 95       	icall
     152:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     156:	19 82       	std	Y+1, r1	; 0x01
     158:	1a 82       	std	Y+2, r1	; 0x02
     15a:	1b 82       	std	Y+3, r1	; 0x03
     15c:	1c 82       	std	Y+4, r1	; 0x04
     15e:	8c 01       	movw	r16, r24
     160:	0f 5f       	subi	r16, 0xFF	; 255
     162:	1f 4f       	sbci	r17, 0xFF	; 255
     164:	61 50       	subi	r22, 0x01	; 1
     166:	71 09       	sbc	r23, r1
     168:	dc 01       	movw	r26, r24
     16a:	ec 91       	ld	r30, X
     16c:	8e 2f       	mov	r24, r30
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	81 32       	cpi	r24, 0x21	; 33
     172:	91 05       	cpc	r25, r1
     174:	10 f0       	brcs	.+4      	; 0x17a <bldc_interface_process_packet+0x62>
     176:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     17a:	fc 01       	movw	r30, r24
     17c:	ea 5b       	subi	r30, 0xBA	; 186
     17e:	ff 4f       	sbci	r31, 0xFF	; 255
     180:	0c 94 e9 10 	jmp	0x21d2	; 0x21d2 <__tablejump2__>
     184:	62 30       	cpi	r22, 0x02	; 2
     186:	71 05       	cpc	r23, r1
     188:	79 f4       	brne	.+30     	; 0x1a8 <bldc_interface_process_packet+0x90>
     18a:	f7 01       	movw	r30, r14
     18c:	81 81       	ldd	r24, Z+1	; 0x01
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	90 93 ef 04 	sts	0x04EF, r25	; 0x8004ef <fw_major+0x1>
     194:	80 93 ee 04 	sts	0x04EE, r24	; 0x8004ee <fw_major>
     198:	82 81       	ldd	r24, Z+2	; 0x02
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	90 93 ed 04 	sts	0x04ED, r25	; 0x8004ed <fw_minor+0x1>
     1a0:	80 93 ec 04 	sts	0x04EC, r24	; 0x8004ec <fw_minor>
     1a4:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     1a8:	8f ef       	ldi	r24, 0xFF	; 255
     1aa:	9f ef       	ldi	r25, 0xFF	; 255
     1ac:	90 93 ef 04 	sts	0x04EF, r25	; 0x8004ef <fw_major+0x1>
     1b0:	80 93 ee 04 	sts	0x04EE, r24	; 0x8004ee <fw_major>
     1b4:	90 93 ed 04 	sts	0x04ED, r25	; 0x8004ed <fw_minor+0x1>
     1b8:	80 93 ec 04 	sts	0x04EC, r24	; 0x8004ec <fw_minor>
     1bc:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     1c0:	9e 01       	movw	r18, r28
     1c2:	2f 5f       	subi	r18, 0xFF	; 255
     1c4:	3f 4f       	sbci	r19, 0xFF	; 255
     1c6:	40 e0       	ldi	r20, 0x00	; 0
     1c8:	50 e0       	ldi	r21, 0x00	; 0
     1ca:	60 e2       	ldi	r22, 0x20	; 32
     1cc:	71 e4       	ldi	r23, 0x41	; 65
     1ce:	c8 01       	movw	r24, r16
     1d0:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     1d4:	0f 2e       	mov	r0, r31
     1d6:	f0 ef       	ldi	r31, 0xF0	; 240
     1d8:	ef 2e       	mov	r14, r31
     1da:	f4 e0       	ldi	r31, 0x04	; 4
     1dc:	ff 2e       	mov	r15, r31
     1de:	f0 2d       	mov	r31, r0
     1e0:	d7 01       	movw	r26, r14
     1e2:	14 96       	adiw	r26, 0x04	; 4
     1e4:	6d 93       	st	X+, r22
     1e6:	7d 93       	st	X+, r23
     1e8:	8d 93       	st	X+, r24
     1ea:	9c 93       	st	X, r25
     1ec:	17 97       	sbiw	r26, 0x07	; 7
     1ee:	9e 01       	movw	r18, r28
     1f0:	2f 5f       	subi	r18, 0xFF	; 255
     1f2:	3f 4f       	sbci	r19, 0xFF	; 255
     1f4:	40 e0       	ldi	r20, 0x00	; 0
     1f6:	50 e0       	ldi	r21, 0x00	; 0
     1f8:	60 e2       	ldi	r22, 0x20	; 32
     1fa:	71 e4       	ldi	r23, 0x41	; 65
     1fc:	c8 01       	movw	r24, r16
     1fe:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     202:	f7 01       	movw	r30, r14
     204:	60 87       	std	Z+8, r22	; 0x08
     206:	71 87       	std	Z+9, r23	; 0x09
     208:	82 87       	std	Z+10, r24	; 0x0a
     20a:	93 87       	std	Z+11, r25	; 0x0b
     20c:	9e 01       	movw	r18, r28
     20e:	2f 5f       	subi	r18, 0xFF	; 255
     210:	3f 4f       	sbci	r19, 0xFF	; 255
     212:	40 e0       	ldi	r20, 0x00	; 0
     214:	50 e0       	ldi	r21, 0x00	; 0
     216:	60 e2       	ldi	r22, 0x20	; 32
     218:	71 e4       	ldi	r23, 0x41	; 65
     21a:	c8 01       	movw	r24, r16
     21c:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     220:	d7 01       	movw	r26, r14
     222:	1c 96       	adiw	r26, 0x0c	; 12
     224:	6d 93       	st	X+, r22
     226:	7d 93       	st	X+, r23
     228:	8d 93       	st	X+, r24
     22a:	9c 93       	st	X, r25
     22c:	1f 97       	sbiw	r26, 0x0f	; 15
     22e:	9e 01       	movw	r18, r28
     230:	2f 5f       	subi	r18, 0xFF	; 255
     232:	3f 4f       	sbci	r19, 0xFF	; 255
     234:	40 e0       	ldi	r20, 0x00	; 0
     236:	50 e0       	ldi	r21, 0x00	; 0
     238:	60 e2       	ldi	r22, 0x20	; 32
     23a:	71 e4       	ldi	r23, 0x41	; 65
     23c:	c8 01       	movw	r24, r16
     23e:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     242:	f7 01       	movw	r30, r14
     244:	60 8b       	std	Z+16, r22	; 0x10
     246:	71 8b       	std	Z+17, r23	; 0x11
     248:	82 8b       	std	Z+18, r24	; 0x12
     24a:	93 8b       	std	Z+19, r25	; 0x13
     24c:	9e 01       	movw	r18, r28
     24e:	2f 5f       	subi	r18, 0xFF	; 255
     250:	3f 4f       	sbci	r19, 0xFF	; 255
     252:	40 e0       	ldi	r20, 0x00	; 0
     254:	50 e0       	ldi	r21, 0x00	; 0
     256:	60 e2       	ldi	r22, 0x20	; 32
     258:	71 e4       	ldi	r23, 0x41	; 65
     25a:	c8 01       	movw	r24, r16
     25c:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     260:	d7 01       	movw	r26, r14
     262:	54 96       	adiw	r26, 0x14	; 20
     264:	6d 93       	st	X+, r22
     266:	7d 93       	st	X+, r23
     268:	8d 93       	st	X+, r24
     26a:	9c 93       	st	X, r25
     26c:	57 97       	sbiw	r26, 0x17	; 23
     26e:	9e 01       	movw	r18, r28
     270:	2f 5f       	subi	r18, 0xFF	; 255
     272:	3f 4f       	sbci	r19, 0xFF	; 255
     274:	40 e0       	ldi	r20, 0x00	; 0
     276:	50 e0       	ldi	r21, 0x00	; 0
     278:	60 e2       	ldi	r22, 0x20	; 32
     27a:	71 e4       	ldi	r23, 0x41	; 65
     27c:	c8 01       	movw	r24, r16
     27e:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     282:	f7 01       	movw	r30, r14
     284:	60 8f       	std	Z+24, r22	; 0x18
     286:	71 8f       	std	Z+25, r23	; 0x19
     288:	82 8f       	std	Z+26, r24	; 0x1a
     28a:	93 8f       	std	Z+27, r25	; 0x1b
     28c:	9e 01       	movw	r18, r28
     28e:	2f 5f       	subi	r18, 0xFF	; 255
     290:	3f 4f       	sbci	r19, 0xFF	; 255
     292:	40 e0       	ldi	r20, 0x00	; 0
     294:	50 e0       	ldi	r21, 0x00	; 0
     296:	60 e2       	ldi	r22, 0x20	; 32
     298:	71 e4       	ldi	r23, 0x41	; 65
     29a:	c8 01       	movw	r24, r16
     29c:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     2a0:	d7 01       	movw	r26, r14
     2a2:	5c 96       	adiw	r26, 0x1c	; 28
     2a4:	6d 93       	st	X+, r22
     2a6:	7d 93       	st	X+, r23
     2a8:	8d 93       	st	X+, r24
     2aa:	9c 93       	st	X, r25
     2ac:	5f 97       	sbiw	r26, 0x1f	; 31
     2ae:	9e 01       	movw	r18, r28
     2b0:	2f 5f       	subi	r18, 0xFF	; 255
     2b2:	3f 4f       	sbci	r19, 0xFF	; 255
     2b4:	40 e0       	ldi	r20, 0x00	; 0
     2b6:	50 e0       	ldi	r21, 0x00	; 0
     2b8:	68 ec       	ldi	r22, 0xC8	; 200
     2ba:	72 e4       	ldi	r23, 0x42	; 66
     2bc:	c8 01       	movw	r24, r16
     2be:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     2c2:	f7 01       	movw	r30, r14
     2c4:	60 a3       	std	Z+32, r22	; 0x20
     2c6:	71 a3       	std	Z+33, r23	; 0x21
     2c8:	82 a3       	std	Z+34, r24	; 0x22
     2ca:	93 a3       	std	Z+35, r25	; 0x23
     2cc:	9e 01       	movw	r18, r28
     2ce:	2f 5f       	subi	r18, 0xFF	; 255
     2d0:	3f 4f       	sbci	r19, 0xFF	; 255
     2d2:	40 e0       	ldi	r20, 0x00	; 0
     2d4:	50 e0       	ldi	r21, 0x00	; 0
     2d6:	68 ec       	ldi	r22, 0xC8	; 200
     2d8:	72 e4       	ldi	r23, 0x42	; 66
     2da:	c8 01       	movw	r24, r16
     2dc:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     2e0:	d7 01       	movw	r26, r14
     2e2:	94 96       	adiw	r26, 0x24	; 36
     2e4:	6d 93       	st	X+, r22
     2e6:	7d 93       	st	X+, r23
     2e8:	8d 93       	st	X+, r24
     2ea:	9c 93       	st	X, r25
     2ec:	97 97       	sbiw	r26, 0x27	; 39
     2ee:	9e 01       	movw	r18, r28
     2f0:	2f 5f       	subi	r18, 0xFF	; 255
     2f2:	3f 4f       	sbci	r19, 0xFF	; 255
     2f4:	40 e0       	ldi	r20, 0x00	; 0
     2f6:	50 e0       	ldi	r21, 0x00	; 0
     2f8:	6a e7       	ldi	r22, 0x7A	; 122
     2fa:	74 e4       	ldi	r23, 0x44	; 68
     2fc:	c8 01       	movw	r24, r16
     2fe:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     302:	f7 01       	movw	r30, r14
     304:	64 a7       	std	Z+44, r22	; 0x2c
     306:	75 a7       	std	Z+45, r23	; 0x2d
     308:	86 a7       	std	Z+46, r24	; 0x2e
     30a:	97 a7       	std	Z+47, r25	; 0x2f
     30c:	9e 01       	movw	r18, r28
     30e:	2f 5f       	subi	r18, 0xFF	; 255
     310:	3f 4f       	sbci	r19, 0xFF	; 255
     312:	40 e0       	ldi	r20, 0x00	; 0
     314:	50 e0       	ldi	r21, 0x00	; 0
     316:	60 e8       	ldi	r22, 0x80	; 128
     318:	7f e3       	ldi	r23, 0x3F	; 63
     31a:	c8 01       	movw	r24, r16
     31c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     320:	d7 01       	movw	r26, r14
     322:	98 96       	adiw	r26, 0x28	; 40
     324:	6d 93       	st	X+, r22
     326:	7d 93       	st	X+, r23
     328:	8d 93       	st	X+, r24
     32a:	9c 93       	st	X, r25
     32c:	9b 97       	sbiw	r26, 0x2b	; 43
     32e:	9e 01       	movw	r18, r28
     330:	2f 5f       	subi	r18, 0xFF	; 255
     332:	3f 4f       	sbci	r19, 0xFF	; 255
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	50 e0       	ldi	r21, 0x00	; 0
     338:	60 e2       	ldi	r22, 0x20	; 32
     33a:	71 e4       	ldi	r23, 0x41	; 65
     33c:	c8 01       	movw	r24, r16
     33e:	0e 94 d3 0c 	call	0x19a6	; 0x19a6 <buffer_get_float16>
     342:	f7 01       	movw	r30, r14
     344:	60 83       	st	Z, r22
     346:	71 83       	std	Z+1, r23	; 0x01
     348:	82 83       	std	Z+2, r24	; 0x02
     34a:	93 83       	std	Z+3, r25	; 0x03
     34c:	9e 01       	movw	r18, r28
     34e:	2f 5f       	subi	r18, 0xFF	; 255
     350:	3f 4f       	sbci	r19, 0xFF	; 255
     352:	40 e0       	ldi	r20, 0x00	; 0
     354:	50 e4       	ldi	r21, 0x40	; 64
     356:	6c e1       	ldi	r22, 0x1C	; 28
     358:	76 e4       	ldi	r23, 0x46	; 70
     35a:	c8 01       	movw	r24, r16
     35c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     360:	d7 01       	movw	r26, r14
     362:	d0 96       	adiw	r26, 0x30	; 48
     364:	6d 93       	st	X+, r22
     366:	7d 93       	st	X+, r23
     368:	8d 93       	st	X+, r24
     36a:	9c 93       	st	X, r25
     36c:	d3 97       	sbiw	r26, 0x33	; 51
     36e:	9e 01       	movw	r18, r28
     370:	2f 5f       	subi	r18, 0xFF	; 255
     372:	3f 4f       	sbci	r19, 0xFF	; 255
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	50 e4       	ldi	r21, 0x40	; 64
     378:	6c e1       	ldi	r22, 0x1C	; 28
     37a:	76 e4       	ldi	r23, 0x46	; 70
     37c:	c8 01       	movw	r24, r16
     37e:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     382:	f7 01       	movw	r30, r14
     384:	64 ab       	std	Z+52, r22	; 0x34
     386:	75 ab       	std	Z+53, r23	; 0x35
     388:	86 ab       	std	Z+54, r24	; 0x36
     38a:	97 ab       	std	Z+55, r25	; 0x37
     38c:	9e 01       	movw	r18, r28
     38e:	2f 5f       	subi	r18, 0xFF	; 255
     390:	3f 4f       	sbci	r19, 0xFF	; 255
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	50 e4       	ldi	r21, 0x40	; 64
     396:	6c e1       	ldi	r22, 0x1C	; 28
     398:	76 e4       	ldi	r23, 0x46	; 70
     39a:	c8 01       	movw	r24, r16
     39c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     3a0:	d7 01       	movw	r26, r14
     3a2:	d8 96       	adiw	r26, 0x38	; 56
     3a4:	6d 93       	st	X+, r22
     3a6:	7d 93       	st	X+, r23
     3a8:	8d 93       	st	X+, r24
     3aa:	9c 93       	st	X, r25
     3ac:	db 97       	sbiw	r26, 0x3b	; 59
     3ae:	9e 01       	movw	r18, r28
     3b0:	2f 5f       	subi	r18, 0xFF	; 255
     3b2:	3f 4f       	sbci	r19, 0xFF	; 255
     3b4:	40 e0       	ldi	r20, 0x00	; 0
     3b6:	50 e4       	ldi	r21, 0x40	; 64
     3b8:	6c e1       	ldi	r22, 0x1C	; 28
     3ba:	76 e4       	ldi	r23, 0x46	; 70
     3bc:	c8 01       	movw	r24, r16
     3be:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     3c2:	f7 01       	movw	r30, r14
     3c4:	64 af       	std	Z+60, r22	; 0x3c
     3c6:	75 af       	std	Z+61, r23	; 0x3d
     3c8:	86 af       	std	Z+62, r24	; 0x3e
     3ca:	97 af       	std	Z+63, r25	; 0x3f
     3cc:	be 01       	movw	r22, r28
     3ce:	6f 5f       	subi	r22, 0xFF	; 255
     3d0:	7f 4f       	sbci	r23, 0xFF	; 255
     3d2:	c8 01       	movw	r24, r16
     3d4:	0e 94 75 0c 	call	0x18ea	; 0x18ea <buffer_get_int32>
     3d8:	60 93 30 05 	sts	0x0530, r22	; 0x800530 <values+0x40>
     3dc:	70 93 31 05 	sts	0x0531, r23	; 0x800531 <values+0x41>
     3e0:	80 93 32 05 	sts	0x0532, r24	; 0x800532 <values+0x42>
     3e4:	90 93 33 05 	sts	0x0533, r25	; 0x800533 <values+0x43>
     3e8:	be 01       	movw	r22, r28
     3ea:	6f 5f       	subi	r22, 0xFF	; 255
     3ec:	7f 4f       	sbci	r23, 0xFF	; 255
     3ee:	c8 01       	movw	r24, r16
     3f0:	0e 94 75 0c 	call	0x18ea	; 0x18ea <buffer_get_int32>
     3f4:	70 93 35 05 	sts	0x0535, r23	; 0x800535 <values+0x45>
     3f8:	60 93 34 05 	sts	0x0534, r22	; 0x800534 <values+0x44>
     3fc:	89 81       	ldd	r24, Y+1	; 0x01
     3fe:	9a 81       	ldd	r25, Y+2	; 0x02
     400:	ab 81       	ldd	r26, Y+3	; 0x03
     402:	bc 81       	ldd	r27, Y+4	; 0x04
     404:	ac 01       	movw	r20, r24
     406:	bd 01       	movw	r22, r26
     408:	4f 5f       	subi	r20, 0xFF	; 255
     40a:	5f 4f       	sbci	r21, 0xFF	; 255
     40c:	6f 4f       	sbci	r22, 0xFF	; 255
     40e:	7f 4f       	sbci	r23, 0xFF	; 255
     410:	49 83       	std	Y+1, r20	; 0x01
     412:	5a 83       	std	Y+2, r21	; 0x02
     414:	6b 83       	std	Y+3, r22	; 0x03
     416:	7c 83       	std	Y+4, r23	; 0x04
     418:	f8 01       	movw	r30, r16
     41a:	e8 0f       	add	r30, r24
     41c:	f9 1f       	adc	r31, r25
     41e:	80 81       	ld	r24, Z
     420:	80 93 36 05 	sts	0x0536, r24	; 0x800536 <values+0x46>
     424:	e0 91 14 03 	lds	r30, 0x0314	; 0x800314 <rx_value_func>
     428:	f0 91 15 03 	lds	r31, 0x0315	; 0x800315 <rx_value_func+0x1>
     42c:	30 97       	sbiw	r30, 0x00	; 0
     42e:	11 f4       	brne	.+4      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     430:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     434:	c7 01       	movw	r24, r14
     436:	09 95       	icall
     438:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     43c:	e0 91 12 03 	lds	r30, 0x0312	; 0x800312 <rx_printf_func>
     440:	f0 91 13 03 	lds	r31, 0x0313	; 0x800313 <rx_printf_func+0x1>
     444:	30 97       	sbiw	r30, 0x00	; 0
     446:	11 f4       	brne	.+4      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     448:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     44c:	d8 01       	movw	r26, r16
     44e:	a6 0f       	add	r26, r22
     450:	b7 1f       	adc	r27, r23
     452:	1c 92       	st	X, r1
     454:	c8 01       	movw	r24, r16
     456:	09 95       	icall
     458:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     45c:	9e 01       	movw	r18, r28
     45e:	2f 5f       	subi	r18, 0xFF	; 255
     460:	3f 4f       	sbci	r19, 0xFF	; 255
     462:	40 e0       	ldi	r20, 0x00	; 0
     464:	50 e5       	ldi	r21, 0x50	; 80
     466:	63 ec       	ldi	r22, 0xC3	; 195
     468:	77 e4       	ldi	r23, 0x47	; 71
     46a:	c8 01       	movw	r24, r16
     46c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     470:	60 93 e8 04 	sts	0x04E8, r22	; 0x8004e8 <rotor_pos>
     474:	70 93 e9 04 	sts	0x04E9, r23	; 0x8004e9 <rotor_pos+0x1>
     478:	80 93 ea 04 	sts	0x04EA, r24	; 0x8004ea <rotor_pos+0x2>
     47c:	90 93 eb 04 	sts	0x04EB, r25	; 0x8004eb <rotor_pos+0x3>
     480:	e0 91 10 03 	lds	r30, 0x0310	; 0x800310 <rx_rotor_pos_func>
     484:	f0 91 11 03 	lds	r31, 0x0311	; 0x800311 <rx_rotor_pos_func+0x1>
     488:	30 97       	sbiw	r30, 0x00	; 0
     48a:	11 f4       	brne	.+4      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     48c:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     490:	09 95       	icall
     492:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__stack+0x60d>
     496:	0f 2e       	mov	r0, r31
     498:	f0 ec       	ldi	r31, 0xC0	; 192
     49a:	cf 2e       	mov	r12, r31
     49c:	f3 e0       	ldi	r31, 0x03	; 3
     49e:	df 2e       	mov	r13, r31
     4a0:	f0 2d       	mov	r31, r0
     4a2:	d7 01       	movw	r26, r14
     4a4:	11 96       	adiw	r26, 0x01	; 1
     4a6:	8c 91       	ld	r24, X
     4a8:	11 97       	sbiw	r26, 0x01	; 1
     4aa:	f6 01       	movw	r30, r12
     4ac:	80 83       	st	Z, r24
     4ae:	12 96       	adiw	r26, 0x02	; 2
     4b0:	8c 91       	ld	r24, X
     4b2:	12 97       	sbiw	r26, 0x02	; 2
     4b4:	81 83       	std	Z+1, r24	; 0x01
     4b6:	13 96       	adiw	r26, 0x03	; 3
     4b8:	8c 91       	ld	r24, X
     4ba:	82 83       	std	Z+2, r24	; 0x02
     4bc:	84 e0       	ldi	r24, 0x04	; 4
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	a0 e0       	ldi	r26, 0x00	; 0
     4c2:	b0 e0       	ldi	r27, 0x00	; 0
     4c4:	89 83       	std	Y+1, r24	; 0x01
     4c6:	9a 83       	std	Y+2, r25	; 0x02
     4c8:	ab 83       	std	Y+3, r26	; 0x03
     4ca:	bc 83       	std	Y+4, r27	; 0x04
     4cc:	d7 01       	movw	r26, r14
     4ce:	14 96       	adiw	r26, 0x04	; 4
     4d0:	8c 91       	ld	r24, X
     4d2:	83 83       	std	Z+3, r24	; 0x03
     4d4:	9e 01       	movw	r18, r28
     4d6:	2f 5f       	subi	r18, 0xFF	; 255
     4d8:	3f 4f       	sbci	r19, 0xFF	; 255
     4da:	40 e0       	ldi	r20, 0x00	; 0
     4dc:	50 e0       	ldi	r21, 0x00	; 0
     4de:	6a e7       	ldi	r22, 0x7A	; 122
     4e0:	74 e4       	ldi	r23, 0x44	; 68
     4e2:	c8 01       	movw	r24, r16
     4e4:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     4e8:	f6 01       	movw	r30, r12
     4ea:	64 83       	std	Z+4, r22	; 0x04
     4ec:	75 83       	std	Z+5, r23	; 0x05
     4ee:	86 83       	std	Z+6, r24	; 0x06
     4f0:	97 83       	std	Z+7, r25	; 0x07
     4f2:	9e 01       	movw	r18, r28
     4f4:	2f 5f       	subi	r18, 0xFF	; 255
     4f6:	3f 4f       	sbci	r19, 0xFF	; 255
     4f8:	40 e0       	ldi	r20, 0x00	; 0
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	6a e7       	ldi	r22, 0x7A	; 122
     4fe:	74 e4       	ldi	r23, 0x44	; 68
     500:	c8 01       	movw	r24, r16
     502:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     506:	d6 01       	movw	r26, r12
     508:	18 96       	adiw	r26, 0x08	; 8
     50a:	6d 93       	st	X+, r22
     50c:	7d 93       	st	X+, r23
     50e:	8d 93       	st	X+, r24
     510:	9c 93       	st	X, r25
     512:	1b 97       	sbiw	r26, 0x0b	; 11
     514:	9e 01       	movw	r18, r28
     516:	2f 5f       	subi	r18, 0xFF	; 255
     518:	3f 4f       	sbci	r19, 0xFF	; 255
     51a:	40 e0       	ldi	r20, 0x00	; 0
     51c:	50 e0       	ldi	r21, 0x00	; 0
     51e:	6a e7       	ldi	r22, 0x7A	; 122
     520:	74 e4       	ldi	r23, 0x44	; 68
     522:	c8 01       	movw	r24, r16
     524:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     528:	f6 01       	movw	r30, r12
     52a:	64 87       	std	Z+12, r22	; 0x0c
     52c:	75 87       	std	Z+13, r23	; 0x0d
     52e:	86 87       	std	Z+14, r24	; 0x0e
     530:	97 87       	std	Z+15, r25	; 0x0f
     532:	9e 01       	movw	r18, r28
     534:	2f 5f       	subi	r18, 0xFF	; 255
     536:	3f 4f       	sbci	r19, 0xFF	; 255
     538:	40 e0       	ldi	r20, 0x00	; 0
     53a:	50 e0       	ldi	r21, 0x00	; 0
     53c:	6a e7       	ldi	r22, 0x7A	; 122
     53e:	74 e4       	ldi	r23, 0x44	; 68
     540:	c8 01       	movw	r24, r16
     542:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     546:	d6 01       	movw	r26, r12
     548:	50 96       	adiw	r26, 0x10	; 16
     54a:	6d 93       	st	X+, r22
     54c:	7d 93       	st	X+, r23
     54e:	8d 93       	st	X+, r24
     550:	9c 93       	st	X, r25
     552:	53 97       	sbiw	r26, 0x13	; 19
     554:	9e 01       	movw	r18, r28
     556:	2f 5f       	subi	r18, 0xFF	; 255
     558:	3f 4f       	sbci	r19, 0xFF	; 255
     55a:	40 e0       	ldi	r20, 0x00	; 0
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	6a e7       	ldi	r22, 0x7A	; 122
     560:	74 e4       	ldi	r23, 0x44	; 68
     562:	c8 01       	movw	r24, r16
     564:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     568:	f6 01       	movw	r30, r12
     56a:	64 8b       	std	Z+20, r22	; 0x14
     56c:	75 8b       	std	Z+21, r23	; 0x15
     56e:	86 8b       	std	Z+22, r24	; 0x16
     570:	97 8b       	std	Z+23, r25	; 0x17
     572:	9e 01       	movw	r18, r28
     574:	2f 5f       	subi	r18, 0xFF	; 255
     576:	3f 4f       	sbci	r19, 0xFF	; 255
     578:	40 e0       	ldi	r20, 0x00	; 0
     57a:	50 e0       	ldi	r21, 0x00	; 0
     57c:	6a e7       	ldi	r22, 0x7A	; 122
     57e:	74 e4       	ldi	r23, 0x44	; 68
     580:	c8 01       	movw	r24, r16
     582:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     586:	d6 01       	movw	r26, r12
     588:	58 96       	adiw	r26, 0x18	; 24
     58a:	6d 93       	st	X+, r22
     58c:	7d 93       	st	X+, r23
     58e:	8d 93       	st	X+, r24
     590:	9c 93       	st	X, r25
     592:	5b 97       	sbiw	r26, 0x1b	; 27
     594:	9e 01       	movw	r18, r28
     596:	2f 5f       	subi	r18, 0xFF	; 255
     598:	3f 4f       	sbci	r19, 0xFF	; 255
     59a:	40 e0       	ldi	r20, 0x00	; 0
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	6a e7       	ldi	r22, 0x7A	; 122
     5a0:	74 e4       	ldi	r23, 0x44	; 68
     5a2:	c8 01       	movw	r24, r16
     5a4:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     5a8:	f6 01       	movw	r30, r12
     5aa:	64 8f       	std	Z+28, r22	; 0x1c
     5ac:	75 8f       	std	Z+29, r23	; 0x1d
     5ae:	86 8f       	std	Z+30, r24	; 0x1e
     5b0:	97 8f       	std	Z+31, r25	; 0x1f
     5b2:	9e 01       	movw	r18, r28
     5b4:	2f 5f       	subi	r18, 0xFF	; 255
     5b6:	3f 4f       	sbci	r19, 0xFF	; 255
     5b8:	40 e0       	ldi	r20, 0x00	; 0
     5ba:	50 e0       	ldi	r21, 0x00	; 0
     5bc:	6a e7       	ldi	r22, 0x7A	; 122
     5be:	74 e4       	ldi	r23, 0x44	; 68
     5c0:	c8 01       	movw	r24, r16
     5c2:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     5c6:	d6 01       	movw	r26, r12
     5c8:	90 96       	adiw	r26, 0x20	; 32
     5ca:	6d 93       	st	X+, r22
     5cc:	7d 93       	st	X+, r23
     5ce:	8d 93       	st	X+, r24
     5d0:	9c 93       	st	X, r25
     5d2:	93 97       	sbiw	r26, 0x23	; 35
     5d4:	9e 01       	movw	r18, r28
     5d6:	2f 5f       	subi	r18, 0xFF	; 255
     5d8:	3f 4f       	sbci	r19, 0xFF	; 255
     5da:	40 e0       	ldi	r20, 0x00	; 0
     5dc:	50 e0       	ldi	r21, 0x00	; 0
     5de:	6a e7       	ldi	r22, 0x7A	; 122
     5e0:	74 e4       	ldi	r23, 0x44	; 68
     5e2:	c8 01       	movw	r24, r16
     5e4:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     5e8:	f6 01       	movw	r30, r12
     5ea:	64 a3       	std	Z+36, r22	; 0x24
     5ec:	75 a3       	std	Z+37, r23	; 0x25
     5ee:	86 a3       	std	Z+38, r24	; 0x26
     5f0:	97 a3       	std	Z+39, r25	; 0x27
     5f2:	9e 01       	movw	r18, r28
     5f4:	2f 5f       	subi	r18, 0xFF	; 255
     5f6:	3f 4f       	sbci	r19, 0xFF	; 255
     5f8:	40 e0       	ldi	r20, 0x00	; 0
     5fa:	50 e0       	ldi	r21, 0x00	; 0
     5fc:	6a e7       	ldi	r22, 0x7A	; 122
     5fe:	74 e4       	ldi	r23, 0x44	; 68
     600:	c8 01       	movw	r24, r16
     602:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     606:	d6 01       	movw	r26, r12
     608:	98 96       	adiw	r26, 0x28	; 40
     60a:	6d 93       	st	X+, r22
     60c:	7d 93       	st	X+, r23
     60e:	8d 93       	st	X+, r24
     610:	9c 93       	st	X, r25
     612:	9b 97       	sbiw	r26, 0x2b	; 43
     614:	9e 01       	movw	r18, r28
     616:	2f 5f       	subi	r18, 0xFF	; 255
     618:	3f 4f       	sbci	r19, 0xFF	; 255
     61a:	40 e0       	ldi	r20, 0x00	; 0
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	6a e7       	ldi	r22, 0x7A	; 122
     620:	74 e4       	ldi	r23, 0x44	; 68
     622:	c8 01       	movw	r24, r16
     624:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     628:	f6 01       	movw	r30, r12
     62a:	64 a7       	std	Z+44, r22	; 0x2c
     62c:	75 a7       	std	Z+45, r23	; 0x2d
     62e:	86 a7       	std	Z+46, r24	; 0x2e
     630:	97 a7       	std	Z+47, r25	; 0x2f
     632:	9e 01       	movw	r18, r28
     634:	2f 5f       	subi	r18, 0xFF	; 255
     636:	3f 4f       	sbci	r19, 0xFF	; 255
     638:	40 e0       	ldi	r20, 0x00	; 0
     63a:	50 e0       	ldi	r21, 0x00	; 0
     63c:	6a e7       	ldi	r22, 0x7A	; 122
     63e:	74 e4       	ldi	r23, 0x44	; 68
     640:	c8 01       	movw	r24, r16
     642:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     646:	d6 01       	movw	r26, r12
     648:	d0 96       	adiw	r26, 0x30	; 48
     64a:	6d 93       	st	X+, r22
     64c:	7d 93       	st	X+, r23
     64e:	8d 93       	st	X+, r24
     650:	9c 93       	st	X, r25
     652:	d3 97       	sbiw	r26, 0x33	; 51
     654:	9e 01       	movw	r18, r28
     656:	2f 5f       	subi	r18, 0xFF	; 255
     658:	3f 4f       	sbci	r19, 0xFF	; 255
     65a:	40 e0       	ldi	r20, 0x00	; 0
     65c:	50 e0       	ldi	r21, 0x00	; 0
     65e:	6a e7       	ldi	r22, 0x7A	; 122
     660:	74 e4       	ldi	r23, 0x44	; 68
     662:	c8 01       	movw	r24, r16
     664:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     668:	f6 01       	movw	r30, r12
     66a:	64 ab       	std	Z+52, r22	; 0x34
     66c:	75 ab       	std	Z+53, r23	; 0x35
     66e:	86 ab       	std	Z+54, r24	; 0x36
     670:	97 ab       	std	Z+55, r25	; 0x37
     672:	89 81       	ldd	r24, Y+1	; 0x01
     674:	9a 81       	ldd	r25, Y+2	; 0x02
     676:	ab 81       	ldd	r26, Y+3	; 0x03
     678:	bc 81       	ldd	r27, Y+4	; 0x04
     67a:	f8 01       	movw	r30, r16
     67c:	e8 0f       	add	r30, r24
     67e:	f9 1f       	adc	r31, r25
     680:	21 e0       	ldi	r18, 0x01	; 1
     682:	30 81       	ld	r19, Z
     684:	31 11       	cpse	r19, r1
     686:	01 c0       	rjmp	.+2      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	20 93 f8 03 	sts	0x03F8, r18	; 0x8003f8 <mcconf+0x38>
     68e:	ac 01       	movw	r20, r24
     690:	bd 01       	movw	r22, r26
     692:	4e 5f       	subi	r20, 0xFE	; 254
     694:	5f 4f       	sbci	r21, 0xFF	; 255
     696:	6f 4f       	sbci	r22, 0xFF	; 255
     698:	7f 4f       	sbci	r23, 0xFF	; 255
     69a:	49 83       	std	Y+1, r20	; 0x01
     69c:	5a 83       	std	Y+2, r21	; 0x02
     69e:	6b 83       	std	Y+3, r22	; 0x03
     6a0:	7c 83       	std	Y+4, r23	; 0x04
     6a2:	01 96       	adiw	r24, 0x01	; 1
     6a4:	a1 1d       	adc	r26, r1
     6a6:	b1 1d       	adc	r27, r1
     6a8:	f8 01       	movw	r30, r16
     6aa:	e8 0f       	add	r30, r24
     6ac:	f9 1f       	adc	r31, r25
     6ae:	21 e0       	ldi	r18, 0x01	; 1
     6b0:	80 81       	ld	r24, Z
     6b2:	81 11       	cpse	r24, r1
     6b4:	01 c0       	rjmp	.+2      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     6b6:	20 e0       	ldi	r18, 0x00	; 0
     6b8:	20 93 f9 03 	sts	0x03F9, r18	; 0x8003f9 <mcconf+0x39>
     6bc:	9e 01       	movw	r18, r28
     6be:	2f 5f       	subi	r18, 0xFF	; 255
     6c0:	3f 4f       	sbci	r19, 0xFF	; 255
     6c2:	40 e0       	ldi	r20, 0x00	; 0
     6c4:	50 e0       	ldi	r21, 0x00	; 0
     6c6:	6a e7       	ldi	r22, 0x7A	; 122
     6c8:	74 e4       	ldi	r23, 0x44	; 68
     6ca:	c8 01       	movw	r24, r16
     6cc:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     6d0:	60 93 fa 03 	sts	0x03FA, r22	; 0x8003fa <mcconf+0x3a>
     6d4:	70 93 fb 03 	sts	0x03FB, r23	; 0x8003fb <mcconf+0x3b>
     6d8:	80 93 fc 03 	sts	0x03FC, r24	; 0x8003fc <mcconf+0x3c>
     6dc:	90 93 fd 03 	sts	0x03FD, r25	; 0x8003fd <mcconf+0x3d>
     6e0:	9e 01       	movw	r18, r28
     6e2:	2f 5f       	subi	r18, 0xFF	; 255
     6e4:	3f 4f       	sbci	r19, 0xFF	; 255
     6e6:	40 e0       	ldi	r20, 0x00	; 0
     6e8:	50 e0       	ldi	r21, 0x00	; 0
     6ea:	6a e7       	ldi	r22, 0x7A	; 122
     6ec:	74 e4       	ldi	r23, 0x44	; 68
     6ee:	c8 01       	movw	r24, r16
     6f0:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     6f4:	60 93 fe 03 	sts	0x03FE, r22	; 0x8003fe <mcconf+0x3e>
     6f8:	70 93 ff 03 	sts	0x03FF, r23	; 0x8003ff <mcconf+0x3f>
     6fc:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <mcconf+0x40>
     700:	90 93 01 04 	sts	0x0401, r25	; 0x800401 <mcconf+0x41>
     704:	9e 01       	movw	r18, r28
     706:	2f 5f       	subi	r18, 0xFF	; 255
     708:	3f 4f       	sbci	r19, 0xFF	; 255
     70a:	40 e0       	ldi	r20, 0x00	; 0
     70c:	50 e0       	ldi	r21, 0x00	; 0
     70e:	6a e7       	ldi	r22, 0x7A	; 122
     710:	74 e4       	ldi	r23, 0x44	; 68
     712:	c8 01       	movw	r24, r16
     714:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     718:	60 93 02 04 	sts	0x0402, r22	; 0x800402 <mcconf+0x42>
     71c:	70 93 03 04 	sts	0x0403, r23	; 0x800403 <mcconf+0x43>
     720:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <mcconf+0x44>
     724:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <mcconf+0x45>
     728:	9e 01       	movw	r18, r28
     72a:	2f 5f       	subi	r18, 0xFF	; 255
     72c:	3f 4f       	sbci	r19, 0xFF	; 255
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	6a e7       	ldi	r22, 0x7A	; 122
     734:	74 e4       	ldi	r23, 0x44	; 68
     736:	c8 01       	movw	r24, r16
     738:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     73c:	60 93 06 04 	sts	0x0406, r22	; 0x800406 <mcconf+0x46>
     740:	70 93 07 04 	sts	0x0407, r23	; 0x800407 <mcconf+0x47>
     744:	80 93 08 04 	sts	0x0408, r24	; 0x800408 <mcconf+0x48>
     748:	90 93 09 04 	sts	0x0409, r25	; 0x800409 <mcconf+0x49>
     74c:	9e 01       	movw	r18, r28
     74e:	2f 5f       	subi	r18, 0xFF	; 255
     750:	3f 4f       	sbci	r19, 0xFF	; 255
     752:	40 e0       	ldi	r20, 0x00	; 0
     754:	54 e2       	ldi	r21, 0x24	; 36
     756:	64 e7       	ldi	r22, 0x74	; 116
     758:	79 e4       	ldi	r23, 0x49	; 73
     75a:	c8 01       	movw	r24, r16
     75c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     760:	60 93 0a 04 	sts	0x040A, r22	; 0x80040a <mcconf+0x4a>
     764:	70 93 0b 04 	sts	0x040B, r23	; 0x80040b <mcconf+0x4b>
     768:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <mcconf+0x4c>
     76c:	90 93 0d 04 	sts	0x040D, r25	; 0x80040d <mcconf+0x4d>
     770:	9e 01       	movw	r18, r28
     772:	2f 5f       	subi	r18, 0xFF	; 255
     774:	3f 4f       	sbci	r19, 0xFF	; 255
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	54 e2       	ldi	r21, 0x24	; 36
     77a:	64 e7       	ldi	r22, 0x74	; 116
     77c:	79 e4       	ldi	r23, 0x49	; 73
     77e:	c8 01       	movw	r24, r16
     780:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     784:	60 93 0e 04 	sts	0x040E, r22	; 0x80040e <mcconf+0x4e>
     788:	70 93 0f 04 	sts	0x040F, r23	; 0x80040f <mcconf+0x4f>
     78c:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <mcconf+0x50>
     790:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <mcconf+0x51>
     794:	9e 01       	movw	r18, r28
     796:	2f 5f       	subi	r18, 0xFF	; 255
     798:	3f 4f       	sbci	r19, 0xFF	; 255
     79a:	40 e0       	ldi	r20, 0x00	; 0
     79c:	50 e0       	ldi	r21, 0x00	; 0
     79e:	6a e7       	ldi	r22, 0x7A	; 122
     7a0:	74 e4       	ldi	r23, 0x44	; 68
     7a2:	c8 01       	movw	r24, r16
     7a4:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     7a8:	60 93 22 04 	sts	0x0422, r22	; 0x800422 <mcconf+0x62>
     7ac:	70 93 23 04 	sts	0x0423, r23	; 0x800423 <mcconf+0x63>
     7b0:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <mcconf+0x64>
     7b4:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <mcconf+0x65>
     7b8:	9e 01       	movw	r18, r28
     7ba:	2f 5f       	subi	r18, 0xFF	; 255
     7bc:	3f 4f       	sbci	r19, 0xFF	; 255
     7be:	40 e0       	ldi	r20, 0x00	; 0
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	6a e7       	ldi	r22, 0x7A	; 122
     7c4:	74 e4       	ldi	r23, 0x44	; 68
     7c6:	c8 01       	movw	r24, r16
     7c8:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     7cc:	60 93 26 04 	sts	0x0426, r22	; 0x800426 <mcconf+0x66>
     7d0:	70 93 27 04 	sts	0x0427, r23	; 0x800427 <mcconf+0x67>
     7d4:	80 93 28 04 	sts	0x0428, r24	; 0x800428 <mcconf+0x68>
     7d8:	90 93 29 04 	sts	0x0429, r25	; 0x800429 <mcconf+0x69>
     7dc:	9e 01       	movw	r18, r28
     7de:	2f 5f       	subi	r18, 0xFF	; 255
     7e0:	3f 4f       	sbci	r19, 0xFF	; 255
     7e2:	40 e0       	ldi	r20, 0x00	; 0
     7e4:	50 e0       	ldi	r21, 0x00	; 0
     7e6:	6a e7       	ldi	r22, 0x7A	; 122
     7e8:	74 e4       	ldi	r23, 0x44	; 68
     7ea:	c8 01       	movw	r24, r16
     7ec:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     7f0:	60 93 2a 04 	sts	0x042A, r22	; 0x80042a <mcconf+0x6a>
     7f4:	70 93 2b 04 	sts	0x042B, r23	; 0x80042b <mcconf+0x6b>
     7f8:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <mcconf+0x6c>
     7fc:	90 93 2d 04 	sts	0x042D, r25	; 0x80042d <mcconf+0x6d>
     800:	9e 01       	movw	r18, r28
     802:	2f 5f       	subi	r18, 0xFF	; 255
     804:	3f 4f       	sbci	r19, 0xFF	; 255
     806:	40 e0       	ldi	r20, 0x00	; 0
     808:	50 e0       	ldi	r21, 0x00	; 0
     80a:	6a e7       	ldi	r22, 0x7A	; 122
     80c:	74 e4       	ldi	r23, 0x44	; 68
     80e:	c8 01       	movw	r24, r16
     810:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     814:	60 93 2e 04 	sts	0x042E, r22	; 0x80042e <mcconf+0x6e>
     818:	70 93 2f 04 	sts	0x042F, r23	; 0x80042f <mcconf+0x6f>
     81c:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <mcconf+0x70>
     820:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <mcconf+0x71>
     824:	9e 01       	movw	r18, r28
     826:	2f 5f       	subi	r18, 0xFF	; 255
     828:	3f 4f       	sbci	r19, 0xFF	; 255
     82a:	40 e0       	ldi	r20, 0x00	; 0
     82c:	50 e0       	ldi	r21, 0x00	; 0
     82e:	6a e7       	ldi	r22, 0x7A	; 122
     830:	74 e4       	ldi	r23, 0x44	; 68
     832:	c8 01       	movw	r24, r16
     834:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     838:	60 93 32 04 	sts	0x0432, r22	; 0x800432 <mcconf+0x72>
     83c:	70 93 33 04 	sts	0x0433, r23	; 0x800433 <mcconf+0x73>
     840:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <mcconf+0x74>
     844:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <mcconf+0x75>
     848:	9e 01       	movw	r18, r28
     84a:	2f 5f       	subi	r18, 0xFF	; 255
     84c:	3f 4f       	sbci	r19, 0xFF	; 255
     84e:	40 e0       	ldi	r20, 0x00	; 0
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	6a e7       	ldi	r22, 0x7A	; 122
     854:	74 e4       	ldi	r23, 0x44	; 68
     856:	c8 01       	movw	r24, r16
     858:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     85c:	60 93 36 04 	sts	0x0436, r22	; 0x800436 <mcconf+0x76>
     860:	70 93 37 04 	sts	0x0437, r23	; 0x800437 <mcconf+0x77>
     864:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <mcconf+0x78>
     868:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <mcconf+0x79>
     86c:	9e 01       	movw	r18, r28
     86e:	2f 5f       	subi	r18, 0xFF	; 255
     870:	3f 4f       	sbci	r19, 0xFF	; 255
     872:	40 e0       	ldi	r20, 0x00	; 0
     874:	50 e0       	ldi	r21, 0x00	; 0
     876:	6a e7       	ldi	r22, 0x7A	; 122
     878:	74 e4       	ldi	r23, 0x44	; 68
     87a:	c8 01       	movw	r24, r16
     87c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     880:	60 93 3a 04 	sts	0x043A, r22	; 0x80043a <mcconf+0x7a>
     884:	70 93 3b 04 	sts	0x043B, r23	; 0x80043b <mcconf+0x7b>
     888:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <mcconf+0x7c>
     88c:	90 93 3d 04 	sts	0x043D, r25	; 0x80043d <mcconf+0x7d>
     890:	49 81       	ldd	r20, Y+1	; 0x01
     892:	5a 81       	ldd	r21, Y+2	; 0x02
     894:	6b 81       	ldd	r22, Y+3	; 0x03
     896:	7c 81       	ldd	r23, Y+4	; 0x04
     898:	f8 01       	movw	r30, r16
     89a:	e4 0f       	add	r30, r20
     89c:	f5 1f       	adc	r31, r21
     89e:	88 e0       	ldi	r24, 0x08	; 8
     8a0:	ae e3       	ldi	r26, 0x3E	; 62
     8a2:	b4 e0       	ldi	r27, 0x04	; 4
     8a4:	01 90       	ld	r0, Z+
     8a6:	0d 92       	st	X+, r0
     8a8:	8a 95       	dec	r24
     8aa:	e1 f7       	brne	.-8      	; 0x8a4 <__LOCK_REGION_LENGTH__+0x4a4>
     8ac:	48 5f       	subi	r20, 0xF8	; 248
     8ae:	5f 4f       	sbci	r21, 0xFF	; 255
     8b0:	6f 4f       	sbci	r22, 0xFF	; 255
     8b2:	7f 4f       	sbci	r23, 0xFF	; 255
     8b4:	49 83       	std	Y+1, r20	; 0x01
     8b6:	5a 83       	std	Y+2, r21	; 0x02
     8b8:	6b 83       	std	Y+3, r22	; 0x03
     8ba:	7c 83       	std	Y+4, r23	; 0x04
     8bc:	9e 01       	movw	r18, r28
     8be:	2f 5f       	subi	r18, 0xFF	; 255
     8c0:	3f 4f       	sbci	r19, 0xFF	; 255
     8c2:	40 e0       	ldi	r20, 0x00	; 0
     8c4:	50 e0       	ldi	r21, 0x00	; 0
     8c6:	6a e7       	ldi	r22, 0x7A	; 122
     8c8:	74 e4       	ldi	r23, 0x44	; 68
     8ca:	c8 01       	movw	r24, r16
     8cc:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     8d0:	60 93 46 04 	sts	0x0446, r22	; 0x800446 <mcconf+0x86>
     8d4:	70 93 47 04 	sts	0x0447, r23	; 0x800447 <mcconf+0x87>
     8d8:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <mcconf+0x88>
     8dc:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <mcconf+0x89>
     8e0:	9e 01       	movw	r18, r28
     8e2:	2f 5f       	subi	r18, 0xFF	; 255
     8e4:	3f 4f       	sbci	r19, 0xFF	; 255
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	50 e5       	ldi	r21, 0x50	; 80
     8ea:	63 ec       	ldi	r22, 0xC3	; 195
     8ec:	77 e4       	ldi	r23, 0x47	; 71
     8ee:	c8 01       	movw	r24, r16
     8f0:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     8f4:	60 93 4a 04 	sts	0x044A, r22	; 0x80044a <mcconf+0x8a>
     8f8:	70 93 4b 04 	sts	0x044B, r23	; 0x80044b <mcconf+0x8b>
     8fc:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <mcconf+0x8c>
     900:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <mcconf+0x8d>
     904:	9e 01       	movw	r18, r28
     906:	2f 5f       	subi	r18, 0xFF	; 255
     908:	3f 4f       	sbci	r19, 0xFF	; 255
     90a:	40 e0       	ldi	r20, 0x00	; 0
     90c:	50 e5       	ldi	r21, 0x50	; 80
     90e:	63 ec       	ldi	r22, 0xC3	; 195
     910:	77 e4       	ldi	r23, 0x47	; 71
     912:	c8 01       	movw	r24, r16
     914:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     918:	60 93 4e 04 	sts	0x044E, r22	; 0x80044e <mcconf+0x8e>
     91c:	70 93 4f 04 	sts	0x044F, r23	; 0x80044f <mcconf+0x8f>
     920:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <mcconf+0x90>
     924:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <mcconf+0x91>
     928:	9e 01       	movw	r18, r28
     92a:	2f 5f       	subi	r18, 0xFF	; 255
     92c:	3f 4f       	sbci	r19, 0xFF	; 255
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	6a e7       	ldi	r22, 0x7A	; 122
     934:	74 e4       	ldi	r23, 0x44	; 68
     936:	c8 01       	movw	r24, r16
     938:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     93c:	60 93 52 04 	sts	0x0452, r22	; 0x800452 <mcconf+0x92>
     940:	70 93 53 04 	sts	0x0453, r23	; 0x800453 <mcconf+0x93>
     944:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <mcconf+0x94>
     948:	90 93 55 04 	sts	0x0455, r25	; 0x800455 <mcconf+0x95>
     94c:	9e 01       	movw	r18, r28
     94e:	2f 5f       	subi	r18, 0xFF	; 255
     950:	3f 4f       	sbci	r19, 0xFF	; 255
     952:	40 e0       	ldi	r20, 0x00	; 0
     954:	54 e2       	ldi	r21, 0x24	; 36
     956:	64 e7       	ldi	r22, 0x74	; 116
     958:	79 e4       	ldi	r23, 0x49	; 73
     95a:	c8 01       	movw	r24, r16
     95c:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     960:	60 93 56 04 	sts	0x0456, r22	; 0x800456 <mcconf+0x96>
     964:	70 93 57 04 	sts	0x0457, r23	; 0x800457 <mcconf+0x97>
     968:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <mcconf+0x98>
     96c:	90 93 59 04 	sts	0x0459, r25	; 0x800459 <mcconf+0x99>
     970:	89 81       	ldd	r24, Y+1	; 0x01
     972:	9a 81       	ldd	r25, Y+2	; 0x02
     974:	ab 81       	ldd	r26, Y+3	; 0x03
     976:	bc 81       	ldd	r27, Y+4	; 0x04
     978:	ac 01       	movw	r20, r24
     97a:	bd 01       	movw	r22, r26
     97c:	4f 5f       	subi	r20, 0xFF	; 255
     97e:	5f 4f       	sbci	r21, 0xFF	; 255
     980:	6f 4f       	sbci	r22, 0xFF	; 255
     982:	7f 4f       	sbci	r23, 0xFF	; 255
     984:	49 83       	std	Y+1, r20	; 0x01
     986:	5a 83       	std	Y+2, r21	; 0x02
     988:	6b 83       	std	Y+3, r22	; 0x03
     98a:	7c 83       	std	Y+4, r23	; 0x04
     98c:	f8 01       	movw	r30, r16
     98e:	e8 0f       	add	r30, r24
     990:	f9 1f       	adc	r31, r25
     992:	21 e0       	ldi	r18, 0x01	; 1
     994:	80 81       	ld	r24, Z
     996:	81 11       	cpse	r24, r1
     998:	01 c0       	rjmp	.+2      	; 0x99c <__LOCK_REGION_LENGTH__+0x59c>
     99a:	20 e0       	ldi	r18, 0x00	; 0
     99c:	20 93 5e 04 	sts	0x045E, r18	; 0x80045e <mcconf+0x9e>
     9a0:	9e 01       	movw	r18, r28
     9a2:	2f 5f       	subi	r18, 0xFF	; 255
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	40 e0       	ldi	r20, 0x00	; 0
     9a8:	50 e0       	ldi	r21, 0x00	; 0
     9aa:	6a e7       	ldi	r22, 0x7A	; 122
     9ac:	74 e4       	ldi	r23, 0x44	; 68
     9ae:	c8 01       	movw	r24, r16
     9b0:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <buffer_get_float32>
     9b4:	60 93 5a 04 	sts	0x045A, r22	; 0x80045a <mcconf+0x9a>
     9b8:	70 93 5b 04 	sts	0x045B, r23	; 0x80045b <mcconf+0x9b>
     9bc:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <mcconf+0x9c>
     9c0:	90 93 5d 04 	sts	0x045D, r25	; 0x80045d <mcconf+0x9d>
     9c4:	9e 01       	movw	r18, r28
     9c6:	2f 5f       	subi	r18, 0xFF	; 255
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	40 e0       	ldi	r20, 0x00	; 0
     9cc:	50 e0       	ldi	r21, 0x00	; 0
     9ce:	6a e7       	ldi	r22, 0x7A	; 122
     9d0:	74 e4       	ldi	r23, 0x44	; 68
     9d2:	c8 01       	movw	r24, r16
     9d4:	fd d7       	rcall	.+4090   	; 0x19d0 <buffer_get_float32>
     9d6:	60 93 5f 04 	sts	0x045F, r22	; 0x80045f <mcconf+0x9f>
     9da:	70 93 60 04 	sts	0x0460, r23	; 0x800460 <mcconf+0xa0>
     9de:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <mcconf+0xa1>
     9e2:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <mcconf+0xa2>
     9e6:	89 81       	ldd	r24, Y+1	; 0x01
     9e8:	9a 81       	ldd	r25, Y+2	; 0x02
     9ea:	ab 81       	ldd	r26, Y+3	; 0x03
     9ec:	bc 81       	ldd	r27, Y+4	; 0x04
     9ee:	ac 01       	movw	r20, r24
     9f0:	bd 01       	movw	r22, r26
     9f2:	4f 5f       	subi	r20, 0xFF	; 255
     9f4:	5f 4f       	sbci	r21, 0xFF	; 255
     9f6:	6f 4f       	sbci	r22, 0xFF	; 255
     9f8:	7f 4f       	sbci	r23, 0xFF	; 255
     9fa:	49 83       	std	Y+1, r20	; 0x01
     9fc:	5a 83       	std	Y+2, r21	; 0x02
     9fe:	6b 83       	std	Y+3, r22	; 0x03
     a00:	7c 83       	std	Y+4, r23	; 0x04
     a02:	f8 01       	movw	r30, r16
     a04:	e8 0f       	add	r30, r24
     a06:	f9 1f       	adc	r31, r25
     a08:	80 81       	ld	r24, Z
     a0a:	80 93 97 04 	sts	0x0497, r24	; 0x800497 <mcconf+0xd7>
     a0e:	9e 01       	movw	r18, r28
     a10:	2f 5f       	subi	r18, 0xFF	; 255
     a12:	3f 4f       	sbci	r19, 0xFF	; 255
     a14:	40 e0       	ldi	r20, 0x00	; 0
     a16:	50 e0       	ldi	r21, 0x00	; 0
     a18:	6a e7       	ldi	r22, 0x7A	; 122
     a1a:	74 e4       	ldi	r23, 0x44	; 68
     a1c:	c8 01       	movw	r24, r16
     a1e:	d8 d7       	rcall	.+4016   	; 0x19d0 <buffer_get_float32>
     a20:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <mcconf+0xb3>
     a24:	70 93 74 04 	sts	0x0474, r23	; 0x800474 <mcconf+0xb4>
     a28:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <mcconf+0xb5>
     a2c:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <mcconf+0xb6>
     a30:	9e 01       	movw	r18, r28
     a32:	2f 5f       	subi	r18, 0xFF	; 255
     a34:	3f 4f       	sbci	r19, 0xFF	; 255
     a36:	40 e0       	ldi	r20, 0x00	; 0
     a38:	50 e0       	ldi	r21, 0x00	; 0
     a3a:	6a e7       	ldi	r22, 0x7A	; 122
     a3c:	74 e4       	ldi	r23, 0x44	; 68
     a3e:	c8 01       	movw	r24, r16
     a40:	c7 d7       	rcall	.+3982   	; 0x19d0 <buffer_get_float32>
     a42:	60 93 77 04 	sts	0x0477, r22	; 0x800477 <mcconf+0xb7>
     a46:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <mcconf+0xb8>
     a4a:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <mcconf+0xb9>
     a4e:	90 93 7a 04 	sts	0x047A, r25	; 0x80047a <mcconf+0xba>
     a52:	9e 01       	movw	r18, r28
     a54:	2f 5f       	subi	r18, 0xFF	; 255
     a56:	3f 4f       	sbci	r19, 0xFF	; 255
     a58:	40 e2       	ldi	r20, 0x20	; 32
     a5a:	5c eb       	ldi	r21, 0xBC	; 188
     a5c:	6e eb       	ldi	r22, 0xBE	; 190
     a5e:	7c e4       	ldi	r23, 0x4C	; 76
     a60:	c8 01       	movw	r24, r16
     a62:	b6 d7       	rcall	.+3948   	; 0x19d0 <buffer_get_float32>
     a64:	60 93 63 04 	sts	0x0463, r22	; 0x800463 <mcconf+0xa3>
     a68:	70 93 64 04 	sts	0x0464, r23	; 0x800464 <mcconf+0xa4>
     a6c:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <mcconf+0xa5>
     a70:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <mcconf+0xa6>
     a74:	9e 01       	movw	r18, r28
     a76:	2f 5f       	subi	r18, 0xFF	; 255
     a78:	3f 4f       	sbci	r19, 0xFF	; 255
     a7a:	40 e0       	ldi	r20, 0x00	; 0
     a7c:	50 e5       	ldi	r21, 0x50	; 80
     a7e:	63 ec       	ldi	r22, 0xC3	; 195
     a80:	77 e4       	ldi	r23, 0x47	; 71
     a82:	c8 01       	movw	r24, r16
     a84:	a5 d7       	rcall	.+3914   	; 0x19d0 <buffer_get_float32>
     a86:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <mcconf+0xa7>
     a8a:	70 93 68 04 	sts	0x0468, r23	; 0x800468 <mcconf+0xa8>
     a8e:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <mcconf+0xa9>
     a92:	90 93 6a 04 	sts	0x046A, r25	; 0x80046a <mcconf+0xaa>
     a96:	9e 01       	movw	r18, r28
     a98:	2f 5f       	subi	r18, 0xFF	; 255
     a9a:	3f 4f       	sbci	r19, 0xFF	; 255
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	50 e5       	ldi	r21, 0x50	; 80
     aa0:	63 ec       	ldi	r22, 0xC3	; 195
     aa2:	77 e4       	ldi	r23, 0x47	; 71
     aa4:	c8 01       	movw	r24, r16
     aa6:	94 d7       	rcall	.+3880   	; 0x19d0 <buffer_get_float32>
     aa8:	60 93 6b 04 	sts	0x046B, r22	; 0x80046b <mcconf+0xab>
     aac:	70 93 6c 04 	sts	0x046C, r23	; 0x80046c <mcconf+0xac>
     ab0:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <mcconf+0xad>
     ab4:	90 93 6e 04 	sts	0x046E, r25	; 0x80046e <mcconf+0xae>
     ab8:	9e 01       	movw	r18, r28
     aba:	2f 5f       	subi	r18, 0xFF	; 255
     abc:	3f 4f       	sbci	r19, 0xFF	; 255
     abe:	40 e0       	ldi	r20, 0x00	; 0
     ac0:	50 e0       	ldi	r21, 0x00	; 0
     ac2:	60 e8       	ldi	r22, 0x80	; 128
     ac4:	7f e3       	ldi	r23, 0x3F	; 63
     ac6:	c8 01       	movw	r24, r16
     ac8:	83 d7       	rcall	.+3846   	; 0x19d0 <buffer_get_float32>
     aca:	60 93 6f 04 	sts	0x046F, r22	; 0x80046f <mcconf+0xaf>
     ace:	70 93 70 04 	sts	0x0470, r23	; 0x800470 <mcconf+0xb0>
     ad2:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <mcconf+0xb1>
     ad6:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <mcconf+0xb2>
     ada:	9e 01       	movw	r18, r28
     adc:	2f 5f       	subi	r18, 0xFF	; 255
     ade:	3f 4f       	sbci	r19, 0xFF	; 255
     ae0:	40 e0       	ldi	r20, 0x00	; 0
     ae2:	50 e0       	ldi	r21, 0x00	; 0
     ae4:	6a e7       	ldi	r22, 0x7A	; 122
     ae6:	74 e4       	ldi	r23, 0x44	; 68
     ae8:	c8 01       	movw	r24, r16
     aea:	72 d7       	rcall	.+3812   	; 0x19d0 <buffer_get_float32>
     aec:	60 93 7b 04 	sts	0x047B, r22	; 0x80047b <mcconf+0xbb>
     af0:	70 93 7c 04 	sts	0x047C, r23	; 0x80047c <mcconf+0xbc>
     af4:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <mcconf+0xbd>
     af8:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <mcconf+0xbe>
     afc:	9e 01       	movw	r18, r28
     afe:	2f 5f       	subi	r18, 0xFF	; 255
     b00:	3f 4f       	sbci	r19, 0xFF	; 255
     b02:	40 e0       	ldi	r20, 0x00	; 0
     b04:	50 e0       	ldi	r21, 0x00	; 0
     b06:	6a e7       	ldi	r22, 0x7A	; 122
     b08:	74 e4       	ldi	r23, 0x44	; 68
     b0a:	c8 01       	movw	r24, r16
     b0c:	61 d7       	rcall	.+3778   	; 0x19d0 <buffer_get_float32>
     b0e:	60 93 7f 04 	sts	0x047F, r22	; 0x80047f <mcconf+0xbf>
     b12:	70 93 80 04 	sts	0x0480, r23	; 0x800480 <mcconf+0xc0>
     b16:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <mcconf+0xc1>
     b1a:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <mcconf+0xc2>
     b1e:	9e 01       	movw	r18, r28
     b20:	2f 5f       	subi	r18, 0xFF	; 255
     b22:	3f 4f       	sbci	r19, 0xFF	; 255
     b24:	40 e0       	ldi	r20, 0x00	; 0
     b26:	50 e0       	ldi	r21, 0x00	; 0
     b28:	6a e7       	ldi	r22, 0x7A	; 122
     b2a:	74 e4       	ldi	r23, 0x44	; 68
     b2c:	c8 01       	movw	r24, r16
     b2e:	50 d7       	rcall	.+3744   	; 0x19d0 <buffer_get_float32>
     b30:	60 93 83 04 	sts	0x0483, r22	; 0x800483 <mcconf+0xc3>
     b34:	70 93 84 04 	sts	0x0484, r23	; 0x800484 <mcconf+0xc4>
     b38:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <mcconf+0xc5>
     b3c:	90 93 86 04 	sts	0x0486, r25	; 0x800486 <mcconf+0xc6>
     b40:	9e 01       	movw	r18, r28
     b42:	2f 5f       	subi	r18, 0xFF	; 255
     b44:	3f 4f       	sbci	r19, 0xFF	; 255
     b46:	40 e0       	ldi	r20, 0x00	; 0
     b48:	50 e0       	ldi	r21, 0x00	; 0
     b4a:	6a e7       	ldi	r22, 0x7A	; 122
     b4c:	74 e4       	ldi	r23, 0x44	; 68
     b4e:	c8 01       	movw	r24, r16
     b50:	3f d7       	rcall	.+3710   	; 0x19d0 <buffer_get_float32>
     b52:	60 93 87 04 	sts	0x0487, r22	; 0x800487 <mcconf+0xc7>
     b56:	70 93 88 04 	sts	0x0488, r23	; 0x800488 <mcconf+0xc8>
     b5a:	80 93 89 04 	sts	0x0489, r24	; 0x800489 <mcconf+0xc9>
     b5e:	90 93 8a 04 	sts	0x048A, r25	; 0x80048a <mcconf+0xca>
     b62:	9e 01       	movw	r18, r28
     b64:	2f 5f       	subi	r18, 0xFF	; 255
     b66:	3f 4f       	sbci	r19, 0xFF	; 255
     b68:	40 e0       	ldi	r20, 0x00	; 0
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	6a e7       	ldi	r22, 0x7A	; 122
     b6e:	74 e4       	ldi	r23, 0x44	; 68
     b70:	c8 01       	movw	r24, r16
     b72:	2e d7       	rcall	.+3676   	; 0x19d0 <buffer_get_float32>
     b74:	60 93 8b 04 	sts	0x048B, r22	; 0x80048b <mcconf+0xcb>
     b78:	70 93 8c 04 	sts	0x048C, r23	; 0x80048c <mcconf+0xcc>
     b7c:	80 93 8d 04 	sts	0x048D, r24	; 0x80048d <mcconf+0xcd>
     b80:	90 93 8e 04 	sts	0x048E, r25	; 0x80048e <mcconf+0xce>
     b84:	9e 01       	movw	r18, r28
     b86:	2f 5f       	subi	r18, 0xFF	; 255
     b88:	3f 4f       	sbci	r19, 0xFF	; 255
     b8a:	40 e0       	ldi	r20, 0x00	; 0
     b8c:	50 e0       	ldi	r21, 0x00	; 0
     b8e:	6a e7       	ldi	r22, 0x7A	; 122
     b90:	74 e4       	ldi	r23, 0x44	; 68
     b92:	c8 01       	movw	r24, r16
     b94:	1d d7       	rcall	.+3642   	; 0x19d0 <buffer_get_float32>
     b96:	60 93 8f 04 	sts	0x048F, r22	; 0x80048f <mcconf+0xcf>
     b9a:	70 93 90 04 	sts	0x0490, r23	; 0x800490 <mcconf+0xd0>
     b9e:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <mcconf+0xd1>
     ba2:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <mcconf+0xd2>
     ba6:	9e 01       	movw	r18, r28
     ba8:	2f 5f       	subi	r18, 0xFF	; 255
     baa:	3f 4f       	sbci	r19, 0xFF	; 255
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	50 e0       	ldi	r21, 0x00	; 0
     bb0:	6a e7       	ldi	r22, 0x7A	; 122
     bb2:	74 e4       	ldi	r23, 0x44	; 68
     bb4:	c8 01       	movw	r24, r16
     bb6:	0c d7       	rcall	.+3608   	; 0x19d0 <buffer_get_float32>
     bb8:	60 93 93 04 	sts	0x0493, r22	; 0x800493 <mcconf+0xd3>
     bbc:	70 93 94 04 	sts	0x0494, r23	; 0x800494 <mcconf+0xd4>
     bc0:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <mcconf+0xd5>
     bc4:	90 93 96 04 	sts	0x0496, r25	; 0x800496 <mcconf+0xd6>
     bc8:	49 81       	ldd	r20, Y+1	; 0x01
     bca:	5a 81       	ldd	r21, Y+2	; 0x02
     bcc:	6b 81       	ldd	r22, Y+3	; 0x03
     bce:	7c 81       	ldd	r23, Y+4	; 0x04
     bd0:	f8 01       	movw	r30, r16
     bd2:	e4 0f       	add	r30, r20
     bd4:	f5 1f       	adc	r31, r21
     bd6:	88 e0       	ldi	r24, 0x08	; 8
     bd8:	a8 e9       	ldi	r26, 0x98	; 152
     bda:	b4 e0       	ldi	r27, 0x04	; 4
     bdc:	01 90       	ld	r0, Z+
     bde:	0d 92       	st	X+, r0
     be0:	8a 95       	dec	r24
     be2:	e1 f7       	brne	.-8      	; 0xbdc <__LOCK_REGION_LENGTH__+0x7dc>
     be4:	48 5f       	subi	r20, 0xF8	; 248
     be6:	5f 4f       	sbci	r21, 0xFF	; 255
     be8:	6f 4f       	sbci	r22, 0xFF	; 255
     bea:	7f 4f       	sbci	r23, 0xFF	; 255
     bec:	49 83       	std	Y+1, r20	; 0x01
     bee:	5a 83       	std	Y+2, r21	; 0x02
     bf0:	6b 83       	std	Y+3, r22	; 0x03
     bf2:	7c 83       	std	Y+4, r23	; 0x04
     bf4:	9e 01       	movw	r18, r28
     bf6:	2f 5f       	subi	r18, 0xFF	; 255
     bf8:	3f 4f       	sbci	r19, 0xFF	; 255
     bfa:	40 e0       	ldi	r20, 0x00	; 0
     bfc:	50 e0       	ldi	r21, 0x00	; 0
     bfe:	6a e7       	ldi	r22, 0x7A	; 122
     c00:	74 e4       	ldi	r23, 0x44	; 68
     c02:	c8 01       	movw	r24, r16
     c04:	e5 d6       	rcall	.+3530   	; 0x19d0 <buffer_get_float32>
     c06:	60 93 a0 04 	sts	0x04A0, r22	; 0x8004a0 <mcconf+0xe0>
     c0a:	70 93 a1 04 	sts	0x04A1, r23	; 0x8004a1 <mcconf+0xe1>
     c0e:	80 93 a2 04 	sts	0x04A2, r24	; 0x8004a2 <mcconf+0xe2>
     c12:	90 93 a3 04 	sts	0x04A3, r25	; 0x8004a3 <mcconf+0xe3>
     c16:	9e 01       	movw	r18, r28
     c18:	2f 5f       	subi	r18, 0xFF	; 255
     c1a:	3f 4f       	sbci	r19, 0xFF	; 255
     c1c:	40 e0       	ldi	r20, 0x00	; 0
     c1e:	54 e2       	ldi	r21, 0x24	; 36
     c20:	64 e7       	ldi	r22, 0x74	; 116
     c22:	79 e4       	ldi	r23, 0x49	; 73
     c24:	c8 01       	movw	r24, r16
     c26:	d4 d6       	rcall	.+3496   	; 0x19d0 <buffer_get_float32>
     c28:	60 93 a4 04 	sts	0x04A4, r22	; 0x8004a4 <mcconf+0xe4>
     c2c:	70 93 a5 04 	sts	0x04A5, r23	; 0x8004a5 <mcconf+0xe5>
     c30:	80 93 a6 04 	sts	0x04A6, r24	; 0x8004a6 <mcconf+0xe6>
     c34:	90 93 a7 04 	sts	0x04A7, r25	; 0x8004a7 <mcconf+0xe7>
     c38:	9e 01       	movw	r18, r28
     c3a:	2f 5f       	subi	r18, 0xFF	; 255
     c3c:	3f 4f       	sbci	r19, 0xFF	; 255
     c3e:	40 e0       	ldi	r20, 0x00	; 0
     c40:	54 e2       	ldi	r21, 0x24	; 36
     c42:	64 e7       	ldi	r22, 0x74	; 116
     c44:	79 e4       	ldi	r23, 0x49	; 73
     c46:	c8 01       	movw	r24, r16
     c48:	c3 d6       	rcall	.+3462   	; 0x19d0 <buffer_get_float32>
     c4a:	60 93 a8 04 	sts	0x04A8, r22	; 0x8004a8 <mcconf+0xe8>
     c4e:	70 93 a9 04 	sts	0x04A9, r23	; 0x8004a9 <mcconf+0xe9>
     c52:	80 93 aa 04 	sts	0x04AA, r24	; 0x8004aa <mcconf+0xea>
     c56:	90 93 ab 04 	sts	0x04AB, r25	; 0x8004ab <mcconf+0xeb>
     c5a:	9e 01       	movw	r18, r28
     c5c:	2f 5f       	subi	r18, 0xFF	; 255
     c5e:	3f 4f       	sbci	r19, 0xFF	; 255
     c60:	40 e0       	ldi	r20, 0x00	; 0
     c62:	54 e2       	ldi	r21, 0x24	; 36
     c64:	64 e7       	ldi	r22, 0x74	; 116
     c66:	79 e4       	ldi	r23, 0x49	; 73
     c68:	c8 01       	movw	r24, r16
     c6a:	b2 d6       	rcall	.+3428   	; 0x19d0 <buffer_get_float32>
     c6c:	60 93 ac 04 	sts	0x04AC, r22	; 0x8004ac <mcconf+0xec>
     c70:	70 93 ad 04 	sts	0x04AD, r23	; 0x8004ad <mcconf+0xed>
     c74:	80 93 ae 04 	sts	0x04AE, r24	; 0x8004ae <mcconf+0xee>
     c78:	90 93 af 04 	sts	0x04AF, r25	; 0x8004af <mcconf+0xef>
     c7c:	9e 01       	movw	r18, r28
     c7e:	2f 5f       	subi	r18, 0xFF	; 255
     c80:	3f 4f       	sbci	r19, 0xFF	; 255
     c82:	40 e0       	ldi	r20, 0x00	; 0
     c84:	50 e0       	ldi	r21, 0x00	; 0
     c86:	6a e7       	ldi	r22, 0x7A	; 122
     c88:	74 e4       	ldi	r23, 0x44	; 68
     c8a:	c8 01       	movw	r24, r16
     c8c:	a1 d6       	rcall	.+3394   	; 0x19d0 <buffer_get_float32>
     c8e:	60 93 b0 04 	sts	0x04B0, r22	; 0x8004b0 <mcconf+0xf0>
     c92:	70 93 b1 04 	sts	0x04B1, r23	; 0x8004b1 <mcconf+0xf1>
     c96:	80 93 b2 04 	sts	0x04B2, r24	; 0x8004b2 <mcconf+0xf2>
     c9a:	90 93 b3 04 	sts	0x04B3, r25	; 0x8004b3 <mcconf+0xf3>
     c9e:	9e 01       	movw	r18, r28
     ca0:	2f 5f       	subi	r18, 0xFF	; 255
     ca2:	3f 4f       	sbci	r19, 0xFF	; 255
     ca4:	40 e0       	ldi	r20, 0x00	; 0
     ca6:	54 e2       	ldi	r21, 0x24	; 36
     ca8:	64 e7       	ldi	r22, 0x74	; 116
     caa:	79 e4       	ldi	r23, 0x49	; 73
     cac:	c8 01       	movw	r24, r16
     cae:	90 d6       	rcall	.+3360   	; 0x19d0 <buffer_get_float32>
     cb0:	60 93 b4 04 	sts	0x04B4, r22	; 0x8004b4 <mcconf+0xf4>
     cb4:	70 93 b5 04 	sts	0x04B5, r23	; 0x8004b5 <mcconf+0xf5>
     cb8:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <mcconf+0xf6>
     cbc:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <mcconf+0xf7>
     cc0:	9e 01       	movw	r18, r28
     cc2:	2f 5f       	subi	r18, 0xFF	; 255
     cc4:	3f 4f       	sbci	r19, 0xFF	; 255
     cc6:	40 e0       	ldi	r20, 0x00	; 0
     cc8:	54 e2       	ldi	r21, 0x24	; 36
     cca:	64 e7       	ldi	r22, 0x74	; 116
     ccc:	79 e4       	ldi	r23, 0x49	; 73
     cce:	c8 01       	movw	r24, r16
     cd0:	7f d6       	rcall	.+3326   	; 0x19d0 <buffer_get_float32>
     cd2:	60 93 b8 04 	sts	0x04B8, r22	; 0x8004b8 <mcconf+0xf8>
     cd6:	70 93 b9 04 	sts	0x04B9, r23	; 0x8004b9 <mcconf+0xf9>
     cda:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <mcconf+0xfa>
     cde:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <mcconf+0xfb>
     ce2:	9e 01       	movw	r18, r28
     ce4:	2f 5f       	subi	r18, 0xFF	; 255
     ce6:	3f 4f       	sbci	r19, 0xFF	; 255
     ce8:	40 e0       	ldi	r20, 0x00	; 0
     cea:	54 e2       	ldi	r21, 0x24	; 36
     cec:	64 e7       	ldi	r22, 0x74	; 116
     cee:	79 e4       	ldi	r23, 0x49	; 73
     cf0:	c8 01       	movw	r24, r16
     cf2:	6e d6       	rcall	.+3292   	; 0x19d0 <buffer_get_float32>
     cf4:	60 93 bc 04 	sts	0x04BC, r22	; 0x8004bc <mcconf+0xfc>
     cf8:	70 93 bd 04 	sts	0x04BD, r23	; 0x8004bd <mcconf+0xfd>
     cfc:	80 93 be 04 	sts	0x04BE, r24	; 0x8004be <mcconf+0xfe>
     d00:	90 93 bf 04 	sts	0x04BF, r25	; 0x8004bf <mcconf+0xff>
     d04:	9e 01       	movw	r18, r28
     d06:	2f 5f       	subi	r18, 0xFF	; 255
     d08:	3f 4f       	sbci	r19, 0xFF	; 255
     d0a:	40 e0       	ldi	r20, 0x00	; 0
     d0c:	50 e5       	ldi	r21, 0x50	; 80
     d0e:	63 ec       	ldi	r22, 0xC3	; 195
     d10:	77 e4       	ldi	r23, 0x47	; 71
     d12:	c8 01       	movw	r24, r16
     d14:	5d d6       	rcall	.+3258   	; 0x19d0 <buffer_get_float32>
     d16:	60 93 c0 04 	sts	0x04C0, r22	; 0x8004c0 <mcconf+0x100>
     d1a:	70 93 c1 04 	sts	0x04C1, r23	; 0x8004c1 <mcconf+0x101>
     d1e:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <mcconf+0x102>
     d22:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <mcconf+0x103>
     d26:	9e 01       	movw	r18, r28
     d28:	2f 5f       	subi	r18, 0xFF	; 255
     d2a:	3f 4f       	sbci	r19, 0xFF	; 255
     d2c:	40 e0       	ldi	r20, 0x00	; 0
     d2e:	54 e2       	ldi	r21, 0x24	; 36
     d30:	64 e7       	ldi	r22, 0x74	; 116
     d32:	79 e4       	ldi	r23, 0x49	; 73
     d34:	c8 01       	movw	r24, r16
     d36:	4c d6       	rcall	.+3224   	; 0x19d0 <buffer_get_float32>
     d38:	60 93 c4 04 	sts	0x04C4, r22	; 0x8004c4 <mcconf+0x104>
     d3c:	70 93 c5 04 	sts	0x04C5, r23	; 0x8004c5 <mcconf+0x105>
     d40:	80 93 c6 04 	sts	0x04C6, r24	; 0x8004c6 <mcconf+0x106>
     d44:	90 93 c7 04 	sts	0x04C7, r25	; 0x8004c7 <mcconf+0x107>
     d48:	9e 01       	movw	r18, r28
     d4a:	2f 5f       	subi	r18, 0xFF	; 255
     d4c:	3f 4f       	sbci	r19, 0xFF	; 255
     d4e:	40 e0       	ldi	r20, 0x00	; 0
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	6a e7       	ldi	r22, 0x7A	; 122
     d54:	74 e4       	ldi	r23, 0x44	; 68
     d56:	c8 01       	movw	r24, r16
     d58:	3b d6       	rcall	.+3190   	; 0x19d0 <buffer_get_float32>
     d5a:	60 93 c8 04 	sts	0x04C8, r22	; 0x8004c8 <mcconf+0x108>
     d5e:	70 93 c9 04 	sts	0x04C9, r23	; 0x8004c9 <mcconf+0x109>
     d62:	80 93 ca 04 	sts	0x04CA, r24	; 0x8004ca <mcconf+0x10a>
     d66:	90 93 cb 04 	sts	0x04CB, r25	; 0x8004cb <mcconf+0x10b>
     d6a:	9e 01       	movw	r18, r28
     d6c:	2f 5f       	subi	r18, 0xFF	; 255
     d6e:	3f 4f       	sbci	r19, 0xFF	; 255
     d70:	40 e0       	ldi	r20, 0x00	; 0
     d72:	54 e2       	ldi	r21, 0x24	; 36
     d74:	64 e7       	ldi	r22, 0x74	; 116
     d76:	79 e4       	ldi	r23, 0x49	; 73
     d78:	c8 01       	movw	r24, r16
     d7a:	2a d6       	rcall	.+3156   	; 0x19d0 <buffer_get_float32>
     d7c:	60 93 cc 04 	sts	0x04CC, r22	; 0x8004cc <mcconf+0x10c>
     d80:	70 93 cd 04 	sts	0x04CD, r23	; 0x8004cd <mcconf+0x10d>
     d84:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <mcconf+0x10e>
     d88:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <mcconf+0x10f>
     d8c:	9e 01       	movw	r18, r28
     d8e:	2f 5f       	subi	r18, 0xFF	; 255
     d90:	3f 4f       	sbci	r19, 0xFF	; 255
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	54 e2       	ldi	r21, 0x24	; 36
     d96:	64 e7       	ldi	r22, 0x74	; 116
     d98:	79 e4       	ldi	r23, 0x49	; 73
     d9a:	c8 01       	movw	r24, r16
     d9c:	19 d6       	rcall	.+3122   	; 0x19d0 <buffer_get_float32>
     d9e:	60 93 d0 04 	sts	0x04D0, r22	; 0x8004d0 <mcconf+0x110>
     da2:	70 93 d1 04 	sts	0x04D1, r23	; 0x8004d1 <mcconf+0x111>
     da6:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <mcconf+0x112>
     daa:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <mcconf+0x113>
     dae:	be 01       	movw	r22, r28
     db0:	6f 5f       	subi	r22, 0xFF	; 255
     db2:	7f 4f       	sbci	r23, 0xFF	; 255
     db4:	c8 01       	movw	r24, r16
     db6:	99 d5       	rcall	.+2866   	; 0x18ea <buffer_get_int32>
     db8:	60 93 d4 04 	sts	0x04D4, r22	; 0x8004d4 <mcconf+0x114>
     dbc:	70 93 d5 04 	sts	0x04D5, r23	; 0x8004d5 <mcconf+0x115>
     dc0:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <mcconf+0x116>
     dc4:	90 93 d7 04 	sts	0x04D7, r25	; 0x8004d7 <mcconf+0x117>
     dc8:	9e 01       	movw	r18, r28
     dca:	2f 5f       	subi	r18, 0xFF	; 255
     dcc:	3f 4f       	sbci	r19, 0xFF	; 255
     dce:	40 e0       	ldi	r20, 0x00	; 0
     dd0:	54 e2       	ldi	r21, 0x24	; 36
     dd2:	64 e7       	ldi	r22, 0x74	; 116
     dd4:	79 e4       	ldi	r23, 0x49	; 73
     dd6:	c8 01       	movw	r24, r16
     dd8:	fb d5       	rcall	.+3062   	; 0x19d0 <buffer_get_float32>
     dda:	60 93 d8 04 	sts	0x04D8, r22	; 0x8004d8 <mcconf+0x118>
     dde:	70 93 d9 04 	sts	0x04D9, r23	; 0x8004d9 <mcconf+0x119>
     de2:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <mcconf+0x11a>
     de6:	90 93 db 04 	sts	0x04DB, r25	; 0x8004db <mcconf+0x11b>
     dea:	9e 01       	movw	r18, r28
     dec:	2f 5f       	subi	r18, 0xFF	; 255
     dee:	3f 4f       	sbci	r19, 0xFF	; 255
     df0:	40 e0       	ldi	r20, 0x00	; 0
     df2:	54 e2       	ldi	r21, 0x24	; 36
     df4:	64 e7       	ldi	r22, 0x74	; 116
     df6:	79 e4       	ldi	r23, 0x49	; 73
     df8:	c8 01       	movw	r24, r16
     dfa:	ea d5       	rcall	.+3028   	; 0x19d0 <buffer_get_float32>
     dfc:	60 93 dc 04 	sts	0x04DC, r22	; 0x8004dc <mcconf+0x11c>
     e00:	70 93 dd 04 	sts	0x04DD, r23	; 0x8004dd <mcconf+0x11d>
     e04:	80 93 de 04 	sts	0x04DE, r24	; 0x8004de <mcconf+0x11e>
     e08:	90 93 df 04 	sts	0x04DF, r25	; 0x8004df <mcconf+0x11f>
     e0c:	9e 01       	movw	r18, r28
     e0e:	2f 5f       	subi	r18, 0xFF	; 255
     e10:	3f 4f       	sbci	r19, 0xFF	; 255
     e12:	40 e0       	ldi	r20, 0x00	; 0
     e14:	54 e2       	ldi	r21, 0x24	; 36
     e16:	64 e7       	ldi	r22, 0x74	; 116
     e18:	79 e4       	ldi	r23, 0x49	; 73
     e1a:	c8 01       	movw	r24, r16
     e1c:	d9 d5       	rcall	.+2994   	; 0x19d0 <buffer_get_float32>
     e1e:	60 93 e0 04 	sts	0x04E0, r22	; 0x8004e0 <mcconf+0x120>
     e22:	70 93 e1 04 	sts	0x04E1, r23	; 0x8004e1 <mcconf+0x121>
     e26:	80 93 e2 04 	sts	0x04E2, r24	; 0x8004e2 <mcconf+0x122>
     e2a:	90 93 e3 04 	sts	0x04E3, r25	; 0x8004e3 <mcconf+0x123>
     e2e:	be 01       	movw	r22, r28
     e30:	6f 5f       	subi	r22, 0xFF	; 255
     e32:	7f 4f       	sbci	r23, 0xFF	; 255
     e34:	c8 01       	movw	r24, r16
     e36:	88 d5       	rcall	.+2832   	; 0x1948 <buffer_get_uint32>
     e38:	60 93 e4 04 	sts	0x04E4, r22	; 0x8004e4 <mcconf+0x124>
     e3c:	70 93 e5 04 	sts	0x04E5, r23	; 0x8004e5 <mcconf+0x125>
     e40:	80 93 e6 04 	sts	0x04E6, r24	; 0x8004e6 <mcconf+0x126>
     e44:	90 93 e7 04 	sts	0x04E7, r25	; 0x8004e7 <mcconf+0x127>
     e48:	e0 91 0e 03 	lds	r30, 0x030E	; 0x80030e <rx_mcconf_func>
     e4c:	f0 91 0f 03 	lds	r31, 0x030F	; 0x80030f <rx_mcconf_func+0x1>
     e50:	30 97       	sbiw	r30, 0x00	; 0
     e52:	09 f4       	brne	.+2      	; 0xe56 <__LOCK_REGION_LENGTH__+0xa56>
     e54:	5b c4       	rjmp	.+2230   	; 0x170c <__stack+0x60d>
     e56:	80 ec       	ldi	r24, 0xC0	; 192
     e58:	93 e0       	ldi	r25, 0x03	; 3
     e5a:	09 95       	icall
     e5c:	57 c4       	rjmp	.+2222   	; 0x170c <__stack+0x60d>
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	a0 e0       	ldi	r26, 0x00	; 0
     e64:	b0 e0       	ldi	r27, 0x00	; 0
     e66:	89 83       	std	Y+1, r24	; 0x01
     e68:	9a 83       	std	Y+2, r25	; 0x02
     e6a:	ab 83       	std	Y+3, r26	; 0x03
     e6c:	bc 83       	std	Y+4, r27	; 0x04
     e6e:	0f 2e       	mov	r0, r31
     e70:	ff e3       	ldi	r31, 0x3F	; 63
     e72:	cf 2e       	mov	r12, r31
     e74:	f3 e0       	ldi	r31, 0x03	; 3
     e76:	df 2e       	mov	r13, r31
     e78:	f0 2d       	mov	r31, r0
     e7a:	d7 01       	movw	r26, r14
     e7c:	11 96       	adiw	r26, 0x01	; 1
     e7e:	8c 91       	ld	r24, X
     e80:	f6 01       	movw	r30, r12
     e82:	80 83       	st	Z, r24
     e84:	be 01       	movw	r22, r28
     e86:	6f 5f       	subi	r22, 0xFF	; 255
     e88:	7f 4f       	sbci	r23, 0xFF	; 255
     e8a:	c8 01       	movw	r24, r16
     e8c:	5d d5       	rcall	.+2746   	; 0x1948 <buffer_get_uint32>
     e8e:	d6 01       	movw	r26, r12
     e90:	11 96       	adiw	r26, 0x01	; 1
     e92:	6d 93       	st	X+, r22
     e94:	7d 93       	st	X+, r23
     e96:	8d 93       	st	X+, r24
     e98:	9c 93       	st	X, r25
     e9a:	14 97       	sbiw	r26, 0x04	; 4
     e9c:	9e 01       	movw	r18, r28
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	40 e0       	ldi	r20, 0x00	; 0
     ea4:	50 e0       	ldi	r21, 0x00	; 0
     ea6:	6a e7       	ldi	r22, 0x7A	; 122
     ea8:	74 e4       	ldi	r23, 0x44	; 68
     eaa:	c8 01       	movw	r24, r16
     eac:	91 d5       	rcall	.+2850   	; 0x19d0 <buffer_get_float32>
     eae:	f6 01       	movw	r30, r12
     eb0:	65 83       	std	Z+5, r22	; 0x05
     eb2:	76 83       	std	Z+6, r23	; 0x06
     eb4:	87 83       	std	Z+7, r24	; 0x07
     eb6:	90 87       	std	Z+8, r25	; 0x08
     eb8:	89 81       	ldd	r24, Y+1	; 0x01
     eba:	9a 81       	ldd	r25, Y+2	; 0x02
     ebc:	ab 81       	ldd	r26, Y+3	; 0x03
     ebe:	bc 81       	ldd	r27, Y+4	; 0x04
     ec0:	ac 01       	movw	r20, r24
     ec2:	bd 01       	movw	r22, r26
     ec4:	4f 5f       	subi	r20, 0xFF	; 255
     ec6:	5f 4f       	sbci	r21, 0xFF	; 255
     ec8:	6f 4f       	sbci	r22, 0xFF	; 255
     eca:	7f 4f       	sbci	r23, 0xFF	; 255
     ecc:	49 83       	std	Y+1, r20	; 0x01
     ece:	5a 83       	std	Y+2, r21	; 0x02
     ed0:	6b 83       	std	Y+3, r22	; 0x03
     ed2:	7c 83       	std	Y+4, r23	; 0x04
     ed4:	f8 01       	movw	r30, r16
     ed6:	e8 0f       	add	r30, r24
     ed8:	f9 1f       	adc	r31, r25
     eda:	21 e0       	ldi	r18, 0x01	; 1
     edc:	80 81       	ld	r24, Z
     ede:	81 11       	cpse	r24, r1
     ee0:	01 c0       	rjmp	.+2      	; 0xee4 <__LOCK_REGION_LENGTH__+0xae4>
     ee2:	20 e0       	ldi	r18, 0x00	; 0
     ee4:	20 93 48 03 	sts	0x0348, r18	; 0x800348 <appconf+0x9>
     ee8:	be 01       	movw	r22, r28
     eea:	6f 5f       	subi	r22, 0xFF	; 255
     eec:	7f 4f       	sbci	r23, 0xFF	; 255
     eee:	c8 01       	movw	r24, r16
     ef0:	e5 d4       	rcall	.+2506   	; 0x18bc <buffer_get_uint16>
     ef2:	0f 2e       	mov	r0, r31
     ef4:	ff e3       	ldi	r31, 0x3F	; 63
     ef6:	ef 2e       	mov	r14, r31
     ef8:	f3 e0       	ldi	r31, 0x03	; 3
     efa:	ff 2e       	mov	r15, r31
     efc:	f0 2d       	mov	r31, r0
     efe:	a0 e0       	ldi	r26, 0x00	; 0
     f00:	b0 e0       	ldi	r27, 0x00	; 0
     f02:	f7 01       	movw	r30, r14
     f04:	82 87       	std	Z+10, r24	; 0x0a
     f06:	93 87       	std	Z+11, r25	; 0x0b
     f08:	a4 87       	std	Z+12, r26	; 0x0c
     f0a:	b5 87       	std	Z+13, r27	; 0x0d
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	9a 81       	ldd	r25, Y+2	; 0x02
     f10:	ab 81       	ldd	r26, Y+3	; 0x03
     f12:	bc 81       	ldd	r27, Y+4	; 0x04
     f14:	f8 01       	movw	r30, r16
     f16:	e8 0f       	add	r30, r24
     f18:	f9 1f       	adc	r31, r25
     f1a:	20 81       	ld	r18, Z
     f1c:	f7 01       	movw	r30, r14
     f1e:	26 87       	std	Z+14, r18	; 0x0e
     f20:	ac 01       	movw	r20, r24
     f22:	bd 01       	movw	r22, r26
     f24:	4e 5f       	subi	r20, 0xFE	; 254
     f26:	5f 4f       	sbci	r21, 0xFF	; 255
     f28:	6f 4f       	sbci	r22, 0xFF	; 255
     f2a:	7f 4f       	sbci	r23, 0xFF	; 255
     f2c:	49 83       	std	Y+1, r20	; 0x01
     f2e:	5a 83       	std	Y+2, r21	; 0x02
     f30:	6b 83       	std	Y+3, r22	; 0x03
     f32:	7c 83       	std	Y+4, r23	; 0x04
     f34:	01 96       	adiw	r24, 0x01	; 1
     f36:	a1 1d       	adc	r26, r1
     f38:	b1 1d       	adc	r27, r1
     f3a:	f8 01       	movw	r30, r16
     f3c:	e8 0f       	add	r30, r24
     f3e:	f9 1f       	adc	r31, r25
     f40:	80 81       	ld	r24, Z
     f42:	d7 01       	movw	r26, r14
     f44:	1f 96       	adiw	r26, 0x0f	; 15
     f46:	8c 93       	st	X, r24
     f48:	9e 01       	movw	r18, r28
     f4a:	2f 5f       	subi	r18, 0xFF	; 255
     f4c:	3f 4f       	sbci	r19, 0xFF	; 255
     f4e:	40 e0       	ldi	r20, 0x00	; 0
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	6a e7       	ldi	r22, 0x7A	; 122
     f54:	74 e4       	ldi	r23, 0x44	; 68
     f56:	c8 01       	movw	r24, r16
     f58:	3b d5       	rcall	.+2678   	; 0x19d0 <buffer_get_float32>
     f5a:	f7 01       	movw	r30, r14
     f5c:	60 8b       	std	Z+16, r22	; 0x10
     f5e:	71 8b       	std	Z+17, r23	; 0x11
     f60:	82 8b       	std	Z+18, r24	; 0x12
     f62:	93 8b       	std	Z+19, r25	; 0x13
     f64:	9e 01       	movw	r18, r28
     f66:	2f 5f       	subi	r18, 0xFF	; 255
     f68:	3f 4f       	sbci	r19, 0xFF	; 255
     f6a:	40 e0       	ldi	r20, 0x00	; 0
     f6c:	50 e0       	ldi	r21, 0x00	; 0
     f6e:	6a e7       	ldi	r22, 0x7A	; 122
     f70:	74 e4       	ldi	r23, 0x44	; 68
     f72:	c8 01       	movw	r24, r16
     f74:	2d d5       	rcall	.+2650   	; 0x19d0 <buffer_get_float32>
     f76:	d7 01       	movw	r26, r14
     f78:	54 96       	adiw	r26, 0x14	; 20
     f7a:	6d 93       	st	X+, r22
     f7c:	7d 93       	st	X+, r23
     f7e:	8d 93       	st	X+, r24
     f80:	9c 93       	st	X, r25
     f82:	57 97       	sbiw	r26, 0x17	; 23
     f84:	9e 01       	movw	r18, r28
     f86:	2f 5f       	subi	r18, 0xFF	; 255
     f88:	3f 4f       	sbci	r19, 0xFF	; 255
     f8a:	40 e0       	ldi	r20, 0x00	; 0
     f8c:	50 e0       	ldi	r21, 0x00	; 0
     f8e:	6a e7       	ldi	r22, 0x7A	; 122
     f90:	74 e4       	ldi	r23, 0x44	; 68
     f92:	c8 01       	movw	r24, r16
     f94:	1d d5       	rcall	.+2618   	; 0x19d0 <buffer_get_float32>
     f96:	f7 01       	movw	r30, r14
     f98:	60 8f       	std	Z+24, r22	; 0x18
     f9a:	71 8f       	std	Z+25, r23	; 0x19
     f9c:	82 8f       	std	Z+26, r24	; 0x1a
     f9e:	93 8f       	std	Z+27, r25	; 0x1b
     fa0:	9e 01       	movw	r18, r28
     fa2:	2f 5f       	subi	r18, 0xFF	; 255
     fa4:	3f 4f       	sbci	r19, 0xFF	; 255
     fa6:	40 e0       	ldi	r20, 0x00	; 0
     fa8:	50 e0       	ldi	r21, 0x00	; 0
     faa:	6a e7       	ldi	r22, 0x7A	; 122
     fac:	74 e4       	ldi	r23, 0x44	; 68
     fae:	c8 01       	movw	r24, r16
     fb0:	0f d5       	rcall	.+2590   	; 0x19d0 <buffer_get_float32>
     fb2:	d7 01       	movw	r26, r14
     fb4:	5c 96       	adiw	r26, 0x1c	; 28
     fb6:	6d 93       	st	X+, r22
     fb8:	7d 93       	st	X+, r23
     fba:	8d 93       	st	X+, r24
     fbc:	9c 93       	st	X, r25
     fbe:	5f 97       	sbiw	r26, 0x1f	; 31
     fc0:	89 81       	ldd	r24, Y+1	; 0x01
     fc2:	9a 81       	ldd	r25, Y+2	; 0x02
     fc4:	ab 81       	ldd	r26, Y+3	; 0x03
     fc6:	bc 81       	ldd	r27, Y+4	; 0x04
     fc8:	f8 01       	movw	r30, r16
     fca:	e8 0f       	add	r30, r24
     fcc:	f9 1f       	adc	r31, r25
     fce:	21 e0       	ldi	r18, 0x01	; 1
     fd0:	30 81       	ld	r19, Z
     fd2:	31 11       	cpse	r19, r1
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <__LOCK_REGION_LENGTH__+0xbd8>
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	20 93 5f 03 	sts	0x035F, r18	; 0x80035f <appconf+0x20>
     fdc:	ac 01       	movw	r20, r24
     fde:	bd 01       	movw	r22, r26
     fe0:	4e 5f       	subi	r20, 0xFE	; 254
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	6f 4f       	sbci	r22, 0xFF	; 255
     fe6:	7f 4f       	sbci	r23, 0xFF	; 255
     fe8:	49 83       	std	Y+1, r20	; 0x01
     fea:	5a 83       	std	Y+2, r21	; 0x02
     fec:	6b 83       	std	Y+3, r22	; 0x03
     fee:	7c 83       	std	Y+4, r23	; 0x04
     ff0:	01 96       	adiw	r24, 0x01	; 1
     ff2:	a1 1d       	adc	r26, r1
     ff4:	b1 1d       	adc	r27, r1
     ff6:	f8 01       	movw	r30, r16
     ff8:	e8 0f       	add	r30, r24
     ffa:	f9 1f       	adc	r31, r25
     ffc:	21 e0       	ldi	r18, 0x01	; 1
     ffe:	80 81       	ld	r24, Z
    1000:	81 11       	cpse	r24, r1
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <__LOCK_REGION_LENGTH__+0xc06>
    1004:	20 e0       	ldi	r18, 0x00	; 0
    1006:	20 93 60 03 	sts	0x0360, r18	; 0x800360 <appconf+0x21>
    100a:	9e 01       	movw	r18, r28
    100c:	2f 5f       	subi	r18, 0xFF	; 255
    100e:	3f 4f       	sbci	r19, 0xFF	; 255
    1010:	40 e0       	ldi	r20, 0x00	; 0
    1012:	50 e0       	ldi	r21, 0x00	; 0
    1014:	6a e7       	ldi	r22, 0x7A	; 122
    1016:	74 e4       	ldi	r23, 0x44	; 68
    1018:	c8 01       	movw	r24, r16
    101a:	da d4       	rcall	.+2484   	; 0x19d0 <buffer_get_float32>
    101c:	0f 2e       	mov	r0, r31
    101e:	ff e3       	ldi	r31, 0x3F	; 63
    1020:	ef 2e       	mov	r14, r31
    1022:	f3 e0       	ldi	r31, 0x03	; 3
    1024:	ff 2e       	mov	r15, r31
    1026:	f0 2d       	mov	r31, r0
    1028:	f7 01       	movw	r30, r14
    102a:	62 a3       	std	Z+34, r22	; 0x22
    102c:	73 a3       	std	Z+35, r23	; 0x23
    102e:	84 a3       	std	Z+36, r24	; 0x24
    1030:	95 a3       	std	Z+37, r25	; 0x25
    1032:	9e 01       	movw	r18, r28
    1034:	2f 5f       	subi	r18, 0xFF	; 255
    1036:	3f 4f       	sbci	r19, 0xFF	; 255
    1038:	40 e0       	ldi	r20, 0x00	; 0
    103a:	50 e0       	ldi	r21, 0x00	; 0
    103c:	6a e7       	ldi	r22, 0x7A	; 122
    103e:	74 e4       	ldi	r23, 0x44	; 68
    1040:	c8 01       	movw	r24, r16
    1042:	c6 d4       	rcall	.+2444   	; 0x19d0 <buffer_get_float32>
    1044:	d7 01       	movw	r26, r14
    1046:	96 96       	adiw	r26, 0x26	; 38
    1048:	6d 93       	st	X+, r22
    104a:	7d 93       	st	X+, r23
    104c:	8d 93       	st	X+, r24
    104e:	9c 93       	st	X, r25
    1050:	99 97       	sbiw	r26, 0x29	; 41
    1052:	89 81       	ldd	r24, Y+1	; 0x01
    1054:	9a 81       	ldd	r25, Y+2	; 0x02
    1056:	ab 81       	ldd	r26, Y+3	; 0x03
    1058:	bc 81       	ldd	r27, Y+4	; 0x04
    105a:	f8 01       	movw	r30, r16
    105c:	e8 0f       	add	r30, r24
    105e:	f9 1f       	adc	r31, r25
    1060:	21 e0       	ldi	r18, 0x01	; 1
    1062:	30 81       	ld	r19, Z
    1064:	31 11       	cpse	r19, r1
    1066:	01 c0       	rjmp	.+2      	; 0x106a <__LOCK_REGION_LENGTH__+0xc6a>
    1068:	20 e0       	ldi	r18, 0x00	; 0
    106a:	20 93 69 03 	sts	0x0369, r18	; 0x800369 <appconf+0x2a>
    106e:	ac 01       	movw	r20, r24
    1070:	bd 01       	movw	r22, r26
    1072:	4e 5f       	subi	r20, 0xFE	; 254
    1074:	5f 4f       	sbci	r21, 0xFF	; 255
    1076:	6f 4f       	sbci	r22, 0xFF	; 255
    1078:	7f 4f       	sbci	r23, 0xFF	; 255
    107a:	49 83       	std	Y+1, r20	; 0x01
    107c:	5a 83       	std	Y+2, r21	; 0x02
    107e:	6b 83       	std	Y+3, r22	; 0x03
    1080:	7c 83       	std	Y+4, r23	; 0x04
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	a1 1d       	adc	r26, r1
    1086:	b1 1d       	adc	r27, r1
    1088:	f8 01       	movw	r30, r16
    108a:	e8 0f       	add	r30, r24
    108c:	f9 1f       	adc	r31, r25
    108e:	21 e0       	ldi	r18, 0x01	; 1
    1090:	80 81       	ld	r24, Z
    1092:	81 11       	cpse	r24, r1
    1094:	01 c0       	rjmp	.+2      	; 0x1098 <__LOCK_REGION_LENGTH__+0xc98>
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	20 93 6a 03 	sts	0x036A, r18	; 0x80036a <appconf+0x2b>
    109c:	9e 01       	movw	r18, r28
    109e:	2f 5f       	subi	r18, 0xFF	; 255
    10a0:	3f 4f       	sbci	r19, 0xFF	; 255
    10a2:	40 e0       	ldi	r20, 0x00	; 0
    10a4:	50 e0       	ldi	r21, 0x00	; 0
    10a6:	6a e7       	ldi	r22, 0x7A	; 122
    10a8:	74 e4       	ldi	r23, 0x44	; 68
    10aa:	c8 01       	movw	r24, r16
    10ac:	91 d4       	rcall	.+2338   	; 0x19d0 <buffer_get_float32>
    10ae:	0f 2e       	mov	r0, r31
    10b0:	ff e3       	ldi	r31, 0x3F	; 63
    10b2:	ef 2e       	mov	r14, r31
    10b4:	f3 e0       	ldi	r31, 0x03	; 3
    10b6:	ff 2e       	mov	r15, r31
    10b8:	f0 2d       	mov	r31, r0
    10ba:	f7 01       	movw	r30, r14
    10bc:	64 a7       	std	Z+44, r22	; 0x2c
    10be:	75 a7       	std	Z+45, r23	; 0x2d
    10c0:	86 a7       	std	Z+46, r24	; 0x2e
    10c2:	97 a7       	std	Z+47, r25	; 0x2f
    10c4:	89 81       	ldd	r24, Y+1	; 0x01
    10c6:	9a 81       	ldd	r25, Y+2	; 0x02
    10c8:	ab 81       	ldd	r26, Y+3	; 0x03
    10ca:	bc 81       	ldd	r27, Y+4	; 0x04
    10cc:	ac 01       	movw	r20, r24
    10ce:	bd 01       	movw	r22, r26
    10d0:	4f 5f       	subi	r20, 0xFF	; 255
    10d2:	5f 4f       	sbci	r21, 0xFF	; 255
    10d4:	6f 4f       	sbci	r22, 0xFF	; 255
    10d6:	7f 4f       	sbci	r23, 0xFF	; 255
    10d8:	49 83       	std	Y+1, r20	; 0x01
    10da:	5a 83       	std	Y+2, r21	; 0x02
    10dc:	6b 83       	std	Y+3, r22	; 0x03
    10de:	7c 83       	std	Y+4, r23	; 0x04
    10e0:	f8 01       	movw	r30, r16
    10e2:	e8 0f       	add	r30, r24
    10e4:	f9 1f       	adc	r31, r25
    10e6:	80 81       	ld	r24, Z
    10e8:	d7 01       	movw	r26, r14
    10ea:	d0 96       	adiw	r26, 0x30	; 48
    10ec:	8c 93       	st	X, r24
    10ee:	9e 01       	movw	r18, r28
    10f0:	2f 5f       	subi	r18, 0xFF	; 255
    10f2:	3f 4f       	sbci	r19, 0xFF	; 255
    10f4:	40 e0       	ldi	r20, 0x00	; 0
    10f6:	50 e0       	ldi	r21, 0x00	; 0
    10f8:	6a e7       	ldi	r22, 0x7A	; 122
    10fa:	74 e4       	ldi	r23, 0x44	; 68
    10fc:	c8 01       	movw	r24, r16
    10fe:	68 d4       	rcall	.+2256   	; 0x19d0 <buffer_get_float32>
    1100:	f7 01       	movw	r30, r14
    1102:	61 ab       	std	Z+49, r22	; 0x31
    1104:	72 ab       	std	Z+50, r23	; 0x32
    1106:	83 ab       	std	Z+51, r24	; 0x33
    1108:	94 ab       	std	Z+52, r25	; 0x34
    110a:	9e 01       	movw	r18, r28
    110c:	2f 5f       	subi	r18, 0xFF	; 255
    110e:	3f 4f       	sbci	r19, 0xFF	; 255
    1110:	40 e0       	ldi	r20, 0x00	; 0
    1112:	50 e0       	ldi	r21, 0x00	; 0
    1114:	6a e7       	ldi	r22, 0x7A	; 122
    1116:	74 e4       	ldi	r23, 0x44	; 68
    1118:	c8 01       	movw	r24, r16
    111a:	5a d4       	rcall	.+2228   	; 0x19d0 <buffer_get_float32>
    111c:	d7 01       	movw	r26, r14
    111e:	d5 96       	adiw	r26, 0x35	; 53
    1120:	6d 93       	st	X+, r22
    1122:	7d 93       	st	X+, r23
    1124:	8d 93       	st	X+, r24
    1126:	9c 93       	st	X, r25
    1128:	d8 97       	sbiw	r26, 0x38	; 56
    112a:	9e 01       	movw	r18, r28
    112c:	2f 5f       	subi	r18, 0xFF	; 255
    112e:	3f 4f       	sbci	r19, 0xFF	; 255
    1130:	40 e0       	ldi	r20, 0x00	; 0
    1132:	50 e0       	ldi	r21, 0x00	; 0
    1134:	6a e7       	ldi	r22, 0x7A	; 122
    1136:	74 e4       	ldi	r23, 0x44	; 68
    1138:	c8 01       	movw	r24, r16
    113a:	4a d4       	rcall	.+2196   	; 0x19d0 <buffer_get_float32>
    113c:	f7 01       	movw	r30, r14
    113e:	61 af       	std	Z+57, r22	; 0x39
    1140:	72 af       	std	Z+58, r23	; 0x3a
    1142:	83 af       	std	Z+59, r24	; 0x3b
    1144:	94 af       	std	Z+60, r25	; 0x3c
    1146:	89 81       	ldd	r24, Y+1	; 0x01
    1148:	9a 81       	ldd	r25, Y+2	; 0x02
    114a:	ab 81       	ldd	r26, Y+3	; 0x03
    114c:	bc 81       	ldd	r27, Y+4	; 0x04
    114e:	f8 01       	movw	r30, r16
    1150:	e8 0f       	add	r30, r24
    1152:	f9 1f       	adc	r31, r25
    1154:	21 e0       	ldi	r18, 0x01	; 1
    1156:	30 81       	ld	r19, Z
    1158:	31 11       	cpse	r19, r1
    115a:	01 c0       	rjmp	.+2      	; 0x115e <__stack+0x5f>
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	20 93 7c 03 	sts	0x037C, r18	; 0x80037c <appconf+0x3d>
    1162:	ac 01       	movw	r20, r24
    1164:	bd 01       	movw	r22, r26
    1166:	4f 5f       	subi	r20, 0xFF	; 255
    1168:	5f 4f       	sbci	r21, 0xFF	; 255
    116a:	6f 4f       	sbci	r22, 0xFF	; 255
    116c:	7f 4f       	sbci	r23, 0xFF	; 255
    116e:	f8 01       	movw	r30, r16
    1170:	e4 0f       	add	r30, r20
    1172:	f5 1f       	adc	r31, r21
    1174:	21 e0       	ldi	r18, 0x01	; 1
    1176:	30 81       	ld	r19, Z
    1178:	31 11       	cpse	r19, r1
    117a:	01 c0       	rjmp	.+2      	; 0x117e <__stack+0x7f>
    117c:	20 e0       	ldi	r18, 0x00	; 0
    117e:	20 93 7d 03 	sts	0x037D, r18	; 0x80037d <appconf+0x3e>
    1182:	ac 01       	movw	r20, r24
    1184:	bd 01       	movw	r22, r26
    1186:	4e 5f       	subi	r20, 0xFE	; 254
    1188:	5f 4f       	sbci	r21, 0xFF	; 255
    118a:	6f 4f       	sbci	r22, 0xFF	; 255
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	f8 01       	movw	r30, r16
    1190:	e4 0f       	add	r30, r20
    1192:	f5 1f       	adc	r31, r21
    1194:	21 e0       	ldi	r18, 0x01	; 1
    1196:	30 81       	ld	r19, Z
    1198:	31 11       	cpse	r19, r1
    119a:	01 c0       	rjmp	.+2      	; 0x119e <__stack+0x9f>
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	20 93 7e 03 	sts	0x037E, r18	; 0x80037e <appconf+0x3f>
    11a2:	ac 01       	movw	r20, r24
    11a4:	bd 01       	movw	r22, r26
    11a6:	4d 5f       	subi	r20, 0xFD	; 253
    11a8:	5f 4f       	sbci	r21, 0xFF	; 255
    11aa:	6f 4f       	sbci	r22, 0xFF	; 255
    11ac:	7f 4f       	sbci	r23, 0xFF	; 255
    11ae:	f8 01       	movw	r30, r16
    11b0:	e4 0f       	add	r30, r20
    11b2:	f5 1f       	adc	r31, r21
    11b4:	21 e0       	ldi	r18, 0x01	; 1
    11b6:	30 81       	ld	r19, Z
    11b8:	31 11       	cpse	r19, r1
    11ba:	01 c0       	rjmp	.+2      	; 0x11be <__stack+0xbf>
    11bc:	20 e0       	ldi	r18, 0x00	; 0
    11be:	20 93 7f 03 	sts	0x037F, r18	; 0x80037f <appconf+0x40>
    11c2:	ac 01       	movw	r20, r24
    11c4:	bd 01       	movw	r22, r26
    11c6:	4b 5f       	subi	r20, 0xFB	; 251
    11c8:	5f 4f       	sbci	r21, 0xFF	; 255
    11ca:	6f 4f       	sbci	r22, 0xFF	; 255
    11cc:	7f 4f       	sbci	r23, 0xFF	; 255
    11ce:	49 83       	std	Y+1, r20	; 0x01
    11d0:	5a 83       	std	Y+2, r21	; 0x02
    11d2:	6b 83       	std	Y+3, r22	; 0x03
    11d4:	7c 83       	std	Y+4, r23	; 0x04
    11d6:	04 96       	adiw	r24, 0x04	; 4
    11d8:	a1 1d       	adc	r26, r1
    11da:	b1 1d       	adc	r27, r1
    11dc:	f8 01       	movw	r30, r16
    11de:	e8 0f       	add	r30, r24
    11e0:	f9 1f       	adc	r31, r25
    11e2:	21 e0       	ldi	r18, 0x01	; 1
    11e4:	80 81       	ld	r24, Z
    11e6:	81 11       	cpse	r24, r1
    11e8:	01 c0       	rjmp	.+2      	; 0x11ec <__stack+0xed>
    11ea:	20 e0       	ldi	r18, 0x00	; 0
    11ec:	20 93 80 03 	sts	0x0380, r18	; 0x800380 <appconf+0x41>
    11f0:	9e 01       	movw	r18, r28
    11f2:	2f 5f       	subi	r18, 0xFF	; 255
    11f4:	3f 4f       	sbci	r19, 0xFF	; 255
    11f6:	40 e0       	ldi	r20, 0x00	; 0
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	6a e7       	ldi	r22, 0x7A	; 122
    11fc:	74 e4       	ldi	r23, 0x44	; 68
    11fe:	c8 01       	movw	r24, r16
    1200:	e7 d3       	rcall	.+1998   	; 0x19d0 <buffer_get_float32>
    1202:	60 93 81 03 	sts	0x0381, r22	; 0x800381 <appconf+0x42>
    1206:	70 93 82 03 	sts	0x0382, r23	; 0x800382 <appconf+0x43>
    120a:	80 93 83 03 	sts	0x0383, r24	; 0x800383 <appconf+0x44>
    120e:	90 93 84 03 	sts	0x0384, r25	; 0x800384 <appconf+0x45>
    1212:	9e 01       	movw	r18, r28
    1214:	2f 5f       	subi	r18, 0xFF	; 255
    1216:	3f 4f       	sbci	r19, 0xFF	; 255
    1218:	40 e0       	ldi	r20, 0x00	; 0
    121a:	50 e0       	ldi	r21, 0x00	; 0
    121c:	6a e7       	ldi	r22, 0x7A	; 122
    121e:	74 e4       	ldi	r23, 0x44	; 68
    1220:	c8 01       	movw	r24, r16
    1222:	d6 d3       	rcall	.+1964   	; 0x19d0 <buffer_get_float32>
    1224:	60 93 85 03 	sts	0x0385, r22	; 0x800385 <appconf+0x46>
    1228:	70 93 86 03 	sts	0x0386, r23	; 0x800386 <appconf+0x47>
    122c:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <appconf+0x48>
    1230:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <appconf+0x49>
    1234:	89 81       	ldd	r24, Y+1	; 0x01
    1236:	9a 81       	ldd	r25, Y+2	; 0x02
    1238:	ab 81       	ldd	r26, Y+3	; 0x03
    123a:	bc 81       	ldd	r27, Y+4	; 0x04
    123c:	f8 01       	movw	r30, r16
    123e:	e8 0f       	add	r30, r24
    1240:	f9 1f       	adc	r31, r25
    1242:	21 e0       	ldi	r18, 0x01	; 1
    1244:	30 81       	ld	r19, Z
    1246:	31 11       	cpse	r19, r1
    1248:	01 c0       	rjmp	.+2      	; 0x124c <__stack+0x14d>
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	20 93 89 03 	sts	0x0389, r18	; 0x800389 <appconf+0x4a>
    1250:	ac 01       	movw	r20, r24
    1252:	bd 01       	movw	r22, r26
    1254:	4e 5f       	subi	r20, 0xFE	; 254
    1256:	5f 4f       	sbci	r21, 0xFF	; 255
    1258:	6f 4f       	sbci	r22, 0xFF	; 255
    125a:	7f 4f       	sbci	r23, 0xFF	; 255
    125c:	49 83       	std	Y+1, r20	; 0x01
    125e:	5a 83       	std	Y+2, r21	; 0x02
    1260:	6b 83       	std	Y+3, r22	; 0x03
    1262:	7c 83       	std	Y+4, r23	; 0x04
    1264:	01 96       	adiw	r24, 0x01	; 1
    1266:	a1 1d       	adc	r26, r1
    1268:	b1 1d       	adc	r27, r1
    126a:	f8 01       	movw	r30, r16
    126c:	e8 0f       	add	r30, r24
    126e:	f9 1f       	adc	r31, r25
    1270:	21 e0       	ldi	r18, 0x01	; 1
    1272:	80 81       	ld	r24, Z
    1274:	81 11       	cpse	r24, r1
    1276:	01 c0       	rjmp	.+2      	; 0x127a <__stack+0x17b>
    1278:	20 e0       	ldi	r18, 0x00	; 0
    127a:	20 93 8a 03 	sts	0x038A, r18	; 0x80038a <appconf+0x4b>
    127e:	9e 01       	movw	r18, r28
    1280:	2f 5f       	subi	r18, 0xFF	; 255
    1282:	3f 4f       	sbci	r19, 0xFF	; 255
    1284:	40 e0       	ldi	r20, 0x00	; 0
    1286:	50 e0       	ldi	r21, 0x00	; 0
    1288:	6a e7       	ldi	r22, 0x7A	; 122
    128a:	74 e4       	ldi	r23, 0x44	; 68
    128c:	c8 01       	movw	r24, r16
    128e:	a0 d3       	rcall	.+1856   	; 0x19d0 <buffer_get_float32>
    1290:	60 93 8b 03 	sts	0x038B, r22	; 0x80038b <appconf+0x4c>
    1294:	70 93 8c 03 	sts	0x038C, r23	; 0x80038c <appconf+0x4d>
    1298:	80 93 8d 03 	sts	0x038D, r24	; 0x80038d <appconf+0x4e>
    129c:	90 93 8e 03 	sts	0x038E, r25	; 0x80038e <appconf+0x4f>
    12a0:	be 01       	movw	r22, r28
    12a2:	6f 5f       	subi	r22, 0xFF	; 255
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	c8 01       	movw	r24, r16
    12a8:	09 d3       	rcall	.+1554   	; 0x18bc <buffer_get_uint16>
    12aa:	a0 e0       	ldi	r26, 0x00	; 0
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <appconf+0x50>
    12b2:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <appconf+0x51>
    12b6:	a0 93 91 03 	sts	0x0391, r26	; 0x800391 <appconf+0x52>
    12ba:	b0 93 92 03 	sts	0x0392, r27	; 0x800392 <appconf+0x53>
    12be:	be 01       	movw	r22, r28
    12c0:	6f 5f       	subi	r22, 0xFF	; 255
    12c2:	7f 4f       	sbci	r23, 0xFF	; 255
    12c4:	c8 01       	movw	r24, r16
    12c6:	40 d3       	rcall	.+1664   	; 0x1948 <buffer_get_uint32>
    12c8:	60 93 93 03 	sts	0x0393, r22	; 0x800393 <appconf+0x54>
    12cc:	70 93 94 03 	sts	0x0394, r23	; 0x800394 <appconf+0x55>
    12d0:	80 93 95 03 	sts	0x0395, r24	; 0x800395 <appconf+0x56>
    12d4:	90 93 96 03 	sts	0x0396, r25	; 0x800396 <appconf+0x57>
    12d8:	89 81       	ldd	r24, Y+1	; 0x01
    12da:	9a 81       	ldd	r25, Y+2	; 0x02
    12dc:	ab 81       	ldd	r26, Y+3	; 0x03
    12de:	bc 81       	ldd	r27, Y+4	; 0x04
    12e0:	ac 01       	movw	r20, r24
    12e2:	bd 01       	movw	r22, r26
    12e4:	4f 5f       	subi	r20, 0xFF	; 255
    12e6:	5f 4f       	sbci	r21, 0xFF	; 255
    12e8:	6f 4f       	sbci	r22, 0xFF	; 255
    12ea:	7f 4f       	sbci	r23, 0xFF	; 255
    12ec:	49 83       	std	Y+1, r20	; 0x01
    12ee:	5a 83       	std	Y+2, r21	; 0x02
    12f0:	6b 83       	std	Y+3, r22	; 0x03
    12f2:	7c 83       	std	Y+4, r23	; 0x04
    12f4:	f8 01       	movw	r30, r16
    12f6:	e8 0f       	add	r30, r24
    12f8:	f9 1f       	adc	r31, r25
    12fa:	80 81       	ld	r24, Z
    12fc:	80 93 97 03 	sts	0x0397, r24	; 0x800397 <appconf+0x58>
    1300:	9e 01       	movw	r18, r28
    1302:	2f 5f       	subi	r18, 0xFF	; 255
    1304:	3f 4f       	sbci	r19, 0xFF	; 255
    1306:	40 e0       	ldi	r20, 0x00	; 0
    1308:	50 e0       	ldi	r21, 0x00	; 0
    130a:	6a e7       	ldi	r22, 0x7A	; 122
    130c:	74 e4       	ldi	r23, 0x44	; 68
    130e:	c8 01       	movw	r24, r16
    1310:	5f d3       	rcall	.+1726   	; 0x19d0 <buffer_get_float32>
    1312:	60 93 98 03 	sts	0x0398, r22	; 0x800398 <appconf+0x59>
    1316:	70 93 99 03 	sts	0x0399, r23	; 0x800399 <appconf+0x5a>
    131a:	80 93 9a 03 	sts	0x039A, r24	; 0x80039a <appconf+0x5b>
    131e:	90 93 9b 03 	sts	0x039B, r25	; 0x80039b <appconf+0x5c>
    1322:	9e 01       	movw	r18, r28
    1324:	2f 5f       	subi	r18, 0xFF	; 255
    1326:	3f 4f       	sbci	r19, 0xFF	; 255
    1328:	40 e0       	ldi	r20, 0x00	; 0
    132a:	50 e0       	ldi	r21, 0x00	; 0
    132c:	6a e7       	ldi	r22, 0x7A	; 122
    132e:	74 e4       	ldi	r23, 0x44	; 68
    1330:	c8 01       	movw	r24, r16
    1332:	4e d3       	rcall	.+1692   	; 0x19d0 <buffer_get_float32>
    1334:	60 93 9c 03 	sts	0x039C, r22	; 0x80039c <appconf+0x5d>
    1338:	70 93 9d 03 	sts	0x039D, r23	; 0x80039d <appconf+0x5e>
    133c:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <appconf+0x5f>
    1340:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <appconf+0x60>
    1344:	9e 01       	movw	r18, r28
    1346:	2f 5f       	subi	r18, 0xFF	; 255
    1348:	3f 4f       	sbci	r19, 0xFF	; 255
    134a:	40 e0       	ldi	r20, 0x00	; 0
    134c:	50 e0       	ldi	r21, 0x00	; 0
    134e:	6a e7       	ldi	r22, 0x7A	; 122
    1350:	74 e4       	ldi	r23, 0x44	; 68
    1352:	c8 01       	movw	r24, r16
    1354:	3d d3       	rcall	.+1658   	; 0x19d0 <buffer_get_float32>
    1356:	60 93 a0 03 	sts	0x03A0, r22	; 0x8003a0 <appconf+0x61>
    135a:	70 93 a1 03 	sts	0x03A1, r23	; 0x8003a1 <appconf+0x62>
    135e:	80 93 a2 03 	sts	0x03A2, r24	; 0x8003a2 <appconf+0x63>
    1362:	90 93 a3 03 	sts	0x03A3, r25	; 0x8003a3 <appconf+0x64>
    1366:	9e 01       	movw	r18, r28
    1368:	2f 5f       	subi	r18, 0xFF	; 255
    136a:	3f 4f       	sbci	r19, 0xFF	; 255
    136c:	40 e0       	ldi	r20, 0x00	; 0
    136e:	50 e0       	ldi	r21, 0x00	; 0
    1370:	6a e7       	ldi	r22, 0x7A	; 122
    1372:	74 e4       	ldi	r23, 0x44	; 68
    1374:	c8 01       	movw	r24, r16
    1376:	2c d3       	rcall	.+1624   	; 0x19d0 <buffer_get_float32>
    1378:	60 93 a4 03 	sts	0x03A4, r22	; 0x8003a4 <appconf+0x65>
    137c:	70 93 a5 03 	sts	0x03A5, r23	; 0x8003a5 <appconf+0x66>
    1380:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <appconf+0x67>
    1384:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <appconf+0x68>
    1388:	9e 01       	movw	r18, r28
    138a:	2f 5f       	subi	r18, 0xFF	; 255
    138c:	3f 4f       	sbci	r19, 0xFF	; 255
    138e:	40 e0       	ldi	r20, 0x00	; 0
    1390:	50 e0       	ldi	r21, 0x00	; 0
    1392:	6a e7       	ldi	r22, 0x7A	; 122
    1394:	74 e4       	ldi	r23, 0x44	; 68
    1396:	c8 01       	movw	r24, r16
    1398:	1b d3       	rcall	.+1590   	; 0x19d0 <buffer_get_float32>
    139a:	60 93 a8 03 	sts	0x03A8, r22	; 0x8003a8 <appconf+0x69>
    139e:	70 93 a9 03 	sts	0x03A9, r23	; 0x8003a9 <appconf+0x6a>
    13a2:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <appconf+0x6b>
    13a6:	90 93 ab 03 	sts	0x03AB, r25	; 0x8003ab <appconf+0x6c>
    13aa:	9e 01       	movw	r18, r28
    13ac:	2f 5f       	subi	r18, 0xFF	; 255
    13ae:	3f 4f       	sbci	r19, 0xFF	; 255
    13b0:	40 e0       	ldi	r20, 0x00	; 0
    13b2:	50 e0       	ldi	r21, 0x00	; 0
    13b4:	6a e7       	ldi	r22, 0x7A	; 122
    13b6:	74 e4       	ldi	r23, 0x44	; 68
    13b8:	c8 01       	movw	r24, r16
    13ba:	0a d3       	rcall	.+1556   	; 0x19d0 <buffer_get_float32>
    13bc:	60 93 ac 03 	sts	0x03AC, r22	; 0x8003ac <appconf+0x6d>
    13c0:	70 93 ad 03 	sts	0x03AD, r23	; 0x8003ad <appconf+0x6e>
    13c4:	80 93 ae 03 	sts	0x03AE, r24	; 0x8003ae <appconf+0x6f>
    13c8:	90 93 af 03 	sts	0x03AF, r25	; 0x8003af <appconf+0x70>
    13cc:	89 81       	ldd	r24, Y+1	; 0x01
    13ce:	9a 81       	ldd	r25, Y+2	; 0x02
    13d0:	ab 81       	ldd	r26, Y+3	; 0x03
    13d2:	bc 81       	ldd	r27, Y+4	; 0x04
    13d4:	f8 01       	movw	r30, r16
    13d6:	e8 0f       	add	r30, r24
    13d8:	f9 1f       	adc	r31, r25
    13da:	21 e0       	ldi	r18, 0x01	; 1
    13dc:	30 81       	ld	r19, Z
    13de:	31 11       	cpse	r19, r1
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <__stack+0x2e5>
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	20 93 b0 03 	sts	0x03B0, r18	; 0x8003b0 <appconf+0x71>
    13e8:	ac 01       	movw	r20, r24
    13ea:	bd 01       	movw	r22, r26
    13ec:	4e 5f       	subi	r20, 0xFE	; 254
    13ee:	5f 4f       	sbci	r21, 0xFF	; 255
    13f0:	6f 4f       	sbci	r22, 0xFF	; 255
    13f2:	7f 4f       	sbci	r23, 0xFF	; 255
    13f4:	49 83       	std	Y+1, r20	; 0x01
    13f6:	5a 83       	std	Y+2, r21	; 0x02
    13f8:	6b 83       	std	Y+3, r22	; 0x03
    13fa:	7c 83       	std	Y+4, r23	; 0x04
    13fc:	01 96       	adiw	r24, 0x01	; 1
    13fe:	a1 1d       	adc	r26, r1
    1400:	b1 1d       	adc	r27, r1
    1402:	f8 01       	movw	r30, r16
    1404:	e8 0f       	add	r30, r24
    1406:	f9 1f       	adc	r31, r25
    1408:	21 e0       	ldi	r18, 0x01	; 1
    140a:	80 81       	ld	r24, Z
    140c:	81 11       	cpse	r24, r1
    140e:	01 c0       	rjmp	.+2      	; 0x1412 <__stack+0x313>
    1410:	20 e0       	ldi	r18, 0x00	; 0
    1412:	20 93 b1 03 	sts	0x03B1, r18	; 0x8003b1 <appconf+0x72>
    1416:	9e 01       	movw	r18, r28
    1418:	2f 5f       	subi	r18, 0xFF	; 255
    141a:	3f 4f       	sbci	r19, 0xFF	; 255
    141c:	40 e0       	ldi	r20, 0x00	; 0
    141e:	50 e0       	ldi	r21, 0x00	; 0
    1420:	6a e7       	ldi	r22, 0x7A	; 122
    1422:	74 e4       	ldi	r23, 0x44	; 68
    1424:	c8 01       	movw	r24, r16
    1426:	d4 d2       	rcall	.+1448   	; 0x19d0 <buffer_get_float32>
    1428:	60 93 b2 03 	sts	0x03B2, r22	; 0x8003b2 <appconf+0x73>
    142c:	70 93 b3 03 	sts	0x03B3, r23	; 0x8003b3 <appconf+0x74>
    1430:	80 93 b4 03 	sts	0x03B4, r24	; 0x8003b4 <appconf+0x75>
    1434:	90 93 b5 03 	sts	0x03B5, r25	; 0x8003b5 <appconf+0x76>
    1438:	89 81       	ldd	r24, Y+1	; 0x01
    143a:	9a 81       	ldd	r25, Y+2	; 0x02
    143c:	ab 81       	ldd	r26, Y+3	; 0x03
    143e:	bc 81       	ldd	r27, Y+4	; 0x04
    1440:	f8 01       	movw	r30, r16
    1442:	e8 0f       	add	r30, r24
    1444:	f9 1f       	adc	r31, r25
    1446:	20 81       	ld	r18, Z
    1448:	20 93 b6 03 	sts	0x03B6, r18	; 0x8003b6 <appconf+0x77>
    144c:	ac 01       	movw	r20, r24
    144e:	bd 01       	movw	r22, r26
    1450:	4f 5f       	subi	r20, 0xFF	; 255
    1452:	5f 4f       	sbci	r21, 0xFF	; 255
    1454:	6f 4f       	sbci	r22, 0xFF	; 255
    1456:	7f 4f       	sbci	r23, 0xFF	; 255
    1458:	f8 01       	movw	r30, r16
    145a:	e4 0f       	add	r30, r20
    145c:	f5 1f       	adc	r31, r21
    145e:	20 81       	ld	r18, Z
    1460:	20 93 b7 03 	sts	0x03B7, r18	; 0x8003b7 <appconf+0x78>
    1464:	ac 01       	movw	r20, r24
    1466:	bd 01       	movw	r22, r26
    1468:	4e 5f       	subi	r20, 0xFE	; 254
    146a:	5f 4f       	sbci	r21, 0xFF	; 255
    146c:	6f 4f       	sbci	r22, 0xFF	; 255
    146e:	7f 4f       	sbci	r23, 0xFF	; 255
    1470:	f8 01       	movw	r30, r16
    1472:	e4 0f       	add	r30, r20
    1474:	f5 1f       	adc	r31, r21
    1476:	20 81       	ld	r18, Z
    1478:	20 93 b8 03 	sts	0x03B8, r18	; 0x8003b8 <appconf+0x79>
    147c:	ac 01       	movw	r20, r24
    147e:	bd 01       	movw	r22, r26
    1480:	4d 5f       	subi	r20, 0xFD	; 253
    1482:	5f 4f       	sbci	r21, 0xFF	; 255
    1484:	6f 4f       	sbci	r22, 0xFF	; 255
    1486:	7f 4f       	sbci	r23, 0xFF	; 255
    1488:	f8 01       	movw	r30, r16
    148a:	e4 0f       	add	r30, r20
    148c:	f5 1f       	adc	r31, r21
    148e:	20 81       	ld	r18, Z
    1490:	20 93 b9 03 	sts	0x03B9, r18	; 0x8003b9 <appconf+0x7a>
    1494:	ac 01       	movw	r20, r24
    1496:	bd 01       	movw	r22, r26
    1498:	4c 5f       	subi	r20, 0xFC	; 252
    149a:	5f 4f       	sbci	r21, 0xFF	; 255
    149c:	6f 4f       	sbci	r22, 0xFF	; 255
    149e:	7f 4f       	sbci	r23, 0xFF	; 255
    14a0:	f8 01       	movw	r30, r16
    14a2:	e4 0f       	add	r30, r20
    14a4:	f5 1f       	adc	r31, r21
    14a6:	20 81       	ld	r18, Z
    14a8:	20 93 ba 03 	sts	0x03BA, r18	; 0x8003ba <appconf+0x7b>
    14ac:	ac 01       	movw	r20, r24
    14ae:	bd 01       	movw	r22, r26
    14b0:	4b 5f       	subi	r20, 0xFB	; 251
    14b2:	5f 4f       	sbci	r21, 0xFF	; 255
    14b4:	6f 4f       	sbci	r22, 0xFF	; 255
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	f8 01       	movw	r30, r16
    14ba:	e4 0f       	add	r30, r20
    14bc:	f5 1f       	adc	r31, r21
    14be:	20 81       	ld	r18, Z
    14c0:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <appconf+0x7c>
    14c4:	ac 01       	movw	r20, r24
    14c6:	bd 01       	movw	r22, r26
    14c8:	4a 5f       	subi	r20, 0xFA	; 250
    14ca:	5f 4f       	sbci	r21, 0xFF	; 255
    14cc:	6f 4f       	sbci	r22, 0xFF	; 255
    14ce:	7f 4f       	sbci	r23, 0xFF	; 255
    14d0:	f8 01       	movw	r30, r16
    14d2:	e4 0f       	add	r30, r20
    14d4:	f5 1f       	adc	r31, r21
    14d6:	20 81       	ld	r18, Z
    14d8:	31 81       	ldd	r19, Z+1	; 0x01
    14da:	42 81       	ldd	r20, Z+2	; 0x02
    14dc:	20 93 bc 03 	sts	0x03BC, r18	; 0x8003bc <appconf+0x7d>
    14e0:	30 93 bd 03 	sts	0x03BD, r19	; 0x8003bd <appconf+0x7e>
    14e4:	40 93 be 03 	sts	0x03BE, r20	; 0x8003be <appconf+0x7f>
    14e8:	ac 01       	movw	r20, r24
    14ea:	bd 01       	movw	r22, r26
    14ec:	46 5f       	subi	r20, 0xF6	; 246
    14ee:	5f 4f       	sbci	r21, 0xFF	; 255
    14f0:	6f 4f       	sbci	r22, 0xFF	; 255
    14f2:	7f 4f       	sbci	r23, 0xFF	; 255
    14f4:	49 83       	std	Y+1, r20	; 0x01
    14f6:	5a 83       	std	Y+2, r21	; 0x02
    14f8:	6b 83       	std	Y+3, r22	; 0x03
    14fa:	7c 83       	std	Y+4, r23	; 0x04
    14fc:	09 96       	adiw	r24, 0x09	; 9
    14fe:	a1 1d       	adc	r26, r1
    1500:	b1 1d       	adc	r27, r1
    1502:	f8 01       	movw	r30, r16
    1504:	e8 0f       	add	r30, r24
    1506:	f9 1f       	adc	r31, r25
    1508:	21 e0       	ldi	r18, 0x01	; 1
    150a:	80 81       	ld	r24, Z
    150c:	81 11       	cpse	r24, r1
    150e:	01 c0       	rjmp	.+2      	; 0x1512 <__stack+0x413>
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	20 93 bf 03 	sts	0x03BF, r18	; 0x8003bf <appconf+0x80>
    1516:	e0 91 0c 03 	lds	r30, 0x030C	; 0x80030c <rx_appconf_func>
    151a:	f0 91 0d 03 	lds	r31, 0x030D	; 0x80030d <rx_appconf_func+0x1>
    151e:	30 97       	sbiw	r30, 0x00	; 0
    1520:	09 f4       	brne	.+2      	; 0x1524 <__stack+0x425>
    1522:	f4 c0       	rjmp	.+488    	; 0x170c <__stack+0x60d>
    1524:	8f e3       	ldi	r24, 0x3F	; 63
    1526:	93 e0       	ldi	r25, 0x03	; 3
    1528:	09 95       	icall
    152a:	f0 c0       	rjmp	.+480    	; 0x170c <__stack+0x60d>
    152c:	9e 01       	movw	r18, r28
    152e:	2f 5f       	subi	r18, 0xFF	; 255
    1530:	3f 4f       	sbci	r19, 0xFF	; 255
    1532:	40 e0       	ldi	r20, 0x00	; 0
    1534:	50 e0       	ldi	r21, 0x00	; 0
    1536:	6a e7       	ldi	r22, 0x7A	; 122
    1538:	74 e4       	ldi	r23, 0x44	; 68
    153a:	c8 01       	movw	r24, r16
    153c:	49 d2       	rcall	.+1170   	; 0x19d0 <buffer_get_float32>
    153e:	60 93 3b 03 	sts	0x033B, r22	; 0x80033b <detect_cycle_int_limit>
    1542:	70 93 3c 03 	sts	0x033C, r23	; 0x80033c <detect_cycle_int_limit+0x1>
    1546:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <detect_cycle_int_limit+0x2>
    154a:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <detect_cycle_int_limit+0x3>
    154e:	9e 01       	movw	r18, r28
    1550:	2f 5f       	subi	r18, 0xFF	; 255
    1552:	3f 4f       	sbci	r19, 0xFF	; 255
    1554:	40 e0       	ldi	r20, 0x00	; 0
    1556:	50 e0       	ldi	r21, 0x00	; 0
    1558:	6a e7       	ldi	r22, 0x7A	; 122
    155a:	74 e4       	ldi	r23, 0x44	; 68
    155c:	c8 01       	movw	r24, r16
    155e:	38 d2       	rcall	.+1136   	; 0x19d0 <buffer_get_float32>
    1560:	4b 01       	movw	r8, r22
    1562:	5c 01       	movw	r10, r24
    1564:	60 93 37 03 	sts	0x0337, r22	; 0x800337 <detect_coupling_k>
    1568:	70 93 38 03 	sts	0x0338, r23	; 0x800338 <detect_coupling_k+0x1>
    156c:	80 93 39 03 	sts	0x0339, r24	; 0x800339 <detect_coupling_k+0x2>
    1570:	90 93 3a 03 	sts	0x033A, r25	; 0x80033a <detect_coupling_k+0x3>
    1574:	49 81       	ldd	r20, Y+1	; 0x01
    1576:	5a 81       	ldd	r21, Y+2	; 0x02
    1578:	6b 81       	ldd	r22, Y+3	; 0x03
    157a:	7c 81       	ldd	r23, Y+4	; 0x04
    157c:	fa 01       	movw	r30, r20
    157e:	31 96       	adiw	r30, 0x01	; 1
    1580:	ee 0d       	add	r30, r14
    1582:	ff 1d       	adc	r31, r15
    1584:	af e2       	ldi	r26, 0x2F	; 47
    1586:	b3 e0       	ldi	r27, 0x03	; 3
    1588:	ca 01       	movw	r24, r20
    158a:	09 96       	adiw	r24, 0x09	; 9
    158c:	e8 0e       	add	r14, r24
    158e:	f9 1e       	adc	r15, r25
    1590:	91 91       	ld	r25, Z+
    1592:	9d 93       	st	X+, r25
    1594:	ee 15       	cp	r30, r14
    1596:	ff 05       	cpc	r31, r15
    1598:	d9 f7       	brne	.-10     	; 0x1590 <__stack+0x491>
    159a:	db 01       	movw	r26, r22
    159c:	ca 01       	movw	r24, r20
    159e:	09 96       	adiw	r24, 0x09	; 9
    15a0:	a1 1d       	adc	r26, r1
    15a2:	b1 1d       	adc	r27, r1
    15a4:	89 83       	std	Y+1, r24	; 0x01
    15a6:	9a 83       	std	Y+2, r25	; 0x02
    15a8:	ab 83       	std	Y+3, r26	; 0x03
    15aa:	bc 83       	std	Y+4, r27	; 0x04
    15ac:	48 5f       	subi	r20, 0xF8	; 248
    15ae:	5f 4f       	sbci	r21, 0xFF	; 255
    15b0:	6f 4f       	sbci	r22, 0xFF	; 255
    15b2:	7f 4f       	sbci	r23, 0xFF	; 255
    15b4:	f8 01       	movw	r30, r16
    15b6:	e4 0f       	add	r30, r20
    15b8:	f5 1f       	adc	r31, r21
    15ba:	e0 80       	ld	r14, Z
    15bc:	e0 92 2e 03 	sts	0x032E, r14	; 0x80032e <detect_hall_res>
    15c0:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <rx_detect_func>
    15c4:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <rx_detect_func+0x1>
    15c8:	30 97       	sbiw	r30, 0x00	; 0
    15ca:	09 f4       	brne	.+2      	; 0x15ce <__stack+0x4cf>
    15cc:	9f c0       	rjmp	.+318    	; 0x170c <__stack+0x60d>
    15ce:	60 91 3b 03 	lds	r22, 0x033B	; 0x80033b <detect_cycle_int_limit>
    15d2:	70 91 3c 03 	lds	r23, 0x033C	; 0x80033c <detect_cycle_int_limit+0x1>
    15d6:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <detect_cycle_int_limit+0x2>
    15da:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <detect_cycle_int_limit+0x3>
    15de:	0f e2       	ldi	r16, 0x2F	; 47
    15e0:	13 e0       	ldi	r17, 0x03	; 3
    15e2:	a5 01       	movw	r20, r10
    15e4:	94 01       	movw	r18, r8
    15e6:	09 95       	icall
    15e8:	91 c0       	rjmp	.+290    	; 0x170c <__stack+0x60d>
    15ea:	9e 01       	movw	r18, r28
    15ec:	2f 5f       	subi	r18, 0xFF	; 255
    15ee:	3f 4f       	sbci	r19, 0xFF	; 255
    15f0:	40 e0       	ldi	r20, 0x00	; 0
    15f2:	54 e2       	ldi	r21, 0x24	; 36
    15f4:	64 e7       	ldi	r22, 0x74	; 116
    15f6:	79 e4       	ldi	r23, 0x49	; 73
    15f8:	c8 01       	movw	r24, r16
    15fa:	ea d1       	rcall	.+980    	; 0x19d0 <buffer_get_float32>
    15fc:	60 93 2a 03 	sts	0x032A, r22	; 0x80032a <dec_ppm>
    1600:	70 93 2b 03 	sts	0x032B, r23	; 0x80032b <dec_ppm+0x1>
    1604:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <dec_ppm+0x2>
    1608:	90 93 2d 03 	sts	0x032D, r25	; 0x80032d <dec_ppm+0x3>
    160c:	9e 01       	movw	r18, r28
    160e:	2f 5f       	subi	r18, 0xFF	; 255
    1610:	3f 4f       	sbci	r19, 0xFF	; 255
    1612:	40 e0       	ldi	r20, 0x00	; 0
    1614:	54 e2       	ldi	r21, 0x24	; 36
    1616:	64 e7       	ldi	r22, 0x74	; 116
    1618:	79 e4       	ldi	r23, 0x49	; 73
    161a:	c8 01       	movw	r24, r16
    161c:	d9 d1       	rcall	.+946    	; 0x19d0 <buffer_get_float32>
    161e:	9b 01       	movw	r18, r22
    1620:	ac 01       	movw	r20, r24
    1622:	60 93 26 03 	sts	0x0326, r22	; 0x800326 <dec_ppm_len>
    1626:	70 93 27 03 	sts	0x0327, r23	; 0x800327 <dec_ppm_len+0x1>
    162a:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <dec_ppm_len+0x2>
    162e:	90 93 29 03 	sts	0x0329, r25	; 0x800329 <dec_ppm_len+0x3>
    1632:	e0 91 08 03 	lds	r30, 0x0308	; 0x800308 <rx_dec_ppm_func>
    1636:	f0 91 09 03 	lds	r31, 0x0309	; 0x800309 <rx_dec_ppm_func+0x1>
    163a:	30 97       	sbiw	r30, 0x00	; 0
    163c:	09 f4       	brne	.+2      	; 0x1640 <__stack+0x541>
    163e:	66 c0       	rjmp	.+204    	; 0x170c <__stack+0x60d>
    1640:	60 91 2a 03 	lds	r22, 0x032A	; 0x80032a <dec_ppm>
    1644:	70 91 2b 03 	lds	r23, 0x032B	; 0x80032b <dec_ppm+0x1>
    1648:	80 91 2c 03 	lds	r24, 0x032C	; 0x80032c <dec_ppm+0x2>
    164c:	90 91 2d 03 	lds	r25, 0x032D	; 0x80032d <dec_ppm+0x3>
    1650:	09 95       	icall
    1652:	5c c0       	rjmp	.+184    	; 0x170c <__stack+0x60d>
    1654:	9e 01       	movw	r18, r28
    1656:	2f 5f       	subi	r18, 0xFF	; 255
    1658:	3f 4f       	sbci	r19, 0xFF	; 255
    165a:	40 e0       	ldi	r20, 0x00	; 0
    165c:	54 e2       	ldi	r21, 0x24	; 36
    165e:	64 e7       	ldi	r22, 0x74	; 116
    1660:	79 e4       	ldi	r23, 0x49	; 73
    1662:	c8 01       	movw	r24, r16
    1664:	b5 d1       	rcall	.+874    	; 0x19d0 <buffer_get_float32>
    1666:	60 93 22 03 	sts	0x0322, r22	; 0x800322 <dec_adc>
    166a:	70 93 23 03 	sts	0x0323, r23	; 0x800323 <dec_adc+0x1>
    166e:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <dec_adc+0x2>
    1672:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <dec_adc+0x3>
    1676:	9e 01       	movw	r18, r28
    1678:	2f 5f       	subi	r18, 0xFF	; 255
    167a:	3f 4f       	sbci	r19, 0xFF	; 255
    167c:	40 e0       	ldi	r20, 0x00	; 0
    167e:	54 e2       	ldi	r21, 0x24	; 36
    1680:	64 e7       	ldi	r22, 0x74	; 116
    1682:	79 e4       	ldi	r23, 0x49	; 73
    1684:	c8 01       	movw	r24, r16
    1686:	a4 d1       	rcall	.+840    	; 0x19d0 <buffer_get_float32>
    1688:	9b 01       	movw	r18, r22
    168a:	ac 01       	movw	r20, r24
    168c:	60 93 1e 03 	sts	0x031E, r22	; 0x80031e <dec_adc_voltage>
    1690:	70 93 1f 03 	sts	0x031F, r23	; 0x80031f <dec_adc_voltage+0x1>
    1694:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <dec_adc_voltage+0x2>
    1698:	90 93 21 03 	sts	0x0321, r25	; 0x800321 <dec_adc_voltage+0x3>
    169c:	e0 91 06 03 	lds	r30, 0x0306	; 0x800306 <rx_dec_adc_func>
    16a0:	f0 91 07 03 	lds	r31, 0x0307	; 0x800307 <rx_dec_adc_func+0x1>
    16a4:	30 97       	sbiw	r30, 0x00	; 0
    16a6:	91 f1       	breq	.+100    	; 0x170c <__stack+0x60d>
    16a8:	60 91 22 03 	lds	r22, 0x0322	; 0x800322 <dec_adc>
    16ac:	70 91 23 03 	lds	r23, 0x0323	; 0x800323 <dec_adc+0x1>
    16b0:	80 91 24 03 	lds	r24, 0x0324	; 0x800324 <dec_adc+0x2>
    16b4:	90 91 25 03 	lds	r25, 0x0325	; 0x800325 <dec_adc+0x3>
    16b8:	09 95       	icall
    16ba:	28 c0       	rjmp	.+80     	; 0x170c <__stack+0x60d>
    16bc:	9e 01       	movw	r18, r28
    16be:	2f 5f       	subi	r18, 0xFF	; 255
    16c0:	3f 4f       	sbci	r19, 0xFF	; 255
    16c2:	40 e0       	ldi	r20, 0x00	; 0
    16c4:	54 e2       	ldi	r21, 0x24	; 36
    16c6:	64 e7       	ldi	r22, 0x74	; 116
    16c8:	79 e4       	ldi	r23, 0x49	; 73
    16ca:	c8 01       	movw	r24, r16
    16cc:	81 d1       	rcall	.+770    	; 0x19d0 <buffer_get_float32>
    16ce:	60 93 1a 03 	sts	0x031A, r22	; 0x80031a <dec_chuk>
    16d2:	70 93 1b 03 	sts	0x031B, r23	; 0x80031b <dec_chuk+0x1>
    16d6:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <dec_chuk+0x2>
    16da:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <dec_chuk+0x3>
    16de:	e0 91 04 03 	lds	r30, 0x0304	; 0x800304 <rx_dec_chuk_func>
    16e2:	f0 91 05 03 	lds	r31, 0x0305	; 0x800305 <rx_dec_chuk_func+0x1>
    16e6:	30 97       	sbiw	r30, 0x00	; 0
    16e8:	89 f0       	breq	.+34     	; 0x170c <__stack+0x60d>
    16ea:	09 95       	icall
    16ec:	0f c0       	rjmp	.+30     	; 0x170c <__stack+0x60d>
    16ee:	e0 91 02 03 	lds	r30, 0x0302	; 0x800302 <rx_mcconf_received_func>
    16f2:	f0 91 03 03 	lds	r31, 0x0303	; 0x800303 <rx_mcconf_received_func+0x1>
    16f6:	30 97       	sbiw	r30, 0x00	; 0
    16f8:	49 f0       	breq	.+18     	; 0x170c <__stack+0x60d>
    16fa:	09 95       	icall
    16fc:	07 c0       	rjmp	.+14     	; 0x170c <__stack+0x60d>
    16fe:	e0 91 00 03 	lds	r30, 0x0300	; 0x800300 <__data_end>
    1702:	f0 91 01 03 	lds	r31, 0x0301	; 0x800301 <__data_end+0x1>
    1706:	30 97       	sbiw	r30, 0x00	; 0
    1708:	09 f0       	breq	.+2      	; 0x170c <__stack+0x60d>
    170a:	09 95       	icall
    170c:	0f 90       	pop	r0
    170e:	0f 90       	pop	r0
    1710:	0f 90       	pop	r0
    1712:	0f 90       	pop	r0
    1714:	df 91       	pop	r29
    1716:	cf 91       	pop	r28
    1718:	1f 91       	pop	r17
    171a:	0f 91       	pop	r16
    171c:	ff 90       	pop	r15
    171e:	ef 90       	pop	r14
    1720:	df 90       	pop	r13
    1722:	cf 90       	pop	r12
    1724:	bf 90       	pop	r11
    1726:	af 90       	pop	r10
    1728:	9f 90       	pop	r9
    172a:	8f 90       	pop	r8
    172c:	08 95       	ret

0000172e <bldc_interface_set_current>:
}

// Setters
void bldc_interface_set_current(float current) {
    172e:	ef 92       	push	r14
    1730:	ff 92       	push	r15
    1732:	0f 93       	push	r16
    1734:	1f 93       	push	r17
    1736:	cf 93       	push	r28
    1738:	df 93       	push	r29
    173a:	00 d0       	rcall	.+0      	; 0x173c <bldc_interface_set_current+0xe>
    173c:	00 d0       	rcall	.+0      	; 0x173e <bldc_interface_set_current+0x10>
    173e:	cd b7       	in	r28, 0x3d	; 61
    1740:	de b7       	in	r29, 0x3e	; 62
    1742:	ab 01       	movw	r20, r22
    1744:	bc 01       	movw	r22, r24
	int32_t send_index = 0;
	send_buffer[send_index++] = COMM_SET_CURRENT;
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	a0 e0       	ldi	r26, 0x00	; 0
    174c:	b0 e0       	ldi	r27, 0x00	; 0
    174e:	89 83       	std	Y+1, r24	; 0x01
    1750:	9a 83       	std	Y+2, r25	; 0x02
    1752:	ab 83       	std	Y+3, r26	; 0x03
    1754:	bc 83       	std	Y+4, r27	; 0x04
    1756:	86 e0       	ldi	r24, 0x06	; 6
    1758:	80 93 37 05 	sts	0x0537, r24	; 0x800537 <send_buffer>
	buffer_append_float32(send_buffer, current, 1000.0, &send_index);
    175c:	ce 01       	movw	r24, r28
    175e:	01 96       	adiw	r24, 0x01	; 1
    1760:	7c 01       	movw	r14, r24
    1762:	00 e0       	ldi	r16, 0x00	; 0
    1764:	10 e0       	ldi	r17, 0x00	; 0
    1766:	2a e7       	ldi	r18, 0x7A	; 122
    1768:	34 e4       	ldi	r19, 0x44	; 68
    176a:	87 e3       	ldi	r24, 0x37	; 55
    176c:	95 e0       	ldi	r25, 0x05	; 5
    176e:	76 d0       	rcall	.+236    	; 0x185c <buffer_append_float32>
}
    1770:	0f 90       	pop	r0
    1772:	0f 90       	pop	r0
    1774:	0f 90       	pop	r0
    1776:	0f 90       	pop	r0
    1778:	df 91       	pop	r29
    177a:	cf 91       	pop	r28
    177c:	1f 91       	pop	r17
    177e:	0f 91       	pop	r16
    1780:	ff 90       	pop	r15
    1782:	ef 90       	pop	r14
    1784:	08 95       	ret

00001786 <send_packet_bldc_interface>:
 * @param len
 * Data array length
 */
static void send_packet_bldc_interface(unsigned char *data, unsigned int len) {
	// Pass the packet to the packet handler to add checksum, length, start and stop bytes.
	packet_send_packet(data, len, PACKET_HANDLER);
    1786:	40 e0       	ldi	r20, 0x00	; 0
    1788:	50 e0       	ldi	r21, 0x00	; 0
    178a:	60 c1       	rjmp	.+704    	; 0x1a4c <packet_send_packet>
    178c:	08 95       	ret

0000178e <process_packet>:
 * @param len
 * Data array length
 */
static void process_packet(unsigned char *data, unsigned int len) {
	// Let bldc_interface process the packet.
	bldc_interface_process_packet(data, len);
    178e:	0c 94 8c 00 	jmp	0x118	; 0x118 <bldc_interface_process_packet>
    1792:	08 95       	ret

00001794 <bldc_interface_uart_init>:
 * @param func
 * Function provided for sending packets.
 */
void bldc_interface_uart_init(void(*func)(unsigned char *data, unsigned int len)) {
	// Initialize packet handler
	packet_init(func, process_packet, PACKET_HANDLER);
    1794:	40 e0       	ldi	r20, 0x00	; 0
    1796:	50 e0       	ldi	r21, 0x00	; 0
    1798:	67 ec       	ldi	r22, 0xC7	; 199
    179a:	7b e0       	ldi	r23, 0x0B	; 11
    179c:	47 d1       	rcall	.+654    	; 0x1a2c <packet_init>

	// Initialize the bldc interface and provide a send function
	bldc_interface_init(send_packet_bldc_interface);
    179e:	83 ec       	ldi	r24, 0xC3	; 195
    17a0:	9b e0       	ldi	r25, 0x0B	; 11
    17a2:	0c 94 87 00 	jmp	0x10e	; 0x10e <bldc_interface_init>
    17a6:	08 95       	ret

000017a8 <buffer_append_int32>:
	buffer[(*index)++] = number;
}

void buffer_append_float16(uint8_t* buffer, float number, float scale, int32_t *index) {
    buffer_append_int16(buffer, (int16_t)(number * scale), index);
}
    17a8:	cf 92       	push	r12
    17aa:	df 92       	push	r13
    17ac:	ef 92       	push	r14
    17ae:	ff 92       	push	r15
    17b0:	0f 93       	push	r16
    17b2:	1f 93       	push	r17
    17b4:	f9 01       	movw	r30, r18
    17b6:	00 81       	ld	r16, Z
    17b8:	11 81       	ldd	r17, Z+1	; 0x01
    17ba:	22 81       	ldd	r18, Z+2	; 0x02
    17bc:	33 81       	ldd	r19, Z+3	; 0x03
    17be:	68 01       	movw	r12, r16
    17c0:	79 01       	movw	r14, r18
    17c2:	af ef       	ldi	r26, 0xFF	; 255
    17c4:	ca 1a       	sub	r12, r26
    17c6:	da 0a       	sbc	r13, r26
    17c8:	ea 0a       	sbc	r14, r26
    17ca:	fa 0a       	sbc	r15, r26
    17cc:	c0 82       	st	Z, r12
    17ce:	d1 82       	std	Z+1, r13	; 0x01
    17d0:	e2 82       	std	Z+2, r14	; 0x02
    17d2:	f3 82       	std	Z+3, r15	; 0x03
    17d4:	dc 01       	movw	r26, r24
    17d6:	a0 0f       	add	r26, r16
    17d8:	b1 1f       	adc	r27, r17
    17da:	7c 93       	st	X, r23
    17dc:	00 81       	ld	r16, Z
    17de:	11 81       	ldd	r17, Z+1	; 0x01
    17e0:	22 81       	ldd	r18, Z+2	; 0x02
    17e2:	33 81       	ldd	r19, Z+3	; 0x03
    17e4:	68 01       	movw	r12, r16
    17e6:	79 01       	movw	r14, r18
    17e8:	7f ef       	ldi	r23, 0xFF	; 255
    17ea:	c7 1a       	sub	r12, r23
    17ec:	d7 0a       	sbc	r13, r23
    17ee:	e7 0a       	sbc	r14, r23
    17f0:	f7 0a       	sbc	r15, r23
    17f2:	c0 82       	st	Z, r12
    17f4:	d1 82       	std	Z+1, r13	; 0x01
    17f6:	e2 82       	std	Z+2, r14	; 0x02
    17f8:	f3 82       	std	Z+3, r15	; 0x03
    17fa:	dc 01       	movw	r26, r24
    17fc:	a0 0f       	add	r26, r16
    17fe:	b1 1f       	adc	r27, r17
    1800:	6c 93       	st	X, r22
    1802:	00 81       	ld	r16, Z
    1804:	11 81       	ldd	r17, Z+1	; 0x01
    1806:	22 81       	ldd	r18, Z+2	; 0x02
    1808:	33 81       	ldd	r19, Z+3	; 0x03
    180a:	68 01       	movw	r12, r16
    180c:	79 01       	movw	r14, r18
    180e:	af ef       	ldi	r26, 0xFF	; 255
    1810:	ca 1a       	sub	r12, r26
    1812:	da 0a       	sbc	r13, r26
    1814:	ea 0a       	sbc	r14, r26
    1816:	fa 0a       	sbc	r15, r26
    1818:	c0 82       	st	Z, r12
    181a:	d1 82       	std	Z+1, r13	; 0x01
    181c:	e2 82       	std	Z+2, r14	; 0x02
    181e:	f3 82       	std	Z+3, r15	; 0x03
    1820:	dc 01       	movw	r26, r24
    1822:	a0 0f       	add	r26, r16
    1824:	b1 1f       	adc	r27, r17
    1826:	5c 93       	st	X, r21
    1828:	00 81       	ld	r16, Z
    182a:	11 81       	ldd	r17, Z+1	; 0x01
    182c:	22 81       	ldd	r18, Z+2	; 0x02
    182e:	33 81       	ldd	r19, Z+3	; 0x03
    1830:	68 01       	movw	r12, r16
    1832:	79 01       	movw	r14, r18
    1834:	5f ef       	ldi	r21, 0xFF	; 255
    1836:	c5 1a       	sub	r12, r21
    1838:	d5 0a       	sbc	r13, r21
    183a:	e5 0a       	sbc	r14, r21
    183c:	f5 0a       	sbc	r15, r21
    183e:	c0 82       	st	Z, r12
    1840:	d1 82       	std	Z+1, r13	; 0x01
    1842:	e2 82       	std	Z+2, r14	; 0x02
    1844:	f3 82       	std	Z+3, r15	; 0x03
    1846:	fc 01       	movw	r30, r24
    1848:	e0 0f       	add	r30, r16
    184a:	f1 1f       	adc	r31, r17
    184c:	40 83       	st	Z, r20
    184e:	1f 91       	pop	r17
    1850:	0f 91       	pop	r16
    1852:	ff 90       	pop	r15
    1854:	ef 90       	pop	r14
    1856:	df 90       	pop	r13
    1858:	cf 90       	pop	r12
    185a:	08 95       	ret

0000185c <buffer_append_float32>:

void buffer_append_float32(uint8_t* buffer, float number, float scale, int32_t *index) {
    185c:	ef 92       	push	r14
    185e:	ff 92       	push	r15
    1860:	0f 93       	push	r16
    1862:	1f 93       	push	r17
    1864:	cf 93       	push	r28
    1866:	df 93       	push	r29
    1868:	ec 01       	movw	r28, r24
    186a:	cb 01       	movw	r24, r22
    186c:	ba 01       	movw	r22, r20
    buffer_append_int32(buffer, (int32_t)(number * scale), index);
    186e:	a9 01       	movw	r20, r18
    1870:	98 01       	movw	r18, r16
    1872:	4c d4       	rcall	.+2200   	; 0x210c <__mulsf3>
    1874:	64 d3       	rcall	.+1736   	; 0x1f3e <__fixsfsi>
    1876:	ab 01       	movw	r20, r22
    1878:	bc 01       	movw	r22, r24
    187a:	97 01       	movw	r18, r14
    187c:	ce 01       	movw	r24, r28
    187e:	94 df       	rcall	.-216    	; 0x17a8 <buffer_append_int32>
}
    1880:	df 91       	pop	r29
    1882:	cf 91       	pop	r28
    1884:	1f 91       	pop	r17
    1886:	0f 91       	pop	r16
    1888:	ff 90       	pop	r15
    188a:	ef 90       	pop	r14
    188c:	08 95       	ret

0000188e <buffer_get_int16>:

int16_t buffer_get_int16(const uint8_t *buffer, int32_t *index) {
    188e:	db 01       	movw	r26, r22
	int16_t res =	((uint16_t) buffer[*index]) << 8 |
    1890:	4d 91       	ld	r20, X+
    1892:	5d 91       	ld	r21, X+
    1894:	6d 91       	ld	r22, X+
    1896:	7c 91       	ld	r23, X
    1898:	13 97       	sbiw	r26, 0x03	; 3
					((uint16_t) buffer[*index + 1]);
    189a:	fc 01       	movw	r30, r24
    189c:	e4 0f       	add	r30, r20
    189e:	f5 1f       	adc	r31, r21
    18a0:	81 81       	ldd	r24, Z+1	; 0x01
void buffer_append_float32(uint8_t* buffer, float number, float scale, int32_t *index) {
    buffer_append_int32(buffer, (int32_t)(number * scale), index);
}

int16_t buffer_get_int16(const uint8_t *buffer, int32_t *index) {
	int16_t res =	((uint16_t) buffer[*index]) << 8 |
    18a2:	20 81       	ld	r18, Z
    18a4:	90 e0       	ldi	r25, 0x00	; 0
					((uint16_t) buffer[*index + 1]);
	*index += 2;
    18a6:	4e 5f       	subi	r20, 0xFE	; 254
    18a8:	5f 4f       	sbci	r21, 0xFF	; 255
    18aa:	6f 4f       	sbci	r22, 0xFF	; 255
    18ac:	7f 4f       	sbci	r23, 0xFF	; 255
    18ae:	4d 93       	st	X+, r20
    18b0:	5d 93       	st	X+, r21
    18b2:	6d 93       	st	X+, r22
    18b4:	7c 93       	st	X, r23
    18b6:	13 97       	sbiw	r26, 0x03	; 3
	return res;
}
    18b8:	92 2b       	or	r25, r18
    18ba:	08 95       	ret

000018bc <buffer_get_uint16>:

uint16_t buffer_get_uint16(const uint8_t *buffer, int32_t *index) {
    18bc:	db 01       	movw	r26, r22
	uint16_t res = 	((uint16_t) buffer[*index]) << 8 |
    18be:	4d 91       	ld	r20, X+
    18c0:	5d 91       	ld	r21, X+
    18c2:	6d 91       	ld	r22, X+
    18c4:	7c 91       	ld	r23, X
    18c6:	13 97       	sbiw	r26, 0x03	; 3
					((uint16_t) buffer[*index + 1]);
    18c8:	fc 01       	movw	r30, r24
    18ca:	e4 0f       	add	r30, r20
    18cc:	f5 1f       	adc	r31, r21
    18ce:	81 81       	ldd	r24, Z+1	; 0x01
	*index += 2;
	return res;
}

uint16_t buffer_get_uint16(const uint8_t *buffer, int32_t *index) {
	uint16_t res = 	((uint16_t) buffer[*index]) << 8 |
    18d0:	20 81       	ld	r18, Z
    18d2:	90 e0       	ldi	r25, 0x00	; 0
					((uint16_t) buffer[*index + 1]);
	*index += 2;
    18d4:	4e 5f       	subi	r20, 0xFE	; 254
    18d6:	5f 4f       	sbci	r21, 0xFF	; 255
    18d8:	6f 4f       	sbci	r22, 0xFF	; 255
    18da:	7f 4f       	sbci	r23, 0xFF	; 255
    18dc:	4d 93       	st	X+, r20
    18de:	5d 93       	st	X+, r21
    18e0:	6d 93       	st	X+, r22
    18e2:	7c 93       	st	X, r23
    18e4:	13 97       	sbiw	r26, 0x03	; 3
	return res;
}
    18e6:	92 2b       	or	r25, r18
    18e8:	08 95       	ret

000018ea <buffer_get_int32>:

int32_t buffer_get_int32(const uint8_t *buffer, int32_t *index) {
    18ea:	cf 92       	push	r12
    18ec:	df 92       	push	r13
    18ee:	ef 92       	push	r14
    18f0:	ff 92       	push	r15
    18f2:	0f 93       	push	r16
    18f4:	1f 93       	push	r17
    18f6:	fb 01       	movw	r30, r22
	int32_t res =	((uint32_t) buffer[*index]) << 24 |
    18f8:	00 81       	ld	r16, Z
    18fa:	11 81       	ldd	r17, Z+1	; 0x01
    18fc:	22 81       	ldd	r18, Z+2	; 0x02
    18fe:	33 81       	ldd	r19, Z+3	; 0x03
					((uint32_t) buffer[*index + 1]) << 16 |
					((uint32_t) buffer[*index + 2]) << 8 |
					((uint32_t) buffer[*index + 3]);
    1900:	dc 01       	movw	r26, r24
    1902:	a0 0f       	add	r26, r16
    1904:	b1 1f       	adc	r27, r17
    1906:	13 96       	adiw	r26, 0x03	; 3
    1908:	6c 91       	ld	r22, X
    190a:	13 97       	sbiw	r26, 0x03	; 3
	*index += 2;
	return res;
}

int32_t buffer_get_int32(const uint8_t *buffer, int32_t *index) {
	int32_t res =	((uint32_t) buffer[*index]) << 24 |
    190c:	4c 91       	ld	r20, X
    190e:	c6 2e       	mov	r12, r22
    1910:	d1 2c       	mov	r13, r1
    1912:	e1 2c       	mov	r14, r1
    1914:	f1 2c       	mov	r15, r1
    1916:	f4 2a       	or	r15, r20
					((uint32_t) buffer[*index + 1]) << 16 |
    1918:	11 96       	adiw	r26, 0x01	; 1
    191a:	4c 91       	ld	r20, X
    191c:	11 97       	sbiw	r26, 0x01	; 1
    191e:	e4 2a       	or	r14, r20
					((uint32_t) buffer[*index + 2]) << 8 |
    1920:	12 96       	adiw	r26, 0x02	; 2
    1922:	4c 91       	ld	r20, X
    1924:	c7 01       	movw	r24, r14
    1926:	b6 01       	movw	r22, r12
    1928:	74 2b       	or	r23, r20
					((uint32_t) buffer[*index + 3]);
	*index += 4;
    192a:	0c 5f       	subi	r16, 0xFC	; 252
    192c:	1f 4f       	sbci	r17, 0xFF	; 255
    192e:	2f 4f       	sbci	r18, 0xFF	; 255
    1930:	3f 4f       	sbci	r19, 0xFF	; 255
    1932:	00 83       	st	Z, r16
    1934:	11 83       	std	Z+1, r17	; 0x01
    1936:	22 83       	std	Z+2, r18	; 0x02
    1938:	33 83       	std	Z+3, r19	; 0x03
	return res;
}
    193a:	1f 91       	pop	r17
    193c:	0f 91       	pop	r16
    193e:	ff 90       	pop	r15
    1940:	ef 90       	pop	r14
    1942:	df 90       	pop	r13
    1944:	cf 90       	pop	r12
    1946:	08 95       	ret

00001948 <buffer_get_uint32>:

uint32_t buffer_get_uint32(const uint8_t *buffer, int32_t *index) {
    1948:	cf 92       	push	r12
    194a:	df 92       	push	r13
    194c:	ef 92       	push	r14
    194e:	ff 92       	push	r15
    1950:	0f 93       	push	r16
    1952:	1f 93       	push	r17
    1954:	fb 01       	movw	r30, r22
	uint32_t res =	((uint32_t) buffer[*index]) << 24 |
    1956:	00 81       	ld	r16, Z
    1958:	11 81       	ldd	r17, Z+1	; 0x01
    195a:	22 81       	ldd	r18, Z+2	; 0x02
    195c:	33 81       	ldd	r19, Z+3	; 0x03
					((uint32_t) buffer[*index + 1]) << 16 |
					((uint32_t) buffer[*index + 2]) << 8 |
					((uint32_t) buffer[*index + 3]);
    195e:	dc 01       	movw	r26, r24
    1960:	a0 0f       	add	r26, r16
    1962:	b1 1f       	adc	r27, r17
    1964:	13 96       	adiw	r26, 0x03	; 3
    1966:	6c 91       	ld	r22, X
    1968:	13 97       	sbiw	r26, 0x03	; 3
	*index += 4;
	return res;
}

uint32_t buffer_get_uint32(const uint8_t *buffer, int32_t *index) {
	uint32_t res =	((uint32_t) buffer[*index]) << 24 |
    196a:	4c 91       	ld	r20, X
    196c:	c6 2e       	mov	r12, r22
    196e:	d1 2c       	mov	r13, r1
    1970:	e1 2c       	mov	r14, r1
    1972:	f1 2c       	mov	r15, r1
    1974:	f4 2a       	or	r15, r20
					((uint32_t) buffer[*index + 1]) << 16 |
    1976:	11 96       	adiw	r26, 0x01	; 1
    1978:	4c 91       	ld	r20, X
    197a:	11 97       	sbiw	r26, 0x01	; 1
    197c:	e4 2a       	or	r14, r20
					((uint32_t) buffer[*index + 2]) << 8 |
    197e:	12 96       	adiw	r26, 0x02	; 2
    1980:	4c 91       	ld	r20, X
	*index += 4;
	return res;
}

uint32_t buffer_get_uint32(const uint8_t *buffer, int32_t *index) {
	uint32_t res =	((uint32_t) buffer[*index]) << 24 |
    1982:	c7 01       	movw	r24, r14
    1984:	b6 01       	movw	r22, r12
    1986:	74 2b       	or	r23, r20
					((uint32_t) buffer[*index + 1]) << 16 |
					((uint32_t) buffer[*index + 2]) << 8 |
					((uint32_t) buffer[*index + 3]);
	*index += 4;
    1988:	0c 5f       	subi	r16, 0xFC	; 252
    198a:	1f 4f       	sbci	r17, 0xFF	; 255
    198c:	2f 4f       	sbci	r18, 0xFF	; 255
    198e:	3f 4f       	sbci	r19, 0xFF	; 255
    1990:	00 83       	st	Z, r16
    1992:	11 83       	std	Z+1, r17	; 0x01
    1994:	22 83       	std	Z+2, r18	; 0x02
    1996:	33 83       	std	Z+3, r19	; 0x03
	return res;
}
    1998:	1f 91       	pop	r17
    199a:	0f 91       	pop	r16
    199c:	ff 90       	pop	r15
    199e:	ef 90       	pop	r14
    19a0:	df 90       	pop	r13
    19a2:	cf 90       	pop	r12
    19a4:	08 95       	ret

000019a6 <buffer_get_float16>:

float buffer_get_float16(const uint8_t *buffer, float scale, int32_t *index) {
    19a6:	cf 92       	push	r12
    19a8:	df 92       	push	r13
    19aa:	ef 92       	push	r14
    19ac:	ff 92       	push	r15
    19ae:	6a 01       	movw	r12, r20
    19b0:	7b 01       	movw	r14, r22
    return (float)buffer_get_int16(buffer, index) / scale;
    19b2:	b9 01       	movw	r22, r18
    19b4:	6c df       	rcall	.-296    	; 0x188e <buffer_get_int16>
    19b6:	bc 01       	movw	r22, r24
    19b8:	99 0f       	add	r25, r25
    19ba:	88 0b       	sbc	r24, r24
    19bc:	99 0b       	sbc	r25, r25
    19be:	f2 d2       	rcall	.+1508   	; 0x1fa4 <__floatsisf>
    19c0:	a7 01       	movw	r20, r14
    19c2:	96 01       	movw	r18, r12
    19c4:	54 d2       	rcall	.+1192   	; 0x1e6e <__divsf3>
}
    19c6:	ff 90       	pop	r15
    19c8:	ef 90       	pop	r14
    19ca:	df 90       	pop	r13
    19cc:	cf 90       	pop	r12
    19ce:	08 95       	ret

000019d0 <buffer_get_float32>:

float buffer_get_float32(const uint8_t *buffer, float scale, int32_t *index) {
    19d0:	cf 92       	push	r12
    19d2:	df 92       	push	r13
    19d4:	ef 92       	push	r14
    19d6:	ff 92       	push	r15
    19d8:	6a 01       	movw	r12, r20
    19da:	7b 01       	movw	r14, r22
    return (float)buffer_get_int32(buffer, index) / scale;
    19dc:	b9 01       	movw	r22, r18
    19de:	85 df       	rcall	.-246    	; 0x18ea <buffer_get_int32>
    19e0:	e1 d2       	rcall	.+1474   	; 0x1fa4 <__floatsisf>
    19e2:	a7 01       	movw	r20, r14
    19e4:	96 01       	movw	r18, r12
    19e6:	43 d2       	rcall	.+1158   	; 0x1e6e <__divsf3>
}
    19e8:	ff 90       	pop	r15
    19ea:	ef 90       	pop	r14
    19ec:	df 90       	pop	r13
    19ee:	cf 90       	pop	r12
    19f0:	08 95       	ret

000019f2 <crc16>:
		0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0 };

unsigned short crc16(unsigned char *buf, unsigned int len) {
	unsigned int i;
	unsigned short cksum = 0;
	for (i = 0; i < len; i++) {
    19f2:	61 15       	cp	r22, r1
    19f4:	71 05       	cpc	r23, r1
    19f6:	b9 f0       	breq	.+46     	; 0x1a26 <crc16+0x34>
    19f8:	dc 01       	movw	r26, r24
    19fa:	68 0f       	add	r22, r24
    19fc:	79 1f       	adc	r23, r25
    19fe:	80 e0       	ldi	r24, 0x00	; 0
    1a00:	90 e0       	ldi	r25, 0x00	; 0
		cksum = crc16_tab[(((cksum >> 8) ^ *buf++) & 0xFF)] ^ (cksum << 8);
    1a02:	2d 91       	ld	r18, X+
    1a04:	e9 2f       	mov	r30, r25
    1a06:	ff 27       	eor	r31, r31
    1a08:	e2 27       	eor	r30, r18
    1a0a:	ee 0f       	add	r30, r30
    1a0c:	ff 1f       	adc	r31, r31
    1a0e:	e0 50       	subi	r30, 0x00	; 0
    1a10:	ff 4f       	sbci	r31, 0xFF	; 255
    1a12:	20 81       	ld	r18, Z
    1a14:	31 81       	ldd	r19, Z+1	; 0x01
    1a16:	98 2f       	mov	r25, r24
    1a18:	88 27       	eor	r24, r24
    1a1a:	82 27       	eor	r24, r18
    1a1c:	93 27       	eor	r25, r19
		0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0 };

unsigned short crc16(unsigned char *buf, unsigned int len) {
	unsigned int i;
	unsigned short cksum = 0;
	for (i = 0; i < len; i++) {
    1a1e:	a6 17       	cp	r26, r22
    1a20:	b7 07       	cpc	r27, r23
    1a22:	79 f7       	brne	.-34     	; 0x1a02 <crc16+0x10>
    1a24:	08 95       	ret
		0x0cc1, 0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,
		0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0 };

unsigned short crc16(unsigned char *buf, unsigned int len) {
	unsigned int i;
	unsigned short cksum = 0;
    1a26:	80 e0       	ldi	r24, 0x00	; 0
    1a28:	90 e0       	ldi	r25, 0x00	; 0
	for (i = 0; i < len; i++) {
		cksum = crc16_tab[(((cksum >> 8) ^ *buf++) & 0xFF)] ^ (cksum << 8);
	}
	return cksum;
}
    1a2a:	08 95       	ret

00001a2c <packet_init>:

static PACKET_STATE_t handler_states[PACKET_HANDLERS];

void packet_init(void (*s_func)(unsigned char *data, unsigned int len),
		void (*p_func)(unsigned char *data, unsigned int len), int handler_num) {
	handler_states[handler_num].send_func = s_func;
    1a2c:	22 e1       	ldi	r18, 0x12	; 18
    1a2e:	34 e0       	ldi	r19, 0x04	; 4
    1a30:	42 9f       	mul	r20, r18
    1a32:	f0 01       	movw	r30, r0
    1a34:	43 9f       	mul	r20, r19
    1a36:	f0 0d       	add	r31, r0
    1a38:	52 9f       	mul	r21, r18
    1a3a:	f0 0d       	add	r31, r0
    1a3c:	11 24       	eor	r1, r1
    1a3e:	e9 5c       	subi	r30, 0xC9	; 201
    1a40:	f8 4f       	sbci	r31, 0xF8	; 248
    1a42:	93 83       	std	Z+3, r25	; 0x03
    1a44:	82 83       	std	Z+2, r24	; 0x02
	handler_states[handler_num].process_func = p_func;
    1a46:	75 83       	std	Z+5, r23	; 0x05
    1a48:	64 83       	std	Z+4, r22	; 0x04
    1a4a:	08 95       	ret

00001a4c <packet_send_packet>:
}

void packet_send_packet(unsigned char *data, unsigned int len, int handler_num) {
    1a4c:	af 92       	push	r10
    1a4e:	bf 92       	push	r11
    1a50:	cf 92       	push	r12
    1a52:	df 92       	push	r13
    1a54:	ef 92       	push	r14
    1a56:	ff 92       	push	r15
    1a58:	0f 93       	push	r16
    1a5a:	1f 93       	push	r17
    1a5c:	cf 93       	push	r28
    1a5e:	df 93       	push	r29
    1a60:	5c 01       	movw	r10, r24
    1a62:	eb 01       	movw	r28, r22
	if (len > PACKET_MAX_PL_LEN) {
    1a64:	61 30       	cpi	r22, 0x01	; 1
    1a66:	22 e0       	ldi	r18, 0x02	; 2
    1a68:	72 07       	cpc	r23, r18
    1a6a:	08 f0       	brcs	.+2      	; 0x1a6e <packet_send_packet+0x22>
    1a6c:	5f c0       	rjmp	.+190    	; 0x1b2c <packet_send_packet+0xe0>
		return;
	}

	int b_ind = 0;

	if (len <= 256) {
    1a6e:	61 30       	cpi	r22, 0x01	; 1
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	78 07       	cpc	r23, r24
    1a74:	a8 f4       	brcc	.+42     	; 0x1aa0 <packet_send_packet+0x54>
		handler_states[handler_num].tx_buffer[b_ind++] = 2;
    1a76:	22 e1       	ldi	r18, 0x12	; 18
    1a78:	34 e0       	ldi	r19, 0x04	; 4
    1a7a:	42 9f       	mul	r20, r18
    1a7c:	c0 01       	movw	r24, r0
    1a7e:	43 9f       	mul	r20, r19
    1a80:	90 0d       	add	r25, r0
    1a82:	52 9f       	mul	r21, r18
    1a84:	90 0d       	add	r25, r0
    1a86:	11 24       	eor	r1, r1
    1a88:	89 5c       	subi	r24, 0xC9	; 201
    1a8a:	98 4f       	sbci	r25, 0xF8	; 248
    1a8c:	fc 01       	movw	r30, r24
    1a8e:	e8 5f       	subi	r30, 0xF8	; 248
    1a90:	fd 4f       	sbci	r31, 0xFD	; 253
    1a92:	22 e0       	ldi	r18, 0x02	; 2
    1a94:	20 83       	st	Z, r18
		handler_states[handler_num].tx_buffer[b_ind++] = len;
    1a96:	31 96       	adiw	r30, 0x01	; 1
    1a98:	60 83       	st	Z, r22
    1a9a:	02 e0       	ldi	r16, 0x02	; 2
    1a9c:	10 e0       	ldi	r17, 0x00	; 0
    1a9e:	16 c0       	rjmp	.+44     	; 0x1acc <packet_send_packet+0x80>
	} else {
		handler_states[handler_num].tx_buffer[b_ind++] = 3;
    1aa0:	22 e1       	ldi	r18, 0x12	; 18
    1aa2:	34 e0       	ldi	r19, 0x04	; 4
    1aa4:	42 9f       	mul	r20, r18
    1aa6:	c0 01       	movw	r24, r0
    1aa8:	43 9f       	mul	r20, r19
    1aaa:	90 0d       	add	r25, r0
    1aac:	52 9f       	mul	r21, r18
    1aae:	90 0d       	add	r25, r0
    1ab0:	11 24       	eor	r1, r1
    1ab2:	89 5c       	subi	r24, 0xC9	; 201
    1ab4:	98 4f       	sbci	r25, 0xF8	; 248
    1ab6:	fc 01       	movw	r30, r24
    1ab8:	e8 5f       	subi	r30, 0xF8	; 248
    1aba:	fd 4f       	sbci	r31, 0xFD	; 253
    1abc:	23 e0       	ldi	r18, 0x03	; 3
    1abe:	20 83       	st	Z, r18
		handler_states[handler_num].tx_buffer[b_ind++] = len >> 8;
    1ac0:	31 96       	adiw	r30, 0x01	; 1
    1ac2:	d0 83       	st	Z, r29
		handler_states[handler_num].tx_buffer[b_ind++] = len & 0xFF;
    1ac4:	31 96       	adiw	r30, 0x01	; 1
    1ac6:	60 83       	st	Z, r22
    1ac8:	03 e0       	ldi	r16, 0x03	; 3
    1aca:	10 e0       	ldi	r17, 0x00	; 0
	}

	memcpy(handler_states[handler_num].tx_buffer + b_ind, data, len);
    1acc:	82 e1       	ldi	r24, 0x12	; 18
    1ace:	94 e0       	ldi	r25, 0x04	; 4
    1ad0:	48 9f       	mul	r20, r24
    1ad2:	70 01       	movw	r14, r0
    1ad4:	49 9f       	mul	r20, r25
    1ad6:	f0 0c       	add	r15, r0
    1ad8:	58 9f       	mul	r21, r24
    1ada:	f0 0c       	add	r15, r0
    1adc:	11 24       	eor	r1, r1
    1ade:	c7 01       	movw	r24, r14
    1ae0:	81 5c       	subi	r24, 0xC1	; 193
    1ae2:	96 4f       	sbci	r25, 0xF6	; 246
    1ae4:	6c 01       	movw	r12, r24
    1ae6:	ae 01       	movw	r20, r28
    1ae8:	b5 01       	movw	r22, r10
    1aea:	80 0f       	add	r24, r16
    1aec:	91 1f       	adc	r25, r17
    1aee:	7a d3       	rcall	.+1780   	; 0x21e4 <memcpy>
	b_ind += len;
    1af0:	0c 0f       	add	r16, r28
    1af2:	1d 1f       	adc	r17, r29

	unsigned short crc = crc16(data, len);
    1af4:	be 01       	movw	r22, r28
    1af6:	c5 01       	movw	r24, r10
    1af8:	7c df       	rcall	.-264    	; 0x19f2 <crc16>
	handler_states[handler_num].tx_buffer[b_ind++] = (uint8_t)(crc >> 8);
    1afa:	f7 01       	movw	r30, r14
    1afc:	e9 5c       	subi	r30, 0xC9	; 201
    1afe:	f8 4f       	sbci	r31, 0xF8	; 248
    1b00:	9f 01       	movw	r18, r30
    1b02:	20 0f       	add	r18, r16
    1b04:	31 1f       	adc	r19, r17
    1b06:	d9 01       	movw	r26, r18
    1b08:	a8 5f       	subi	r26, 0xF8	; 248
    1b0a:	bd 4f       	sbci	r27, 0xFD	; 253
    1b0c:	9c 93       	st	X, r25
	handler_states[handler_num].tx_buffer[b_ind++] = (uint8_t)(crc & 0xFF);
    1b0e:	11 96       	adiw	r26, 0x01	; 1
    1b10:	8c 93       	st	X, r24
	handler_states[handler_num].tx_buffer[b_ind++] = 3;
    1b12:	b8 01       	movw	r22, r16
    1b14:	6d 5f       	subi	r22, 0xFD	; 253
    1b16:	7f 4f       	sbci	r23, 0xFF	; 255
    1b18:	11 96       	adiw	r26, 0x01	; 1
    1b1a:	83 e0       	ldi	r24, 0x03	; 3
    1b1c:	8c 93       	st	X, r24

	if (handler_states[handler_num].send_func) {
    1b1e:	02 80       	ldd	r0, Z+2	; 0x02
    1b20:	f3 81       	ldd	r31, Z+3	; 0x03
    1b22:	e0 2d       	mov	r30, r0
    1b24:	30 97       	sbiw	r30, 0x00	; 0
    1b26:	11 f0       	breq	.+4      	; 0x1b2c <packet_send_packet+0xe0>
		handler_states[handler_num].send_func(handler_states[handler_num].tx_buffer, b_ind);
    1b28:	c6 01       	movw	r24, r12
    1b2a:	09 95       	icall
	}
}
    1b2c:	df 91       	pop	r29
    1b2e:	cf 91       	pop	r28
    1b30:	1f 91       	pop	r17
    1b32:	0f 91       	pop	r16
    1b34:	ff 90       	pop	r15
    1b36:	ef 90       	pop	r14
    1b38:	df 90       	pop	r13
    1b3a:	cf 90       	pop	r12
    1b3c:	bf 90       	pop	r11
    1b3e:	af 90       	pop	r10
    1b40:	08 95       	ret

00001b42 <send_packet>:
    DDRD |= (1<<PD0);   //SPI SS pin
    DDRD &= ~(1<<PD7)|(1<<PD6);  //Configure Port D Pin 7, 6 for input
    PORTD |= (1<<PD7);  //enable pullup
    timer1_init();      //initialize 16 bit timer
    uart_init(MYUBBR);	//initialize uart
    sei();
    1b42:	cf 93       	push	r28
    1b44:	df 93       	push	r29
    1b46:	9c 01       	movw	r18, r24
    1b48:	eb e9       	ldi	r30, 0x9B	; 155
    1b4a:	f0 e0       	ldi	r31, 0x00	; 0
    1b4c:	90 81       	ld	r25, Z
    1b4e:	95 ff       	sbrs	r25, 5
    1b50:	fd cf       	rjmp	.-6      	; 0x1b4c <send_packet+0xa>
    1b52:	61 15       	cp	r22, r1
    1b54:	71 05       	cpc	r23, r1
    1b56:	99 f0       	breq	.+38     	; 0x1b7e <send_packet+0x3c>
    1b58:	d9 01       	movw	r26, r18
    1b5a:	62 0f       	add	r22, r18
    1b5c:	73 1f       	adc	r23, r19
    1b5e:	cc e9       	ldi	r28, 0x9C	; 156
    1b60:	d0 e0       	ldi	r29, 0x00	; 0
    1b62:	eb e9       	ldi	r30, 0x9B	; 155
    1b64:	f0 e0       	ldi	r31, 0x00	; 0
    1b66:	9d 91       	ld	r25, X+
    1b68:	98 83       	st	Y, r25
    1b6a:	90 81       	ld	r25, Z
    1b6c:	95 ff       	sbrs	r25, 5
    1b6e:	fd cf       	rjmp	.-6      	; 0x1b6a <send_packet+0x28>
    1b70:	81 e2       	ldi	r24, 0x21	; 33
    1b72:	8a 95       	dec	r24
    1b74:	f1 f7       	brne	.-4      	; 0x1b72 <send_packet+0x30>
    1b76:	00 00       	nop
    1b78:	a6 17       	cp	r26, r22
    1b7a:	b7 07       	cpc	r27, r23
    1b7c:	a1 f7       	brne	.-24     	; 0x1b66 <send_packet+0x24>
    1b7e:	df 91       	pop	r29
    1b80:	cf 91       	pop	r28
    1b82:	08 95       	ret

00001b84 <timer1_init>:
    1b84:	8f b5       	in	r24, 0x2f	; 47
    1b86:	83 60       	ori	r24, 0x03	; 3
    1b88:	8f bd       	out	0x2f, r24	; 47
    1b8a:	8e b5       	in	r24, 0x2e	; 46
    1b8c:	88 61       	ori	r24, 0x18	; 24
    1b8e:	8e bd       	out	0x2e, r24	; 46
    1b90:	8e b5       	in	r24, 0x2e	; 46
    1b92:	83 60       	ori	r24, 0x03	; 3
    1b94:	8e bd       	out	0x2e, r24	; 46
    1b96:	87 ea       	ldi	r24, 0xA7	; 167
    1b98:	91 e6       	ldi	r25, 0x61	; 97
    1b9a:	9b bd       	out	0x2b, r25	; 43
    1b9c:	8a bd       	out	0x2a, r24	; 42
    1b9e:	87 b7       	in	r24, 0x37	; 55
    1ba0:	84 60       	ori	r24, 0x04	; 4
    1ba2:	87 bf       	out	0x37, r24	; 55
    1ba4:	08 95       	ret

00001ba6 <motor_torque>:
    1ba6:	8f 92       	push	r8
    1ba8:	9f 92       	push	r9
    1baa:	af 92       	push	r10
    1bac:	bf 92       	push	r11
    1bae:	cf 92       	push	r12
    1bb0:	df 92       	push	r13
    1bb2:	ef 92       	push	r14
    1bb4:	ff 92       	push	r15
    1bb6:	0f 93       	push	r16
    1bb8:	1f 93       	push	r17
    1bba:	cf 93       	push	r28
    1bbc:	7c 01       	movw	r14, r24
    1bbe:	6b 01       	movw	r12, r22
    1bc0:	8a 01       	movw	r16, r20
    1bc2:	c0 b3       	in	r28, 0x10	; 16
    1bc4:	20 e0       	ldi	r18, 0x00	; 0
    1bc6:	30 e0       	ldi	r19, 0x00	; 0
    1bc8:	40 e0       	ldi	r20, 0x00	; 0
    1bca:	5f e3       	ldi	r21, 0x3F	; 63
    1bcc:	60 91 49 0b 	lds	r22, 0x0B49	; 0x800b49 <general_torque.2676>
    1bd0:	70 91 4a 0b 	lds	r23, 0x0B4A	; 0x800b4a <general_torque.2676+0x1>
    1bd4:	80 91 4b 0b 	lds	r24, 0x0B4B	; 0x800b4b <general_torque.2676+0x2>
    1bd8:	90 91 4c 0b 	lds	r25, 0x0B4C	; 0x800b4c <general_torque.2676+0x3>
    1bdc:	e0 d0       	rcall	.+448    	; 0x1d9e <__addsf3>
    1bde:	60 93 49 0b 	sts	0x0B49, r22	; 0x800b49 <general_torque.2676>
    1be2:	70 93 4a 0b 	sts	0x0B4A, r23	; 0x800b4a <general_torque.2676+0x1>
    1be6:	80 93 4b 0b 	sts	0x0B4B, r24	; 0x800b4b <general_torque.2676+0x2>
    1bea:	90 93 4c 0b 	sts	0x0B4C, r25	; 0x800b4c <general_torque.2676+0x3>
    1bee:	f8 01       	movw	r30, r16
    1bf0:	11 82       	std	Z+1, r1	; 0x01
    1bf2:	10 82       	st	Z, r1
    1bf4:	2c 2f       	mov	r18, r28
    1bf6:	2f 67       	ori	r18, 0x7F	; 127
    1bf8:	23 30       	cpi	r18, 0x03	; 3
    1bfa:	09 f4       	brne	.+2      	; 0x1bfe <motor_torque+0x58>
    1bfc:	4a c0       	rjmp	.+148    	; 0x1c92 <motor_torque+0xec>
    1bfe:	2f 37       	cpi	r18, 0x7F	; 127
    1c00:	19 f0       	breq	.+6      	; 0x1c08 <motor_torque+0x62>
    1c02:	21 11       	cpse	r18, r1
    1c04:	2e c0       	rjmp	.+92     	; 0x1c62 <motor_torque+0xbc>
    1c06:	45 c0       	rjmp	.+138    	; 0x1c92 <motor_torque+0xec>
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	48 ec       	ldi	r20, 0xC8	; 200
    1c0e:	51 e4       	ldi	r21, 0x41	; 65
    1c10:	79 d2       	rcall	.+1266   	; 0x2104 <__gesf2>
    1c12:	18 16       	cp	r1, r24
    1c14:	64 f4       	brge	.+24     	; 0x1c2e <motor_torque+0x88>
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	a8 ec       	ldi	r26, 0xC8	; 200
    1c1c:	b1 e4       	ldi	r27, 0x41	; 65
    1c1e:	80 93 49 0b 	sts	0x0B49, r24	; 0x800b49 <general_torque.2676>
    1c22:	90 93 4a 0b 	sts	0x0B4A, r25	; 0x800b4a <general_torque.2676+0x1>
    1c26:	a0 93 4b 0b 	sts	0x0B4B, r26	; 0x800b4b <general_torque.2676+0x2>
    1c2a:	b0 93 4c 0b 	sts	0x0B4C, r27	; 0x800b4c <general_torque.2676+0x3>
    1c2e:	80 90 49 0b 	lds	r8, 0x0B49	; 0x800b49 <general_torque.2676>
    1c32:	90 90 4a 0b 	lds	r9, 0x0B4A	; 0x800b4a <general_torque.2676+0x1>
    1c36:	a0 90 4b 0b 	lds	r10, 0x0B4B	; 0x800b4b <general_torque.2676+0x2>
    1c3a:	b0 90 4c 0b 	lds	r11, 0x0B4C	; 0x800b4c <general_torque.2676+0x3>
    1c3e:	26 ea       	ldi	r18, 0xA6	; 166
    1c40:	3d ee       	ldi	r19, 0xED	; 237
    1c42:	4f e7       	ldi	r20, 0x7F	; 127
    1c44:	5f e3       	ldi	r21, 0x3F	; 63
    1c46:	c5 01       	movw	r24, r10
    1c48:	b4 01       	movw	r22, r8
    1c4a:	60 d2       	rcall	.+1216   	; 0x210c <__mulsf3>
    1c4c:	f7 01       	movw	r30, r14
    1c4e:	60 83       	st	Z, r22
    1c50:	71 83       	std	Z+1, r23	; 0x01
    1c52:	82 83       	std	Z+2, r24	; 0x02
    1c54:	93 83       	std	Z+3, r25	; 0x03
    1c56:	f6 01       	movw	r30, r12
    1c58:	80 82       	st	Z, r8
    1c5a:	91 82       	std	Z+1, r9	; 0x01
    1c5c:	a2 82       	std	Z+2, r10	; 0x02
    1c5e:	b3 82       	std	Z+3, r11	; 0x03
    1c60:	18 c0       	rjmp	.+48     	; 0x1c92 <motor_torque+0xec>
    1c62:	20 e0       	ldi	r18, 0x00	; 0
    1c64:	30 e0       	ldi	r19, 0x00	; 0
    1c66:	a9 01       	movw	r20, r18
    1c68:	fe d0       	rcall	.+508    	; 0x1e66 <__cmpsf2>
    1c6a:	88 23       	and	r24, r24
    1c6c:	91 f0       	breq	.+36     	; 0x1c92 <motor_torque+0xec>
    1c6e:	10 92 49 0b 	sts	0x0B49, r1	; 0x800b49 <general_torque.2676>
    1c72:	10 92 4a 0b 	sts	0x0B4A, r1	; 0x800b4a <general_torque.2676+0x1>
    1c76:	10 92 4b 0b 	sts	0x0B4B, r1	; 0x800b4b <general_torque.2676+0x2>
    1c7a:	10 92 4c 0b 	sts	0x0B4C, r1	; 0x800b4c <general_torque.2676+0x3>
    1c7e:	f6 01       	movw	r30, r12
    1c80:	10 82       	st	Z, r1
    1c82:	11 82       	std	Z+1, r1	; 0x01
    1c84:	12 82       	std	Z+2, r1	; 0x02
    1c86:	13 82       	std	Z+3, r1	; 0x03
    1c88:	f7 01       	movw	r30, r14
    1c8a:	10 82       	st	Z, r1
    1c8c:	11 82       	std	Z+1, r1	; 0x01
    1c8e:	12 82       	std	Z+2, r1	; 0x02
    1c90:	13 82       	std	Z+3, r1	; 0x03
    1c92:	cf 91       	pop	r28
    1c94:	1f 91       	pop	r17
    1c96:	0f 91       	pop	r16
    1c98:	ff 90       	pop	r15
    1c9a:	ef 90       	pop	r14
    1c9c:	df 90       	pop	r13
    1c9e:	cf 90       	pop	r12
    1ca0:	bf 90       	pop	r11
    1ca2:	af 90       	pop	r10
    1ca4:	9f 90       	pop	r9
    1ca6:	8f 90       	pop	r8
    1ca8:	08 95       	ret

00001caa <uart_init>:
    1caa:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
    1cae:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    1cb2:	88 e1       	ldi	r24, 0x18	; 24
    1cb4:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1cb8:	ed e9       	ldi	r30, 0x9D	; 157
    1cba:	f0 e0       	ldi	r31, 0x00	; 0
    1cbc:	80 81       	ld	r24, Z
    1cbe:	8e 60       	ori	r24, 0x0E	; 14
    1cc0:	80 83       	st	Z, r24
    1cc2:	08 95       	ret

00001cc4 <__vector_14>:
}//program_init

/************************************************************************************************
 * Name: ISR for 16-bit timer
 ************************************************************************************************/
ISR(TIMER1_OVF_vect){
    1cc4:	1f 92       	push	r1
    1cc6:	0f 92       	push	r0
    1cc8:	0f b6       	in	r0, 0x3f	; 63
    1cca:	0f 92       	push	r0
    1ccc:	11 24       	eor	r1, r1
    1cce:	0b b6       	in	r0, 0x3b	; 59
    1cd0:	0f 92       	push	r0
    1cd2:	2f 93       	push	r18
    1cd4:	3f 93       	push	r19
    1cd6:	4f 93       	push	r20
    1cd8:	5f 93       	push	r21
    1cda:	6f 93       	push	r22
    1cdc:	7f 93       	push	r23
    1cde:	8f 93       	push	r24
    1ce0:	9f 93       	push	r25
    1ce2:	af 93       	push	r26
    1ce4:	bf 93       	push	r27
    1ce6:	cf 93       	push	r28
    1ce8:	df 93       	push	r29
    1cea:	ef 93       	push	r30
    1cec:	ff 93       	push	r31
	
	bldc_interface_uart_init(send_packet);
    1cee:	81 ea       	ldi	r24, 0xA1	; 161
    1cf0:	9d e0       	ldi	r25, 0x0D	; 13
    1cf2:	50 dd       	rcall	.-1376   	; 0x1794 <bldc_interface_uart_init>
		
	//ISR for the 16 bit timer
    PORTB ^= (1<<PB7);
    1cf4:	88 b3       	in	r24, 0x18	; 24
    1cf6:	80 58       	subi	r24, 0x80	; 128
    1cf8:	88 bb       	out	0x18, r24	; 24
    PORTF |= (1<<PF0);
    1cfa:	c2 e6       	ldi	r28, 0x62	; 98
    1cfc:	d0 e0       	ldi	r29, 0x00	; 0
    1cfe:	88 81       	ld	r24, Y
    1d00:	81 60       	ori	r24, 0x01	; 1
    1d02:	88 83       	st	Y, r24
    motor_torque(&torque_right, &torque_left, &steering_angle);	//Update motor torques
    1d04:	41 e5       	ldi	r20, 0x51	; 81
    1d06:	5b e0       	ldi	r21, 0x0B	; 11
    1d08:	63 e5       	ldi	r22, 0x53	; 83
    1d0a:	7b e0       	ldi	r23, 0x0B	; 11
    1d0c:	87 e5       	ldi	r24, 0x57	; 87
    1d0e:	9b e0       	ldi	r25, 0x0B	; 11
    1d10:	4a df       	rcall	.-364    	; 0x1ba6 <motor_torque>
    steering_angle_float = (float)steering_angle;
    1d12:	60 91 51 0b 	lds	r22, 0x0B51	; 0x800b51 <steering_angle>
    1d16:	70 91 52 0b 	lds	r23, 0x0B52	; 0x800b52 <steering_angle+0x1>
    1d1a:	80 e0       	ldi	r24, 0x00	; 0
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	40 d1       	rcall	.+640    	; 0x1fa0 <__floatunsisf>
    1d20:	60 93 4d 0b 	sts	0x0B4D, r22	; 0x800b4d <steering_angle_float>
    1d24:	70 93 4e 0b 	sts	0x0B4E, r23	; 0x800b4e <steering_angle_float+0x1>
    1d28:	80 93 4f 0b 	sts	0x0B4F, r24	; 0x800b4f <steering_angle_float+0x2>
    1d2c:	90 93 50 0b 	sts	0x0B50, r25	; 0x800b50 <steering_angle_float+0x3>

    //float_to_bytes(&torque_right, torque_r_bytes);
    //float_to_bytes(&torque_left, torque_l_bytes);
    //float_to_bytes(&steering_angle_float, steering_angle_bytes);

	setcurrent = torque_right;
    1d30:	60 91 57 0b 	lds	r22, 0x0B57	; 0x800b57 <torque_right>
    1d34:	70 91 58 0b 	lds	r23, 0x0B58	; 0x800b58 <torque_right+0x1>
    1d38:	80 91 59 0b 	lds	r24, 0x0B59	; 0x800b59 <torque_right+0x2>
    1d3c:	90 91 5a 0b 	lds	r25, 0x0B5A	; 0x800b5a <torque_right+0x3>
    1d40:	60 93 5b 0b 	sts	0x0B5B, r22	; 0x800b5b <setcurrent>
    1d44:	70 93 5c 0b 	sts	0x0B5C, r23	; 0x800b5c <setcurrent+0x1>
    1d48:	80 93 5d 0b 	sts	0x0B5D, r24	; 0x800b5d <setcurrent+0x2>
    1d4c:	90 93 5e 0b 	sts	0x0B5E, r25	; 0x800b5e <setcurrent+0x3>
    bldc_interface_set_current(setcurrent);
    1d50:	ee dc       	rcall	.-1572   	; 0x172e <bldc_interface_set_current>
    //uart_transmit(torque_r_bytes,4);		//transmit right torque value - float, 4 bytes
    //uart_transmit(torque_l_bytes,4);    		//transmit left torque value - float, 4 bytes
    //uart_transmit(steering_angle_bytes,4);		//transmit steering encoder value - uint16, 2 bytes

//    spi_init();					//Used to initalize SPI for LCD screen if being used
    PORTF &= ~(1<<PF0);
    1d52:	88 81       	ld	r24, Y
    1d54:	8e 7f       	andi	r24, 0xFE	; 254
    1d56:	88 83       	st	Y, r24
}//timer1_isr
    1d58:	ff 91       	pop	r31
    1d5a:	ef 91       	pop	r30
    1d5c:	df 91       	pop	r29
    1d5e:	cf 91       	pop	r28
    1d60:	bf 91       	pop	r27
    1d62:	af 91       	pop	r26
    1d64:	9f 91       	pop	r25
    1d66:	8f 91       	pop	r24
    1d68:	7f 91       	pop	r23
    1d6a:	6f 91       	pop	r22
    1d6c:	5f 91       	pop	r21
    1d6e:	4f 91       	pop	r20
    1d70:	3f 91       	pop	r19
    1d72:	2f 91       	pop	r18
    1d74:	0f 90       	pop	r0
    1d76:	0b be       	out	0x3b, r0	; 59
    1d78:	0f 90       	pop	r0
    1d7a:	0f be       	out	0x3f, r0	; 63
    1d7c:	0f 90       	pop	r0
    1d7e:	1f 90       	pop	r1
    1d80:	18 95       	reti

00001d82 <main>:
/************************************************************************************************
 * Name: Main program, initialize all required ports, timers and UART. Loop infinitely.
 ************************************************************************************************/
int main(){
	
    DDRB |= (1<<PB7)|(1<<PB6)|(1<<PB5)|(1<<PB4);
    1d82:	87 b3       	in	r24, 0x17	; 23
    1d84:	80 6f       	ori	r24, 0xF0	; 240
    1d86:	87 bb       	out	0x17, r24	; 23
    DDRF = 0xFF;
    1d88:	8f ef       	ldi	r24, 0xFF	; 255
    1d8a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    //DDRD |= (1<<PD0);   //SPI SS pin
    DDRD &= ~(1<<PD7)|(1<<PD6);  //Configure Port D Pin 7, 6 for input
    1d8e:	8f 98       	cbi	0x11, 7	; 17
    PORTD |= (1<<PD7);  //enable pull up
    1d90:	97 9a       	sbi	0x12, 7	; 18
    timer1_init();      //initialize 16 bit timer
    1d92:	f8 de       	rcall	.-528    	; 0x1b84 <timer1_init>
    uart_init(MYUBBR);	//initialize uart
    1d94:	8c e0       	ldi	r24, 0x0C	; 12
    1d96:	89 df       	rcall	.-238    	; 0x1caa <uart_init>
    sei();
    1d98:	78 94       	sei

    while(1){
    }//while
    1d9a:	ff cf       	rjmp	.-2      	; 0x1d9a <main+0x18>

00001d9c <__subsf3>:
    1d9c:	50 58       	subi	r21, 0x80	; 128

00001d9e <__addsf3>:
    1d9e:	bb 27       	eor	r27, r27
    1da0:	aa 27       	eor	r26, r26
    1da2:	0e d0       	rcall	.+28     	; 0x1dc0 <__addsf3x>
    1da4:	75 c1       	rjmp	.+746    	; 0x2090 <__fp_round>
    1da6:	66 d1       	rcall	.+716    	; 0x2074 <__fp_pscA>
    1da8:	30 f0       	brcs	.+12     	; 0x1db6 <__addsf3+0x18>
    1daa:	6b d1       	rcall	.+726    	; 0x2082 <__fp_pscB>
    1dac:	20 f0       	brcs	.+8      	; 0x1db6 <__addsf3+0x18>
    1dae:	31 f4       	brne	.+12     	; 0x1dbc <__addsf3+0x1e>
    1db0:	9f 3f       	cpi	r25, 0xFF	; 255
    1db2:	11 f4       	brne	.+4      	; 0x1db8 <__addsf3+0x1a>
    1db4:	1e f4       	brtc	.+6      	; 0x1dbc <__addsf3+0x1e>
    1db6:	5b c1       	rjmp	.+694    	; 0x206e <__fp_nan>
    1db8:	0e f4       	brtc	.+2      	; 0x1dbc <__addsf3+0x1e>
    1dba:	e0 95       	com	r30
    1dbc:	e7 fb       	bst	r30, 7
    1dbe:	51 c1       	rjmp	.+674    	; 0x2062 <__fp_inf>

00001dc0 <__addsf3x>:
    1dc0:	e9 2f       	mov	r30, r25
    1dc2:	77 d1       	rcall	.+750    	; 0x20b2 <__fp_split3>
    1dc4:	80 f3       	brcs	.-32     	; 0x1da6 <__addsf3+0x8>
    1dc6:	ba 17       	cp	r27, r26
    1dc8:	62 07       	cpc	r22, r18
    1dca:	73 07       	cpc	r23, r19
    1dcc:	84 07       	cpc	r24, r20
    1dce:	95 07       	cpc	r25, r21
    1dd0:	18 f0       	brcs	.+6      	; 0x1dd8 <__addsf3x+0x18>
    1dd2:	71 f4       	brne	.+28     	; 0x1df0 <__addsf3x+0x30>
    1dd4:	9e f5       	brtc	.+102    	; 0x1e3c <__addsf3x+0x7c>
    1dd6:	8f c1       	rjmp	.+798    	; 0x20f6 <__fp_zero>
    1dd8:	0e f4       	brtc	.+2      	; 0x1ddc <__addsf3x+0x1c>
    1dda:	e0 95       	com	r30
    1ddc:	0b 2e       	mov	r0, r27
    1dde:	ba 2f       	mov	r27, r26
    1de0:	a0 2d       	mov	r26, r0
    1de2:	0b 01       	movw	r0, r22
    1de4:	b9 01       	movw	r22, r18
    1de6:	90 01       	movw	r18, r0
    1de8:	0c 01       	movw	r0, r24
    1dea:	ca 01       	movw	r24, r20
    1dec:	a0 01       	movw	r20, r0
    1dee:	11 24       	eor	r1, r1
    1df0:	ff 27       	eor	r31, r31
    1df2:	59 1b       	sub	r21, r25
    1df4:	99 f0       	breq	.+38     	; 0x1e1c <__addsf3x+0x5c>
    1df6:	59 3f       	cpi	r21, 0xF9	; 249
    1df8:	50 f4       	brcc	.+20     	; 0x1e0e <__addsf3x+0x4e>
    1dfa:	50 3e       	cpi	r21, 0xE0	; 224
    1dfc:	68 f1       	brcs	.+90     	; 0x1e58 <__addsf3x+0x98>
    1dfe:	1a 16       	cp	r1, r26
    1e00:	f0 40       	sbci	r31, 0x00	; 0
    1e02:	a2 2f       	mov	r26, r18
    1e04:	23 2f       	mov	r18, r19
    1e06:	34 2f       	mov	r19, r20
    1e08:	44 27       	eor	r20, r20
    1e0a:	58 5f       	subi	r21, 0xF8	; 248
    1e0c:	f3 cf       	rjmp	.-26     	; 0x1df4 <__addsf3x+0x34>
    1e0e:	46 95       	lsr	r20
    1e10:	37 95       	ror	r19
    1e12:	27 95       	ror	r18
    1e14:	a7 95       	ror	r26
    1e16:	f0 40       	sbci	r31, 0x00	; 0
    1e18:	53 95       	inc	r21
    1e1a:	c9 f7       	brne	.-14     	; 0x1e0e <__addsf3x+0x4e>
    1e1c:	7e f4       	brtc	.+30     	; 0x1e3c <__addsf3x+0x7c>
    1e1e:	1f 16       	cp	r1, r31
    1e20:	ba 0b       	sbc	r27, r26
    1e22:	62 0b       	sbc	r22, r18
    1e24:	73 0b       	sbc	r23, r19
    1e26:	84 0b       	sbc	r24, r20
    1e28:	ba f0       	brmi	.+46     	; 0x1e58 <__addsf3x+0x98>
    1e2a:	91 50       	subi	r25, 0x01	; 1
    1e2c:	a1 f0       	breq	.+40     	; 0x1e56 <__addsf3x+0x96>
    1e2e:	ff 0f       	add	r31, r31
    1e30:	bb 1f       	adc	r27, r27
    1e32:	66 1f       	adc	r22, r22
    1e34:	77 1f       	adc	r23, r23
    1e36:	88 1f       	adc	r24, r24
    1e38:	c2 f7       	brpl	.-16     	; 0x1e2a <__addsf3x+0x6a>
    1e3a:	0e c0       	rjmp	.+28     	; 0x1e58 <__addsf3x+0x98>
    1e3c:	ba 0f       	add	r27, r26
    1e3e:	62 1f       	adc	r22, r18
    1e40:	73 1f       	adc	r23, r19
    1e42:	84 1f       	adc	r24, r20
    1e44:	48 f4       	brcc	.+18     	; 0x1e58 <__addsf3x+0x98>
    1e46:	87 95       	ror	r24
    1e48:	77 95       	ror	r23
    1e4a:	67 95       	ror	r22
    1e4c:	b7 95       	ror	r27
    1e4e:	f7 95       	ror	r31
    1e50:	9e 3f       	cpi	r25, 0xFE	; 254
    1e52:	08 f0       	brcs	.+2      	; 0x1e56 <__addsf3x+0x96>
    1e54:	b3 cf       	rjmp	.-154    	; 0x1dbc <__addsf3+0x1e>
    1e56:	93 95       	inc	r25
    1e58:	88 0f       	add	r24, r24
    1e5a:	08 f0       	brcs	.+2      	; 0x1e5e <__addsf3x+0x9e>
    1e5c:	99 27       	eor	r25, r25
    1e5e:	ee 0f       	add	r30, r30
    1e60:	97 95       	ror	r25
    1e62:	87 95       	ror	r24
    1e64:	08 95       	ret

00001e66 <__cmpsf2>:
    1e66:	d9 d0       	rcall	.+434    	; 0x201a <__fp_cmp>
    1e68:	08 f4       	brcc	.+2      	; 0x1e6c <__cmpsf2+0x6>
    1e6a:	81 e0       	ldi	r24, 0x01	; 1
    1e6c:	08 95       	ret

00001e6e <__divsf3>:
    1e6e:	0c d0       	rcall	.+24     	; 0x1e88 <__divsf3x>
    1e70:	0f c1       	rjmp	.+542    	; 0x2090 <__fp_round>
    1e72:	07 d1       	rcall	.+526    	; 0x2082 <__fp_pscB>
    1e74:	40 f0       	brcs	.+16     	; 0x1e86 <__divsf3+0x18>
    1e76:	fe d0       	rcall	.+508    	; 0x2074 <__fp_pscA>
    1e78:	30 f0       	brcs	.+12     	; 0x1e86 <__divsf3+0x18>
    1e7a:	21 f4       	brne	.+8      	; 0x1e84 <__divsf3+0x16>
    1e7c:	5f 3f       	cpi	r21, 0xFF	; 255
    1e7e:	19 f0       	breq	.+6      	; 0x1e86 <__divsf3+0x18>
    1e80:	f0 c0       	rjmp	.+480    	; 0x2062 <__fp_inf>
    1e82:	51 11       	cpse	r21, r1
    1e84:	39 c1       	rjmp	.+626    	; 0x20f8 <__fp_szero>
    1e86:	f3 c0       	rjmp	.+486    	; 0x206e <__fp_nan>

00001e88 <__divsf3x>:
    1e88:	14 d1       	rcall	.+552    	; 0x20b2 <__fp_split3>
    1e8a:	98 f3       	brcs	.-26     	; 0x1e72 <__divsf3+0x4>

00001e8c <__divsf3_pse>:
    1e8c:	99 23       	and	r25, r25
    1e8e:	c9 f3       	breq	.-14     	; 0x1e82 <__divsf3+0x14>
    1e90:	55 23       	and	r21, r21
    1e92:	b1 f3       	breq	.-20     	; 0x1e80 <__divsf3+0x12>
    1e94:	95 1b       	sub	r25, r21
    1e96:	55 0b       	sbc	r21, r21
    1e98:	bb 27       	eor	r27, r27
    1e9a:	aa 27       	eor	r26, r26
    1e9c:	62 17       	cp	r22, r18
    1e9e:	73 07       	cpc	r23, r19
    1ea0:	84 07       	cpc	r24, r20
    1ea2:	38 f0       	brcs	.+14     	; 0x1eb2 <__divsf3_pse+0x26>
    1ea4:	9f 5f       	subi	r25, 0xFF	; 255
    1ea6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ea8:	22 0f       	add	r18, r18
    1eaa:	33 1f       	adc	r19, r19
    1eac:	44 1f       	adc	r20, r20
    1eae:	aa 1f       	adc	r26, r26
    1eb0:	a9 f3       	breq	.-22     	; 0x1e9c <__divsf3_pse+0x10>
    1eb2:	33 d0       	rcall	.+102    	; 0x1f1a <__divsf3_pse+0x8e>
    1eb4:	0e 2e       	mov	r0, r30
    1eb6:	3a f0       	brmi	.+14     	; 0x1ec6 <__divsf3_pse+0x3a>
    1eb8:	e0 e8       	ldi	r30, 0x80	; 128
    1eba:	30 d0       	rcall	.+96     	; 0x1f1c <__divsf3_pse+0x90>
    1ebc:	91 50       	subi	r25, 0x01	; 1
    1ebe:	50 40       	sbci	r21, 0x00	; 0
    1ec0:	e6 95       	lsr	r30
    1ec2:	00 1c       	adc	r0, r0
    1ec4:	ca f7       	brpl	.-14     	; 0x1eb8 <__divsf3_pse+0x2c>
    1ec6:	29 d0       	rcall	.+82     	; 0x1f1a <__divsf3_pse+0x8e>
    1ec8:	fe 2f       	mov	r31, r30
    1eca:	27 d0       	rcall	.+78     	; 0x1f1a <__divsf3_pse+0x8e>
    1ecc:	66 0f       	add	r22, r22
    1ece:	77 1f       	adc	r23, r23
    1ed0:	88 1f       	adc	r24, r24
    1ed2:	bb 1f       	adc	r27, r27
    1ed4:	26 17       	cp	r18, r22
    1ed6:	37 07       	cpc	r19, r23
    1ed8:	48 07       	cpc	r20, r24
    1eda:	ab 07       	cpc	r26, r27
    1edc:	b0 e8       	ldi	r27, 0x80	; 128
    1ede:	09 f0       	breq	.+2      	; 0x1ee2 <__divsf3_pse+0x56>
    1ee0:	bb 0b       	sbc	r27, r27
    1ee2:	80 2d       	mov	r24, r0
    1ee4:	bf 01       	movw	r22, r30
    1ee6:	ff 27       	eor	r31, r31
    1ee8:	93 58       	subi	r25, 0x83	; 131
    1eea:	5f 4f       	sbci	r21, 0xFF	; 255
    1eec:	2a f0       	brmi	.+10     	; 0x1ef8 <__divsf3_pse+0x6c>
    1eee:	9e 3f       	cpi	r25, 0xFE	; 254
    1ef0:	51 05       	cpc	r21, r1
    1ef2:	68 f0       	brcs	.+26     	; 0x1f0e <__divsf3_pse+0x82>
    1ef4:	b6 c0       	rjmp	.+364    	; 0x2062 <__fp_inf>
    1ef6:	00 c1       	rjmp	.+512    	; 0x20f8 <__fp_szero>
    1ef8:	5f 3f       	cpi	r21, 0xFF	; 255
    1efa:	ec f3       	brlt	.-6      	; 0x1ef6 <__divsf3_pse+0x6a>
    1efc:	98 3e       	cpi	r25, 0xE8	; 232
    1efe:	dc f3       	brlt	.-10     	; 0x1ef6 <__divsf3_pse+0x6a>
    1f00:	86 95       	lsr	r24
    1f02:	77 95       	ror	r23
    1f04:	67 95       	ror	r22
    1f06:	b7 95       	ror	r27
    1f08:	f7 95       	ror	r31
    1f0a:	9f 5f       	subi	r25, 0xFF	; 255
    1f0c:	c9 f7       	brne	.-14     	; 0x1f00 <__divsf3_pse+0x74>
    1f0e:	88 0f       	add	r24, r24
    1f10:	91 1d       	adc	r25, r1
    1f12:	96 95       	lsr	r25
    1f14:	87 95       	ror	r24
    1f16:	97 f9       	bld	r25, 7
    1f18:	08 95       	ret
    1f1a:	e1 e0       	ldi	r30, 0x01	; 1
    1f1c:	66 0f       	add	r22, r22
    1f1e:	77 1f       	adc	r23, r23
    1f20:	88 1f       	adc	r24, r24
    1f22:	bb 1f       	adc	r27, r27
    1f24:	62 17       	cp	r22, r18
    1f26:	73 07       	cpc	r23, r19
    1f28:	84 07       	cpc	r24, r20
    1f2a:	ba 07       	cpc	r27, r26
    1f2c:	20 f0       	brcs	.+8      	; 0x1f36 <__divsf3_pse+0xaa>
    1f2e:	62 1b       	sub	r22, r18
    1f30:	73 0b       	sbc	r23, r19
    1f32:	84 0b       	sbc	r24, r20
    1f34:	ba 0b       	sbc	r27, r26
    1f36:	ee 1f       	adc	r30, r30
    1f38:	88 f7       	brcc	.-30     	; 0x1f1c <__divsf3_pse+0x90>
    1f3a:	e0 95       	com	r30
    1f3c:	08 95       	ret

00001f3e <__fixsfsi>:
    1f3e:	04 d0       	rcall	.+8      	; 0x1f48 <__fixunssfsi>
    1f40:	68 94       	set
    1f42:	b1 11       	cpse	r27, r1
    1f44:	d9 c0       	rjmp	.+434    	; 0x20f8 <__fp_szero>
    1f46:	08 95       	ret

00001f48 <__fixunssfsi>:
    1f48:	bc d0       	rcall	.+376    	; 0x20c2 <__fp_splitA>
    1f4a:	88 f0       	brcs	.+34     	; 0x1f6e <__fixunssfsi+0x26>
    1f4c:	9f 57       	subi	r25, 0x7F	; 127
    1f4e:	90 f0       	brcs	.+36     	; 0x1f74 <__fixunssfsi+0x2c>
    1f50:	b9 2f       	mov	r27, r25
    1f52:	99 27       	eor	r25, r25
    1f54:	b7 51       	subi	r27, 0x17	; 23
    1f56:	a0 f0       	brcs	.+40     	; 0x1f80 <__fixunssfsi+0x38>
    1f58:	d1 f0       	breq	.+52     	; 0x1f8e <__fixunssfsi+0x46>
    1f5a:	66 0f       	add	r22, r22
    1f5c:	77 1f       	adc	r23, r23
    1f5e:	88 1f       	adc	r24, r24
    1f60:	99 1f       	adc	r25, r25
    1f62:	1a f0       	brmi	.+6      	; 0x1f6a <__fixunssfsi+0x22>
    1f64:	ba 95       	dec	r27
    1f66:	c9 f7       	brne	.-14     	; 0x1f5a <__fixunssfsi+0x12>
    1f68:	12 c0       	rjmp	.+36     	; 0x1f8e <__fixunssfsi+0x46>
    1f6a:	b1 30       	cpi	r27, 0x01	; 1
    1f6c:	81 f0       	breq	.+32     	; 0x1f8e <__fixunssfsi+0x46>
    1f6e:	c3 d0       	rcall	.+390    	; 0x20f6 <__fp_zero>
    1f70:	b1 e0       	ldi	r27, 0x01	; 1
    1f72:	08 95       	ret
    1f74:	c0 c0       	rjmp	.+384    	; 0x20f6 <__fp_zero>
    1f76:	67 2f       	mov	r22, r23
    1f78:	78 2f       	mov	r23, r24
    1f7a:	88 27       	eor	r24, r24
    1f7c:	b8 5f       	subi	r27, 0xF8	; 248
    1f7e:	39 f0       	breq	.+14     	; 0x1f8e <__fixunssfsi+0x46>
    1f80:	b9 3f       	cpi	r27, 0xF9	; 249
    1f82:	cc f3       	brlt	.-14     	; 0x1f76 <__fixunssfsi+0x2e>
    1f84:	86 95       	lsr	r24
    1f86:	77 95       	ror	r23
    1f88:	67 95       	ror	r22
    1f8a:	b3 95       	inc	r27
    1f8c:	d9 f7       	brne	.-10     	; 0x1f84 <__fixunssfsi+0x3c>
    1f8e:	3e f4       	brtc	.+14     	; 0x1f9e <__fixunssfsi+0x56>
    1f90:	90 95       	com	r25
    1f92:	80 95       	com	r24
    1f94:	70 95       	com	r23
    1f96:	61 95       	neg	r22
    1f98:	7f 4f       	sbci	r23, 0xFF	; 255
    1f9a:	8f 4f       	sbci	r24, 0xFF	; 255
    1f9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1f9e:	08 95       	ret

00001fa0 <__floatunsisf>:
    1fa0:	e8 94       	clt
    1fa2:	09 c0       	rjmp	.+18     	; 0x1fb6 <__floatsisf+0x12>

00001fa4 <__floatsisf>:
    1fa4:	97 fb       	bst	r25, 7
    1fa6:	3e f4       	brtc	.+14     	; 0x1fb6 <__floatsisf+0x12>
    1fa8:	90 95       	com	r25
    1faa:	80 95       	com	r24
    1fac:	70 95       	com	r23
    1fae:	61 95       	neg	r22
    1fb0:	7f 4f       	sbci	r23, 0xFF	; 255
    1fb2:	8f 4f       	sbci	r24, 0xFF	; 255
    1fb4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb6:	99 23       	and	r25, r25
    1fb8:	a9 f0       	breq	.+42     	; 0x1fe4 <__floatsisf+0x40>
    1fba:	f9 2f       	mov	r31, r25
    1fbc:	96 e9       	ldi	r25, 0x96	; 150
    1fbe:	bb 27       	eor	r27, r27
    1fc0:	93 95       	inc	r25
    1fc2:	f6 95       	lsr	r31
    1fc4:	87 95       	ror	r24
    1fc6:	77 95       	ror	r23
    1fc8:	67 95       	ror	r22
    1fca:	b7 95       	ror	r27
    1fcc:	f1 11       	cpse	r31, r1
    1fce:	f8 cf       	rjmp	.-16     	; 0x1fc0 <__floatsisf+0x1c>
    1fd0:	fa f4       	brpl	.+62     	; 0x2010 <__floatsisf+0x6c>
    1fd2:	bb 0f       	add	r27, r27
    1fd4:	11 f4       	brne	.+4      	; 0x1fda <__floatsisf+0x36>
    1fd6:	60 ff       	sbrs	r22, 0
    1fd8:	1b c0       	rjmp	.+54     	; 0x2010 <__floatsisf+0x6c>
    1fda:	6f 5f       	subi	r22, 0xFF	; 255
    1fdc:	7f 4f       	sbci	r23, 0xFF	; 255
    1fde:	8f 4f       	sbci	r24, 0xFF	; 255
    1fe0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe2:	16 c0       	rjmp	.+44     	; 0x2010 <__floatsisf+0x6c>
    1fe4:	88 23       	and	r24, r24
    1fe6:	11 f0       	breq	.+4      	; 0x1fec <__floatsisf+0x48>
    1fe8:	96 e9       	ldi	r25, 0x96	; 150
    1fea:	11 c0       	rjmp	.+34     	; 0x200e <__floatsisf+0x6a>
    1fec:	77 23       	and	r23, r23
    1fee:	21 f0       	breq	.+8      	; 0x1ff8 <__floatsisf+0x54>
    1ff0:	9e e8       	ldi	r25, 0x8E	; 142
    1ff2:	87 2f       	mov	r24, r23
    1ff4:	76 2f       	mov	r23, r22
    1ff6:	05 c0       	rjmp	.+10     	; 0x2002 <__floatsisf+0x5e>
    1ff8:	66 23       	and	r22, r22
    1ffa:	71 f0       	breq	.+28     	; 0x2018 <__floatsisf+0x74>
    1ffc:	96 e8       	ldi	r25, 0x86	; 134
    1ffe:	86 2f       	mov	r24, r22
    2000:	70 e0       	ldi	r23, 0x00	; 0
    2002:	60 e0       	ldi	r22, 0x00	; 0
    2004:	2a f0       	brmi	.+10     	; 0x2010 <__floatsisf+0x6c>
    2006:	9a 95       	dec	r25
    2008:	66 0f       	add	r22, r22
    200a:	77 1f       	adc	r23, r23
    200c:	88 1f       	adc	r24, r24
    200e:	da f7       	brpl	.-10     	; 0x2006 <__floatsisf+0x62>
    2010:	88 0f       	add	r24, r24
    2012:	96 95       	lsr	r25
    2014:	87 95       	ror	r24
    2016:	97 f9       	bld	r25, 7
    2018:	08 95       	ret

0000201a <__fp_cmp>:
    201a:	99 0f       	add	r25, r25
    201c:	00 08       	sbc	r0, r0
    201e:	55 0f       	add	r21, r21
    2020:	aa 0b       	sbc	r26, r26
    2022:	e0 e8       	ldi	r30, 0x80	; 128
    2024:	fe ef       	ldi	r31, 0xFE	; 254
    2026:	16 16       	cp	r1, r22
    2028:	17 06       	cpc	r1, r23
    202a:	e8 07       	cpc	r30, r24
    202c:	f9 07       	cpc	r31, r25
    202e:	c0 f0       	brcs	.+48     	; 0x2060 <__fp_cmp+0x46>
    2030:	12 16       	cp	r1, r18
    2032:	13 06       	cpc	r1, r19
    2034:	e4 07       	cpc	r30, r20
    2036:	f5 07       	cpc	r31, r21
    2038:	98 f0       	brcs	.+38     	; 0x2060 <__fp_cmp+0x46>
    203a:	62 1b       	sub	r22, r18
    203c:	73 0b       	sbc	r23, r19
    203e:	84 0b       	sbc	r24, r20
    2040:	95 0b       	sbc	r25, r21
    2042:	39 f4       	brne	.+14     	; 0x2052 <__fp_cmp+0x38>
    2044:	0a 26       	eor	r0, r26
    2046:	61 f0       	breq	.+24     	; 0x2060 <__fp_cmp+0x46>
    2048:	23 2b       	or	r18, r19
    204a:	24 2b       	or	r18, r20
    204c:	25 2b       	or	r18, r21
    204e:	21 f4       	brne	.+8      	; 0x2058 <__fp_cmp+0x3e>
    2050:	08 95       	ret
    2052:	0a 26       	eor	r0, r26
    2054:	09 f4       	brne	.+2      	; 0x2058 <__fp_cmp+0x3e>
    2056:	a1 40       	sbci	r26, 0x01	; 1
    2058:	a6 95       	lsr	r26
    205a:	8f ef       	ldi	r24, 0xFF	; 255
    205c:	81 1d       	adc	r24, r1
    205e:	81 1d       	adc	r24, r1
    2060:	08 95       	ret

00002062 <__fp_inf>:
    2062:	97 f9       	bld	r25, 7
    2064:	9f 67       	ori	r25, 0x7F	; 127
    2066:	80 e8       	ldi	r24, 0x80	; 128
    2068:	70 e0       	ldi	r23, 0x00	; 0
    206a:	60 e0       	ldi	r22, 0x00	; 0
    206c:	08 95       	ret

0000206e <__fp_nan>:
    206e:	9f ef       	ldi	r25, 0xFF	; 255
    2070:	80 ec       	ldi	r24, 0xC0	; 192
    2072:	08 95       	ret

00002074 <__fp_pscA>:
    2074:	00 24       	eor	r0, r0
    2076:	0a 94       	dec	r0
    2078:	16 16       	cp	r1, r22
    207a:	17 06       	cpc	r1, r23
    207c:	18 06       	cpc	r1, r24
    207e:	09 06       	cpc	r0, r25
    2080:	08 95       	ret

00002082 <__fp_pscB>:
    2082:	00 24       	eor	r0, r0
    2084:	0a 94       	dec	r0
    2086:	12 16       	cp	r1, r18
    2088:	13 06       	cpc	r1, r19
    208a:	14 06       	cpc	r1, r20
    208c:	05 06       	cpc	r0, r21
    208e:	08 95       	ret

00002090 <__fp_round>:
    2090:	09 2e       	mov	r0, r25
    2092:	03 94       	inc	r0
    2094:	00 0c       	add	r0, r0
    2096:	11 f4       	brne	.+4      	; 0x209c <__fp_round+0xc>
    2098:	88 23       	and	r24, r24
    209a:	52 f0       	brmi	.+20     	; 0x20b0 <__fp_round+0x20>
    209c:	bb 0f       	add	r27, r27
    209e:	40 f4       	brcc	.+16     	; 0x20b0 <__fp_round+0x20>
    20a0:	bf 2b       	or	r27, r31
    20a2:	11 f4       	brne	.+4      	; 0x20a8 <__fp_round+0x18>
    20a4:	60 ff       	sbrs	r22, 0
    20a6:	04 c0       	rjmp	.+8      	; 0x20b0 <__fp_round+0x20>
    20a8:	6f 5f       	subi	r22, 0xFF	; 255
    20aa:	7f 4f       	sbci	r23, 0xFF	; 255
    20ac:	8f 4f       	sbci	r24, 0xFF	; 255
    20ae:	9f 4f       	sbci	r25, 0xFF	; 255
    20b0:	08 95       	ret

000020b2 <__fp_split3>:
    20b2:	57 fd       	sbrc	r21, 7
    20b4:	90 58       	subi	r25, 0x80	; 128
    20b6:	44 0f       	add	r20, r20
    20b8:	55 1f       	adc	r21, r21
    20ba:	59 f0       	breq	.+22     	; 0x20d2 <__fp_splitA+0x10>
    20bc:	5f 3f       	cpi	r21, 0xFF	; 255
    20be:	71 f0       	breq	.+28     	; 0x20dc <__fp_splitA+0x1a>
    20c0:	47 95       	ror	r20

000020c2 <__fp_splitA>:
    20c2:	88 0f       	add	r24, r24
    20c4:	97 fb       	bst	r25, 7
    20c6:	99 1f       	adc	r25, r25
    20c8:	61 f0       	breq	.+24     	; 0x20e2 <__fp_splitA+0x20>
    20ca:	9f 3f       	cpi	r25, 0xFF	; 255
    20cc:	79 f0       	breq	.+30     	; 0x20ec <__fp_splitA+0x2a>
    20ce:	87 95       	ror	r24
    20d0:	08 95       	ret
    20d2:	12 16       	cp	r1, r18
    20d4:	13 06       	cpc	r1, r19
    20d6:	14 06       	cpc	r1, r20
    20d8:	55 1f       	adc	r21, r21
    20da:	f2 cf       	rjmp	.-28     	; 0x20c0 <__fp_split3+0xe>
    20dc:	46 95       	lsr	r20
    20de:	f1 df       	rcall	.-30     	; 0x20c2 <__fp_splitA>
    20e0:	08 c0       	rjmp	.+16     	; 0x20f2 <__fp_splitA+0x30>
    20e2:	16 16       	cp	r1, r22
    20e4:	17 06       	cpc	r1, r23
    20e6:	18 06       	cpc	r1, r24
    20e8:	99 1f       	adc	r25, r25
    20ea:	f1 cf       	rjmp	.-30     	; 0x20ce <__fp_splitA+0xc>
    20ec:	86 95       	lsr	r24
    20ee:	71 05       	cpc	r23, r1
    20f0:	61 05       	cpc	r22, r1
    20f2:	08 94       	sec
    20f4:	08 95       	ret

000020f6 <__fp_zero>:
    20f6:	e8 94       	clt

000020f8 <__fp_szero>:
    20f8:	bb 27       	eor	r27, r27
    20fa:	66 27       	eor	r22, r22
    20fc:	77 27       	eor	r23, r23
    20fe:	cb 01       	movw	r24, r22
    2100:	97 f9       	bld	r25, 7
    2102:	08 95       	ret

00002104 <__gesf2>:
    2104:	8a df       	rcall	.-236    	; 0x201a <__fp_cmp>
    2106:	08 f4       	brcc	.+2      	; 0x210a <__gesf2+0x6>
    2108:	8f ef       	ldi	r24, 0xFF	; 255
    210a:	08 95       	ret

0000210c <__mulsf3>:
    210c:	0b d0       	rcall	.+22     	; 0x2124 <__mulsf3x>
    210e:	c0 cf       	rjmp	.-128    	; 0x2090 <__fp_round>
    2110:	b1 df       	rcall	.-158    	; 0x2074 <__fp_pscA>
    2112:	28 f0       	brcs	.+10     	; 0x211e <__mulsf3+0x12>
    2114:	b6 df       	rcall	.-148    	; 0x2082 <__fp_pscB>
    2116:	18 f0       	brcs	.+6      	; 0x211e <__mulsf3+0x12>
    2118:	95 23       	and	r25, r21
    211a:	09 f0       	breq	.+2      	; 0x211e <__mulsf3+0x12>
    211c:	a2 cf       	rjmp	.-188    	; 0x2062 <__fp_inf>
    211e:	a7 cf       	rjmp	.-178    	; 0x206e <__fp_nan>
    2120:	11 24       	eor	r1, r1
    2122:	ea cf       	rjmp	.-44     	; 0x20f8 <__fp_szero>

00002124 <__mulsf3x>:
    2124:	c6 df       	rcall	.-116    	; 0x20b2 <__fp_split3>
    2126:	a0 f3       	brcs	.-24     	; 0x2110 <__mulsf3+0x4>

00002128 <__mulsf3_pse>:
    2128:	95 9f       	mul	r25, r21
    212a:	d1 f3       	breq	.-12     	; 0x2120 <__mulsf3+0x14>
    212c:	95 0f       	add	r25, r21
    212e:	50 e0       	ldi	r21, 0x00	; 0
    2130:	55 1f       	adc	r21, r21
    2132:	62 9f       	mul	r22, r18
    2134:	f0 01       	movw	r30, r0
    2136:	72 9f       	mul	r23, r18
    2138:	bb 27       	eor	r27, r27
    213a:	f0 0d       	add	r31, r0
    213c:	b1 1d       	adc	r27, r1
    213e:	63 9f       	mul	r22, r19
    2140:	aa 27       	eor	r26, r26
    2142:	f0 0d       	add	r31, r0
    2144:	b1 1d       	adc	r27, r1
    2146:	aa 1f       	adc	r26, r26
    2148:	64 9f       	mul	r22, r20
    214a:	66 27       	eor	r22, r22
    214c:	b0 0d       	add	r27, r0
    214e:	a1 1d       	adc	r26, r1
    2150:	66 1f       	adc	r22, r22
    2152:	82 9f       	mul	r24, r18
    2154:	22 27       	eor	r18, r18
    2156:	b0 0d       	add	r27, r0
    2158:	a1 1d       	adc	r26, r1
    215a:	62 1f       	adc	r22, r18
    215c:	73 9f       	mul	r23, r19
    215e:	b0 0d       	add	r27, r0
    2160:	a1 1d       	adc	r26, r1
    2162:	62 1f       	adc	r22, r18
    2164:	83 9f       	mul	r24, r19
    2166:	a0 0d       	add	r26, r0
    2168:	61 1d       	adc	r22, r1
    216a:	22 1f       	adc	r18, r18
    216c:	74 9f       	mul	r23, r20
    216e:	33 27       	eor	r19, r19
    2170:	a0 0d       	add	r26, r0
    2172:	61 1d       	adc	r22, r1
    2174:	23 1f       	adc	r18, r19
    2176:	84 9f       	mul	r24, r20
    2178:	60 0d       	add	r22, r0
    217a:	21 1d       	adc	r18, r1
    217c:	82 2f       	mov	r24, r18
    217e:	76 2f       	mov	r23, r22
    2180:	6a 2f       	mov	r22, r26
    2182:	11 24       	eor	r1, r1
    2184:	9f 57       	subi	r25, 0x7F	; 127
    2186:	50 40       	sbci	r21, 0x00	; 0
    2188:	8a f0       	brmi	.+34     	; 0x21ac <__mulsf3_pse+0x84>
    218a:	e1 f0       	breq	.+56     	; 0x21c4 <__mulsf3_pse+0x9c>
    218c:	88 23       	and	r24, r24
    218e:	4a f0       	brmi	.+18     	; 0x21a2 <__mulsf3_pse+0x7a>
    2190:	ee 0f       	add	r30, r30
    2192:	ff 1f       	adc	r31, r31
    2194:	bb 1f       	adc	r27, r27
    2196:	66 1f       	adc	r22, r22
    2198:	77 1f       	adc	r23, r23
    219a:	88 1f       	adc	r24, r24
    219c:	91 50       	subi	r25, 0x01	; 1
    219e:	50 40       	sbci	r21, 0x00	; 0
    21a0:	a9 f7       	brne	.-22     	; 0x218c <__mulsf3_pse+0x64>
    21a2:	9e 3f       	cpi	r25, 0xFE	; 254
    21a4:	51 05       	cpc	r21, r1
    21a6:	70 f0       	brcs	.+28     	; 0x21c4 <__mulsf3_pse+0x9c>
    21a8:	5c cf       	rjmp	.-328    	; 0x2062 <__fp_inf>
    21aa:	a6 cf       	rjmp	.-180    	; 0x20f8 <__fp_szero>
    21ac:	5f 3f       	cpi	r21, 0xFF	; 255
    21ae:	ec f3       	brlt	.-6      	; 0x21aa <__mulsf3_pse+0x82>
    21b0:	98 3e       	cpi	r25, 0xE8	; 232
    21b2:	dc f3       	brlt	.-10     	; 0x21aa <__mulsf3_pse+0x82>
    21b4:	86 95       	lsr	r24
    21b6:	77 95       	ror	r23
    21b8:	67 95       	ror	r22
    21ba:	b7 95       	ror	r27
    21bc:	f7 95       	ror	r31
    21be:	e7 95       	ror	r30
    21c0:	9f 5f       	subi	r25, 0xFF	; 255
    21c2:	c1 f7       	brne	.-16     	; 0x21b4 <__mulsf3_pse+0x8c>
    21c4:	fe 2b       	or	r31, r30
    21c6:	88 0f       	add	r24, r24
    21c8:	91 1d       	adc	r25, r1
    21ca:	96 95       	lsr	r25
    21cc:	87 95       	ror	r24
    21ce:	97 f9       	bld	r25, 7
    21d0:	08 95       	ret

000021d2 <__tablejump2__>:
    21d2:	ee 0f       	add	r30, r30
    21d4:	ff 1f       	adc	r31, r31
    21d6:	00 24       	eor	r0, r0
    21d8:	00 1c       	adc	r0, r0
    21da:	0b be       	out	0x3b, r0	; 59
    21dc:	07 90       	elpm	r0, Z+
    21de:	f6 91       	elpm	r31, Z
    21e0:	e0 2d       	mov	r30, r0
    21e2:	09 94       	ijmp

000021e4 <memcpy>:
    21e4:	fb 01       	movw	r30, r22
    21e6:	dc 01       	movw	r26, r24
    21e8:	02 c0       	rjmp	.+4      	; 0x21ee <memcpy+0xa>
    21ea:	01 90       	ld	r0, Z+
    21ec:	0d 92       	st	X+, r0
    21ee:	41 50       	subi	r20, 0x01	; 1
    21f0:	50 40       	sbci	r21, 0x00	; 0
    21f2:	d8 f7       	brcc	.-10     	; 0x21ea <memcpy+0x6>
    21f4:	08 95       	ret

000021f6 <_exit>:
    21f6:	f8 94       	cli

000021f8 <__stop_program>:
    21f8:	ff cf       	rjmp	.-2      	; 0x21f8 <__stop_program>
