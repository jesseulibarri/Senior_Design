
bldc_atmel_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000204  00800100  0000223e  000022d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000223e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000085f  00800304  00800304  000024d6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000024d6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002508  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00002544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000067be  00000000  00000000  000027fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000010eb  00000000  00000000  00008fba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001efc  00000000  00000000  0000a0a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a64  00000000  00000000  0000bfa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00009e85  00000000  00000000  0000ca08  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000023d7  00000000  00000000  0001688d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  00018c64  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000135b  00000000  00000000  00018ebc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	66 c0       	rjmp	.+204    	; 0xce <__ctors_end>
       2:	00 00       	nop
       4:	83 c0       	rjmp	.+262    	; 0x10c <__bad_interrupt>
       6:	00 00       	nop
       8:	81 c0       	rjmp	.+258    	; 0x10c <__bad_interrupt>
       a:	00 00       	nop
       c:	7f c0       	rjmp	.+254    	; 0x10c <__bad_interrupt>
       e:	00 00       	nop
      10:	7d c0       	rjmp	.+250    	; 0x10c <__bad_interrupt>
      12:	00 00       	nop
      14:	7b c0       	rjmp	.+246    	; 0x10c <__bad_interrupt>
      16:	00 00       	nop
      18:	79 c0       	rjmp	.+242    	; 0x10c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	77 c0       	rjmp	.+238    	; 0x10c <__bad_interrupt>
      1e:	00 00       	nop
      20:	75 c0       	rjmp	.+234    	; 0x10c <__bad_interrupt>
      22:	00 00       	nop
      24:	73 c0       	rjmp	.+230    	; 0x10c <__bad_interrupt>
      26:	00 00       	nop
      28:	71 c0       	rjmp	.+226    	; 0x10c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6f c0       	rjmp	.+222    	; 0x10c <__bad_interrupt>
      2e:	00 00       	nop
      30:	6d c0       	rjmp	.+218    	; 0x10c <__bad_interrupt>
      32:	00 00       	nop
      34:	6b c0       	rjmp	.+214    	; 0x10c <__bad_interrupt>
      36:	00 00       	nop
      38:	0c 94 84 0e 	jmp	0x1d08	; 0x1d08 <__vector_14>
      3c:	67 c0       	rjmp	.+206    	; 0x10c <__bad_interrupt>
      3e:	00 00       	nop
      40:	65 c0       	rjmp	.+202    	; 0x10c <__bad_interrupt>
      42:	00 00       	nop
      44:	63 c0       	rjmp	.+198    	; 0x10c <__bad_interrupt>
      46:	00 00       	nop
      48:	61 c0       	rjmp	.+194    	; 0x10c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	5f c0       	rjmp	.+190    	; 0x10c <__bad_interrupt>
      4e:	00 00       	nop
      50:	5d c0       	rjmp	.+186    	; 0x10c <__bad_interrupt>
      52:	00 00       	nop
      54:	5b c0       	rjmp	.+182    	; 0x10c <__bad_interrupt>
      56:	00 00       	nop
      58:	59 c0       	rjmp	.+178    	; 0x10c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	57 c0       	rjmp	.+174    	; 0x10c <__bad_interrupt>
      5e:	00 00       	nop
      60:	55 c0       	rjmp	.+170    	; 0x10c <__bad_interrupt>
      62:	00 00       	nop
      64:	53 c0       	rjmp	.+166    	; 0x10c <__bad_interrupt>
      66:	00 00       	nop
      68:	51 c0       	rjmp	.+162    	; 0x10c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4f c0       	rjmp	.+158    	; 0x10c <__bad_interrupt>
      6e:	00 00       	nop
      70:	4d c0       	rjmp	.+154    	; 0x10c <__bad_interrupt>
      72:	00 00       	nop
      74:	4b c0       	rjmp	.+150    	; 0x10c <__bad_interrupt>
      76:	00 00       	nop
      78:	49 c0       	rjmp	.+146    	; 0x10c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	47 c0       	rjmp	.+142    	; 0x10c <__bad_interrupt>
      7e:	00 00       	nop
      80:	45 c0       	rjmp	.+138    	; 0x10c <__bad_interrupt>
      82:	00 00       	nop
      84:	43 c0       	rjmp	.+134    	; 0x10c <__bad_interrupt>
      86:	00 00       	nop
      88:	41 c0       	rjmp	.+130    	; 0x10c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d5 00       	.word	0x00d5	; ????
      8e:	9a 0b       	sbc	r25, r26
      90:	9a 0b       	sbc	r25, r26
      92:	9a 0b       	sbc	r25, r26
      94:	f3 00       	.word	0x00f3	; ????
      96:	9a 0b       	sbc	r25, r26
      98:	9a 0b       	sbc	r25, r26
      9a:	9a 0b       	sbc	r25, r26
      9c:	9a 0b       	sbc	r25, r26
      9e:	9a 0b       	sbc	r25, r26
      a0:	9a 0b       	sbc	r25, r26
      a2:	9a 0b       	sbc	r25, r26
      a4:	8b 0b       	sbc	r24, r27
      a6:	5e 02       	muls	r21, r30
      a8:	5e 02       	muls	r21, r30
      aa:	93 0b       	sbc	r25, r19
      ac:	43 07       	cpc	r20, r19
      ae:	43 07       	cpc	r20, r19
      b0:	9a 0b       	sbc	r25, r26
      b2:	9a 0b       	sbc	r25, r26
      b4:	31 02       	muls	r19, r17
      b6:	41 02       	muls	r20, r17
      b8:	9a 0b       	sbc	r25, r26
      ba:	aa 0a       	sbc	r10, r26
      bc:	9a 0b       	sbc	r25, r26
      be:	9a 0b       	sbc	r25, r26
      c0:	9a 0b       	sbc	r25, r26
      c2:	9a 0b       	sbc	r25, r26
      c4:	9a 0b       	sbc	r25, r26
      c6:	9a 0b       	sbc	r25, r26
      c8:	09 0b       	sbc	r16, r25
      ca:	3e 0b       	sbc	r19, r30
      cc:	72 0b       	sbc	r23, r18

000000ce <__ctors_end>:
      ce:	11 24       	eor	r1, r1
      d0:	1f be       	out	0x3f, r1	; 63
      d2:	cf ef       	ldi	r28, 0xFF	; 255
      d4:	d0 e1       	ldi	r29, 0x10	; 16
      d6:	de bf       	out	0x3e, r29	; 62
      d8:	cd bf       	out	0x3d, r28	; 61

000000da <__do_copy_data>:
      da:	13 e0       	ldi	r17, 0x03	; 3
      dc:	a0 e0       	ldi	r26, 0x00	; 0
      de:	b1 e0       	ldi	r27, 0x01	; 1
      e0:	ee e3       	ldi	r30, 0x3E	; 62
      e2:	f2 e2       	ldi	r31, 0x22	; 34
      e4:	00 e0       	ldi	r16, 0x00	; 0
      e6:	0b bf       	out	0x3b, r16	; 59
      e8:	02 c0       	rjmp	.+4      	; 0xee <__do_copy_data+0x14>
      ea:	07 90       	elpm	r0, Z+
      ec:	0d 92       	st	X+, r0
      ee:	a4 30       	cpi	r26, 0x04	; 4
      f0:	b1 07       	cpc	r27, r17
      f2:	d9 f7       	brne	.-10     	; 0xea <__do_copy_data+0x10>

000000f4 <__do_clear_bss>:
      f4:	2b e0       	ldi	r18, 0x0B	; 11
      f6:	a4 e0       	ldi	r26, 0x04	; 4
      f8:	b3 e0       	ldi	r27, 0x03	; 3
      fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
      fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
      fe:	a3 36       	cpi	r26, 0x63	; 99
     100:	b2 07       	cpc	r27, r18
     102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
     104:	0e 94 e3 0e 	call	0x1dc6	; 0x1dc6 <main>
     108:	0c 94 1d 11 	jmp	0x223a	; 0x223a <_exit>

0000010c <__bad_interrupt>:
     10c:	79 cf       	rjmp	.-270    	; 0x0 <__vectors>

0000010e <bldc_interface_init>:
	int32_t send_index = 0;
	fwd_can_append(send_buffer, &send_index);
	send_buffer[send_index++] = COMM_SET_DUTY;
	buffer_append_float32(send_buffer, dutyCycle, 100000.0, &send_index);
	send_packet_no_fwd(send_buffer, send_index);
}
     10e:	4f ef       	ldi	r20, 0xFF	; 255
     110:	5f ef       	ldi	r21, 0xFF	; 255
     112:	ba 01       	movw	r22, r20
     114:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__data_start>
     118:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <__data_start+0x1>
     11c:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__data_start+0x2>
     120:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <__data_start+0x3>
     124:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <send_func+0x1>
     128:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <send_func>
     12c:	08 95       	ret

0000012e <bldc_interface_send_packet>:
     12e:	e0 91 1c 03 	lds	r30, 0x031C	; 0x80031c <send_func>
     132:	f0 91 1d 03 	lds	r31, 0x031D	; 0x80031d <send_func+0x1>
     136:	30 97       	sbiw	r30, 0x00	; 0
     138:	09 f0       	breq	.+2      	; 0x13c <bldc_interface_send_packet+0xe>
     13a:	09 95       	icall
     13c:	08 95       	ret

0000013e <bldc_interface_process_packet>:
     13e:	8f 92       	push	r8
     140:	9f 92       	push	r9
     142:	af 92       	push	r10
     144:	bf 92       	push	r11
     146:	cf 92       	push	r12
     148:	df 92       	push	r13
     14a:	ef 92       	push	r14
     14c:	ff 92       	push	r15
     14e:	0f 93       	push	r16
     150:	1f 93       	push	r17
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	00 d0       	rcall	.+0      	; 0x158 <bldc_interface_process_packet+0x1a>
     158:	00 d0       	rcall	.+0      	; 0x15a <bldc_interface_process_packet+0x1c>
     15a:	cd b7       	in	r28, 0x3d	; 61
     15c:	de b7       	in	r29, 0x3e	; 62
     15e:	61 15       	cp	r22, r1
     160:	71 05       	cpc	r23, r1
     162:	11 f4       	brne	.+4      	; 0x168 <bldc_interface_process_packet+0x2a>
     164:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     168:	7c 01       	movw	r14, r24
     16a:	e0 91 1a 03 	lds	r30, 0x031A	; 0x80031a <forward_func>
     16e:	f0 91 1b 03 	lds	r31, 0x031B	; 0x80031b <forward_func+0x1>
     172:	30 97       	sbiw	r30, 0x00	; 0
     174:	19 f0       	breq	.+6      	; 0x17c <bldc_interface_process_packet+0x3e>
     176:	09 95       	icall
     178:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     17c:	19 82       	std	Y+1, r1	; 0x01
     17e:	1a 82       	std	Y+2, r1	; 0x02
     180:	1b 82       	std	Y+3, r1	; 0x03
     182:	1c 82       	std	Y+4, r1	; 0x04
     184:	8c 01       	movw	r16, r24
     186:	0f 5f       	subi	r16, 0xFF	; 255
     188:	1f 4f       	sbci	r17, 0xFF	; 255
     18a:	61 50       	subi	r22, 0x01	; 1
     18c:	71 09       	sbc	r23, r1
     18e:	dc 01       	movw	r26, r24
     190:	ec 91       	ld	r30, X
     192:	8e 2f       	mov	r24, r30
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	81 32       	cpi	r24, 0x21	; 33
     198:	91 05       	cpc	r25, r1
     19a:	10 f0       	brcs	.+4      	; 0x1a0 <bldc_interface_process_packet+0x62>
     19c:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     1a0:	fc 01       	movw	r30, r24
     1a2:	ea 5b       	subi	r30, 0xBA	; 186
     1a4:	ff 4f       	sbci	r31, 0xFF	; 255
     1a6:	0c 94 0b 11 	jmp	0x2216	; 0x2216 <__tablejump2__>
     1aa:	62 30       	cpi	r22, 0x02	; 2
     1ac:	71 05       	cpc	r23, r1
     1ae:	79 f4       	brne	.+30     	; 0x1ce <bldc_interface_process_packet+0x90>
     1b0:	f7 01       	movw	r30, r14
     1b2:	81 81       	ldd	r24, Z+1	; 0x01
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	90 93 f3 04 	sts	0x04F3, r25	; 0x8004f3 <fw_major+0x1>
     1ba:	80 93 f2 04 	sts	0x04F2, r24	; 0x8004f2 <fw_major>
     1be:	82 81       	ldd	r24, Z+2	; 0x02
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	90 93 f1 04 	sts	0x04F1, r25	; 0x8004f1 <fw_minor+0x1>
     1c6:	80 93 f0 04 	sts	0x04F0, r24	; 0x8004f0 <fw_minor>
     1ca:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     1ce:	8f ef       	ldi	r24, 0xFF	; 255
     1d0:	9f ef       	ldi	r25, 0xFF	; 255
     1d2:	90 93 f3 04 	sts	0x04F3, r25	; 0x8004f3 <fw_major+0x1>
     1d6:	80 93 f2 04 	sts	0x04F2, r24	; 0x8004f2 <fw_major>
     1da:	90 93 f1 04 	sts	0x04F1, r25	; 0x8004f1 <fw_minor+0x1>
     1de:	80 93 f0 04 	sts	0x04F0, r24	; 0x8004f0 <fw_minor>
     1e2:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     1e6:	9e 01       	movw	r18, r28
     1e8:	2f 5f       	subi	r18, 0xFF	; 255
     1ea:	3f 4f       	sbci	r19, 0xFF	; 255
     1ec:	40 e0       	ldi	r20, 0x00	; 0
     1ee:	50 e0       	ldi	r21, 0x00	; 0
     1f0:	60 e2       	ldi	r22, 0x20	; 32
     1f2:	71 e4       	ldi	r23, 0x41	; 65
     1f4:	c8 01       	movw	r24, r16
     1f6:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     1fa:	0f 2e       	mov	r0, r31
     1fc:	f4 ef       	ldi	r31, 0xF4	; 244
     1fe:	ef 2e       	mov	r14, r31
     200:	f4 e0       	ldi	r31, 0x04	; 4
     202:	ff 2e       	mov	r15, r31
     204:	f0 2d       	mov	r31, r0
     206:	d7 01       	movw	r26, r14
     208:	14 96       	adiw	r26, 0x04	; 4
     20a:	6d 93       	st	X+, r22
     20c:	7d 93       	st	X+, r23
     20e:	8d 93       	st	X+, r24
     210:	9c 93       	st	X, r25
     212:	17 97       	sbiw	r26, 0x07	; 7
     214:	9e 01       	movw	r18, r28
     216:	2f 5f       	subi	r18, 0xFF	; 255
     218:	3f 4f       	sbci	r19, 0xFF	; 255
     21a:	40 e0       	ldi	r20, 0x00	; 0
     21c:	50 e0       	ldi	r21, 0x00	; 0
     21e:	60 e2       	ldi	r22, 0x20	; 32
     220:	71 e4       	ldi	r23, 0x41	; 65
     222:	c8 01       	movw	r24, r16
     224:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     228:	f7 01       	movw	r30, r14
     22a:	60 87       	std	Z+8, r22	; 0x08
     22c:	71 87       	std	Z+9, r23	; 0x09
     22e:	82 87       	std	Z+10, r24	; 0x0a
     230:	93 87       	std	Z+11, r25	; 0x0b
     232:	9e 01       	movw	r18, r28
     234:	2f 5f       	subi	r18, 0xFF	; 255
     236:	3f 4f       	sbci	r19, 0xFF	; 255
     238:	40 e0       	ldi	r20, 0x00	; 0
     23a:	50 e0       	ldi	r21, 0x00	; 0
     23c:	60 e2       	ldi	r22, 0x20	; 32
     23e:	71 e4       	ldi	r23, 0x41	; 65
     240:	c8 01       	movw	r24, r16
     242:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     246:	d7 01       	movw	r26, r14
     248:	1c 96       	adiw	r26, 0x0c	; 12
     24a:	6d 93       	st	X+, r22
     24c:	7d 93       	st	X+, r23
     24e:	8d 93       	st	X+, r24
     250:	9c 93       	st	X, r25
     252:	1f 97       	sbiw	r26, 0x0f	; 15
     254:	9e 01       	movw	r18, r28
     256:	2f 5f       	subi	r18, 0xFF	; 255
     258:	3f 4f       	sbci	r19, 0xFF	; 255
     25a:	40 e0       	ldi	r20, 0x00	; 0
     25c:	50 e0       	ldi	r21, 0x00	; 0
     25e:	60 e2       	ldi	r22, 0x20	; 32
     260:	71 e4       	ldi	r23, 0x41	; 65
     262:	c8 01       	movw	r24, r16
     264:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     268:	f7 01       	movw	r30, r14
     26a:	60 8b       	std	Z+16, r22	; 0x10
     26c:	71 8b       	std	Z+17, r23	; 0x11
     26e:	82 8b       	std	Z+18, r24	; 0x12
     270:	93 8b       	std	Z+19, r25	; 0x13
     272:	9e 01       	movw	r18, r28
     274:	2f 5f       	subi	r18, 0xFF	; 255
     276:	3f 4f       	sbci	r19, 0xFF	; 255
     278:	40 e0       	ldi	r20, 0x00	; 0
     27a:	50 e0       	ldi	r21, 0x00	; 0
     27c:	60 e2       	ldi	r22, 0x20	; 32
     27e:	71 e4       	ldi	r23, 0x41	; 65
     280:	c8 01       	movw	r24, r16
     282:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     286:	d7 01       	movw	r26, r14
     288:	54 96       	adiw	r26, 0x14	; 20
     28a:	6d 93       	st	X+, r22
     28c:	7d 93       	st	X+, r23
     28e:	8d 93       	st	X+, r24
     290:	9c 93       	st	X, r25
     292:	57 97       	sbiw	r26, 0x17	; 23
     294:	9e 01       	movw	r18, r28
     296:	2f 5f       	subi	r18, 0xFF	; 255
     298:	3f 4f       	sbci	r19, 0xFF	; 255
     29a:	40 e0       	ldi	r20, 0x00	; 0
     29c:	50 e0       	ldi	r21, 0x00	; 0
     29e:	60 e2       	ldi	r22, 0x20	; 32
     2a0:	71 e4       	ldi	r23, 0x41	; 65
     2a2:	c8 01       	movw	r24, r16
     2a4:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     2a8:	f7 01       	movw	r30, r14
     2aa:	60 8f       	std	Z+24, r22	; 0x18
     2ac:	71 8f       	std	Z+25, r23	; 0x19
     2ae:	82 8f       	std	Z+26, r24	; 0x1a
     2b0:	93 8f       	std	Z+27, r25	; 0x1b
     2b2:	9e 01       	movw	r18, r28
     2b4:	2f 5f       	subi	r18, 0xFF	; 255
     2b6:	3f 4f       	sbci	r19, 0xFF	; 255
     2b8:	40 e0       	ldi	r20, 0x00	; 0
     2ba:	50 e0       	ldi	r21, 0x00	; 0
     2bc:	60 e2       	ldi	r22, 0x20	; 32
     2be:	71 e4       	ldi	r23, 0x41	; 65
     2c0:	c8 01       	movw	r24, r16
     2c2:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     2c6:	d7 01       	movw	r26, r14
     2c8:	5c 96       	adiw	r26, 0x1c	; 28
     2ca:	6d 93       	st	X+, r22
     2cc:	7d 93       	st	X+, r23
     2ce:	8d 93       	st	X+, r24
     2d0:	9c 93       	st	X, r25
     2d2:	5f 97       	sbiw	r26, 0x1f	; 31
     2d4:	9e 01       	movw	r18, r28
     2d6:	2f 5f       	subi	r18, 0xFF	; 255
     2d8:	3f 4f       	sbci	r19, 0xFF	; 255
     2da:	40 e0       	ldi	r20, 0x00	; 0
     2dc:	50 e0       	ldi	r21, 0x00	; 0
     2de:	68 ec       	ldi	r22, 0xC8	; 200
     2e0:	72 e4       	ldi	r23, 0x42	; 66
     2e2:	c8 01       	movw	r24, r16
     2e4:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     2e8:	f7 01       	movw	r30, r14
     2ea:	60 a3       	std	Z+32, r22	; 0x20
     2ec:	71 a3       	std	Z+33, r23	; 0x21
     2ee:	82 a3       	std	Z+34, r24	; 0x22
     2f0:	93 a3       	std	Z+35, r25	; 0x23
     2f2:	9e 01       	movw	r18, r28
     2f4:	2f 5f       	subi	r18, 0xFF	; 255
     2f6:	3f 4f       	sbci	r19, 0xFF	; 255
     2f8:	40 e0       	ldi	r20, 0x00	; 0
     2fa:	50 e0       	ldi	r21, 0x00	; 0
     2fc:	68 ec       	ldi	r22, 0xC8	; 200
     2fe:	72 e4       	ldi	r23, 0x42	; 66
     300:	c8 01       	movw	r24, r16
     302:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     306:	d7 01       	movw	r26, r14
     308:	94 96       	adiw	r26, 0x24	; 36
     30a:	6d 93       	st	X+, r22
     30c:	7d 93       	st	X+, r23
     30e:	8d 93       	st	X+, r24
     310:	9c 93       	st	X, r25
     312:	97 97       	sbiw	r26, 0x27	; 39
     314:	9e 01       	movw	r18, r28
     316:	2f 5f       	subi	r18, 0xFF	; 255
     318:	3f 4f       	sbci	r19, 0xFF	; 255
     31a:	40 e0       	ldi	r20, 0x00	; 0
     31c:	50 e0       	ldi	r21, 0x00	; 0
     31e:	6a e7       	ldi	r22, 0x7A	; 122
     320:	74 e4       	ldi	r23, 0x44	; 68
     322:	c8 01       	movw	r24, r16
     324:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     328:	f7 01       	movw	r30, r14
     32a:	64 a7       	std	Z+44, r22	; 0x2c
     32c:	75 a7       	std	Z+45, r23	; 0x2d
     32e:	86 a7       	std	Z+46, r24	; 0x2e
     330:	97 a7       	std	Z+47, r25	; 0x2f
     332:	9e 01       	movw	r18, r28
     334:	2f 5f       	subi	r18, 0xFF	; 255
     336:	3f 4f       	sbci	r19, 0xFF	; 255
     338:	40 e0       	ldi	r20, 0x00	; 0
     33a:	50 e0       	ldi	r21, 0x00	; 0
     33c:	60 e8       	ldi	r22, 0x80	; 128
     33e:	7f e3       	ldi	r23, 0x3F	; 63
     340:	c8 01       	movw	r24, r16
     342:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     346:	d7 01       	movw	r26, r14
     348:	98 96       	adiw	r26, 0x28	; 40
     34a:	6d 93       	st	X+, r22
     34c:	7d 93       	st	X+, r23
     34e:	8d 93       	st	X+, r24
     350:	9c 93       	st	X, r25
     352:	9b 97       	sbiw	r26, 0x2b	; 43
     354:	9e 01       	movw	r18, r28
     356:	2f 5f       	subi	r18, 0xFF	; 255
     358:	3f 4f       	sbci	r19, 0xFF	; 255
     35a:	40 e0       	ldi	r20, 0x00	; 0
     35c:	50 e0       	ldi	r21, 0x00	; 0
     35e:	60 e2       	ldi	r22, 0x20	; 32
     360:	71 e4       	ldi	r23, 0x41	; 65
     362:	c8 01       	movw	r24, r16
     364:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <buffer_get_float16>
     368:	f7 01       	movw	r30, r14
     36a:	60 83       	st	Z, r22
     36c:	71 83       	std	Z+1, r23	; 0x01
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	93 83       	std	Z+3, r25	; 0x03
     372:	9e 01       	movw	r18, r28
     374:	2f 5f       	subi	r18, 0xFF	; 255
     376:	3f 4f       	sbci	r19, 0xFF	; 255
     378:	40 e0       	ldi	r20, 0x00	; 0
     37a:	50 e4       	ldi	r21, 0x40	; 64
     37c:	6c e1       	ldi	r22, 0x1C	; 28
     37e:	76 e4       	ldi	r23, 0x46	; 70
     380:	c8 01       	movw	r24, r16
     382:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     386:	d7 01       	movw	r26, r14
     388:	d0 96       	adiw	r26, 0x30	; 48
     38a:	6d 93       	st	X+, r22
     38c:	7d 93       	st	X+, r23
     38e:	8d 93       	st	X+, r24
     390:	9c 93       	st	X, r25
     392:	d3 97       	sbiw	r26, 0x33	; 51
     394:	9e 01       	movw	r18, r28
     396:	2f 5f       	subi	r18, 0xFF	; 255
     398:	3f 4f       	sbci	r19, 0xFF	; 255
     39a:	40 e0       	ldi	r20, 0x00	; 0
     39c:	50 e4       	ldi	r21, 0x40	; 64
     39e:	6c e1       	ldi	r22, 0x1C	; 28
     3a0:	76 e4       	ldi	r23, 0x46	; 70
     3a2:	c8 01       	movw	r24, r16
     3a4:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     3a8:	f7 01       	movw	r30, r14
     3aa:	64 ab       	std	Z+52, r22	; 0x34
     3ac:	75 ab       	std	Z+53, r23	; 0x35
     3ae:	86 ab       	std	Z+54, r24	; 0x36
     3b0:	97 ab       	std	Z+55, r25	; 0x37
     3b2:	9e 01       	movw	r18, r28
     3b4:	2f 5f       	subi	r18, 0xFF	; 255
     3b6:	3f 4f       	sbci	r19, 0xFF	; 255
     3b8:	40 e0       	ldi	r20, 0x00	; 0
     3ba:	50 e4       	ldi	r21, 0x40	; 64
     3bc:	6c e1       	ldi	r22, 0x1C	; 28
     3be:	76 e4       	ldi	r23, 0x46	; 70
     3c0:	c8 01       	movw	r24, r16
     3c2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     3c6:	d7 01       	movw	r26, r14
     3c8:	d8 96       	adiw	r26, 0x38	; 56
     3ca:	6d 93       	st	X+, r22
     3cc:	7d 93       	st	X+, r23
     3ce:	8d 93       	st	X+, r24
     3d0:	9c 93       	st	X, r25
     3d2:	db 97       	sbiw	r26, 0x3b	; 59
     3d4:	9e 01       	movw	r18, r28
     3d6:	2f 5f       	subi	r18, 0xFF	; 255
     3d8:	3f 4f       	sbci	r19, 0xFF	; 255
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	50 e4       	ldi	r21, 0x40	; 64
     3de:	6c e1       	ldi	r22, 0x1C	; 28
     3e0:	76 e4       	ldi	r23, 0x46	; 70
     3e2:	c8 01       	movw	r24, r16
     3e4:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     3e8:	f7 01       	movw	r30, r14
     3ea:	64 af       	std	Z+60, r22	; 0x3c
     3ec:	75 af       	std	Z+61, r23	; 0x3d
     3ee:	86 af       	std	Z+62, r24	; 0x3e
     3f0:	97 af       	std	Z+63, r25	; 0x3f
     3f2:	be 01       	movw	r22, r28
     3f4:	6f 5f       	subi	r22, 0xFF	; 255
     3f6:	7f 4f       	sbci	r23, 0xFF	; 255
     3f8:	c8 01       	movw	r24, r16
     3fa:	0e 94 97 0c 	call	0x192e	; 0x192e <buffer_get_int32>
     3fe:	60 93 34 05 	sts	0x0534, r22	; 0x800534 <values+0x40>
     402:	70 93 35 05 	sts	0x0535, r23	; 0x800535 <values+0x41>
     406:	80 93 36 05 	sts	0x0536, r24	; 0x800536 <values+0x42>
     40a:	90 93 37 05 	sts	0x0537, r25	; 0x800537 <values+0x43>
     40e:	be 01       	movw	r22, r28
     410:	6f 5f       	subi	r22, 0xFF	; 255
     412:	7f 4f       	sbci	r23, 0xFF	; 255
     414:	c8 01       	movw	r24, r16
     416:	0e 94 97 0c 	call	0x192e	; 0x192e <buffer_get_int32>
     41a:	70 93 39 05 	sts	0x0539, r23	; 0x800539 <values+0x45>
     41e:	60 93 38 05 	sts	0x0538, r22	; 0x800538 <values+0x44>
     422:	89 81       	ldd	r24, Y+1	; 0x01
     424:	9a 81       	ldd	r25, Y+2	; 0x02
     426:	ab 81       	ldd	r26, Y+3	; 0x03
     428:	bc 81       	ldd	r27, Y+4	; 0x04
     42a:	ac 01       	movw	r20, r24
     42c:	bd 01       	movw	r22, r26
     42e:	4f 5f       	subi	r20, 0xFF	; 255
     430:	5f 4f       	sbci	r21, 0xFF	; 255
     432:	6f 4f       	sbci	r22, 0xFF	; 255
     434:	7f 4f       	sbci	r23, 0xFF	; 255
     436:	49 83       	std	Y+1, r20	; 0x01
     438:	5a 83       	std	Y+2, r21	; 0x02
     43a:	6b 83       	std	Y+3, r22	; 0x03
     43c:	7c 83       	std	Y+4, r23	; 0x04
     43e:	f8 01       	movw	r30, r16
     440:	e8 0f       	add	r30, r24
     442:	f9 1f       	adc	r31, r25
     444:	80 81       	ld	r24, Z
     446:	80 93 3a 05 	sts	0x053A, r24	; 0x80053a <values+0x46>
     44a:	e0 91 18 03 	lds	r30, 0x0318	; 0x800318 <rx_value_func>
     44e:	f0 91 19 03 	lds	r31, 0x0319	; 0x800319 <rx_value_func+0x1>
     452:	30 97       	sbiw	r30, 0x00	; 0
     454:	11 f4       	brne	.+4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     456:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     45a:	c7 01       	movw	r24, r14
     45c:	09 95       	icall
     45e:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     462:	e0 91 16 03 	lds	r30, 0x0316	; 0x800316 <rx_printf_func>
     466:	f0 91 17 03 	lds	r31, 0x0317	; 0x800317 <rx_printf_func+0x1>
     46a:	30 97       	sbiw	r30, 0x00	; 0
     46c:	11 f4       	brne	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     46e:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     472:	d8 01       	movw	r26, r16
     474:	a6 0f       	add	r26, r22
     476:	b7 1f       	adc	r27, r23
     478:	1c 92       	st	X, r1
     47a:	c8 01       	movw	r24, r16
     47c:	09 95       	icall
     47e:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     482:	9e 01       	movw	r18, r28
     484:	2f 5f       	subi	r18, 0xFF	; 255
     486:	3f 4f       	sbci	r19, 0xFF	; 255
     488:	40 e0       	ldi	r20, 0x00	; 0
     48a:	50 e5       	ldi	r21, 0x50	; 80
     48c:	63 ec       	ldi	r22, 0xC3	; 195
     48e:	77 e4       	ldi	r23, 0x47	; 71
     490:	c8 01       	movw	r24, r16
     492:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     496:	60 93 ec 04 	sts	0x04EC, r22	; 0x8004ec <rotor_pos>
     49a:	70 93 ed 04 	sts	0x04ED, r23	; 0x8004ed <rotor_pos+0x1>
     49e:	80 93 ee 04 	sts	0x04EE, r24	; 0x8004ee <rotor_pos+0x2>
     4a2:	90 93 ef 04 	sts	0x04EF, r25	; 0x8004ef <rotor_pos+0x3>
     4a6:	e0 91 14 03 	lds	r30, 0x0314	; 0x800314 <rx_rotor_pos_func>
     4aa:	f0 91 15 03 	lds	r31, 0x0315	; 0x800315 <rx_rotor_pos_func+0x1>
     4ae:	30 97       	sbiw	r30, 0x00	; 0
     4b0:	11 f4       	brne	.+4      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
     4b2:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     4b6:	09 95       	icall
     4b8:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__stack+0x635>
     4bc:	0f 2e       	mov	r0, r31
     4be:	f4 ec       	ldi	r31, 0xC4	; 196
     4c0:	cf 2e       	mov	r12, r31
     4c2:	f3 e0       	ldi	r31, 0x03	; 3
     4c4:	df 2e       	mov	r13, r31
     4c6:	f0 2d       	mov	r31, r0
     4c8:	d7 01       	movw	r26, r14
     4ca:	11 96       	adiw	r26, 0x01	; 1
     4cc:	8c 91       	ld	r24, X
     4ce:	11 97       	sbiw	r26, 0x01	; 1
     4d0:	f6 01       	movw	r30, r12
     4d2:	80 83       	st	Z, r24
     4d4:	12 96       	adiw	r26, 0x02	; 2
     4d6:	8c 91       	ld	r24, X
     4d8:	12 97       	sbiw	r26, 0x02	; 2
     4da:	81 83       	std	Z+1, r24	; 0x01
     4dc:	13 96       	adiw	r26, 0x03	; 3
     4de:	8c 91       	ld	r24, X
     4e0:	82 83       	std	Z+2, r24	; 0x02
     4e2:	84 e0       	ldi	r24, 0x04	; 4
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	a0 e0       	ldi	r26, 0x00	; 0
     4e8:	b0 e0       	ldi	r27, 0x00	; 0
     4ea:	89 83       	std	Y+1, r24	; 0x01
     4ec:	9a 83       	std	Y+2, r25	; 0x02
     4ee:	ab 83       	std	Y+3, r26	; 0x03
     4f0:	bc 83       	std	Y+4, r27	; 0x04
     4f2:	d7 01       	movw	r26, r14
     4f4:	14 96       	adiw	r26, 0x04	; 4
     4f6:	8c 91       	ld	r24, X
     4f8:	83 83       	std	Z+3, r24	; 0x03
     4fa:	9e 01       	movw	r18, r28
     4fc:	2f 5f       	subi	r18, 0xFF	; 255
     4fe:	3f 4f       	sbci	r19, 0xFF	; 255
     500:	40 e0       	ldi	r20, 0x00	; 0
     502:	50 e0       	ldi	r21, 0x00	; 0
     504:	6a e7       	ldi	r22, 0x7A	; 122
     506:	74 e4       	ldi	r23, 0x44	; 68
     508:	c8 01       	movw	r24, r16
     50a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     50e:	f6 01       	movw	r30, r12
     510:	64 83       	std	Z+4, r22	; 0x04
     512:	75 83       	std	Z+5, r23	; 0x05
     514:	86 83       	std	Z+6, r24	; 0x06
     516:	97 83       	std	Z+7, r25	; 0x07
     518:	9e 01       	movw	r18, r28
     51a:	2f 5f       	subi	r18, 0xFF	; 255
     51c:	3f 4f       	sbci	r19, 0xFF	; 255
     51e:	40 e0       	ldi	r20, 0x00	; 0
     520:	50 e0       	ldi	r21, 0x00	; 0
     522:	6a e7       	ldi	r22, 0x7A	; 122
     524:	74 e4       	ldi	r23, 0x44	; 68
     526:	c8 01       	movw	r24, r16
     528:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     52c:	d6 01       	movw	r26, r12
     52e:	18 96       	adiw	r26, 0x08	; 8
     530:	6d 93       	st	X+, r22
     532:	7d 93       	st	X+, r23
     534:	8d 93       	st	X+, r24
     536:	9c 93       	st	X, r25
     538:	1b 97       	sbiw	r26, 0x0b	; 11
     53a:	9e 01       	movw	r18, r28
     53c:	2f 5f       	subi	r18, 0xFF	; 255
     53e:	3f 4f       	sbci	r19, 0xFF	; 255
     540:	40 e0       	ldi	r20, 0x00	; 0
     542:	50 e0       	ldi	r21, 0x00	; 0
     544:	6a e7       	ldi	r22, 0x7A	; 122
     546:	74 e4       	ldi	r23, 0x44	; 68
     548:	c8 01       	movw	r24, r16
     54a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     54e:	f6 01       	movw	r30, r12
     550:	64 87       	std	Z+12, r22	; 0x0c
     552:	75 87       	std	Z+13, r23	; 0x0d
     554:	86 87       	std	Z+14, r24	; 0x0e
     556:	97 87       	std	Z+15, r25	; 0x0f
     558:	9e 01       	movw	r18, r28
     55a:	2f 5f       	subi	r18, 0xFF	; 255
     55c:	3f 4f       	sbci	r19, 0xFF	; 255
     55e:	40 e0       	ldi	r20, 0x00	; 0
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	6a e7       	ldi	r22, 0x7A	; 122
     564:	74 e4       	ldi	r23, 0x44	; 68
     566:	c8 01       	movw	r24, r16
     568:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     56c:	d6 01       	movw	r26, r12
     56e:	50 96       	adiw	r26, 0x10	; 16
     570:	6d 93       	st	X+, r22
     572:	7d 93       	st	X+, r23
     574:	8d 93       	st	X+, r24
     576:	9c 93       	st	X, r25
     578:	53 97       	sbiw	r26, 0x13	; 19
     57a:	9e 01       	movw	r18, r28
     57c:	2f 5f       	subi	r18, 0xFF	; 255
     57e:	3f 4f       	sbci	r19, 0xFF	; 255
     580:	40 e0       	ldi	r20, 0x00	; 0
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	6a e7       	ldi	r22, 0x7A	; 122
     586:	74 e4       	ldi	r23, 0x44	; 68
     588:	c8 01       	movw	r24, r16
     58a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     58e:	f6 01       	movw	r30, r12
     590:	64 8b       	std	Z+20, r22	; 0x14
     592:	75 8b       	std	Z+21, r23	; 0x15
     594:	86 8b       	std	Z+22, r24	; 0x16
     596:	97 8b       	std	Z+23, r25	; 0x17
     598:	9e 01       	movw	r18, r28
     59a:	2f 5f       	subi	r18, 0xFF	; 255
     59c:	3f 4f       	sbci	r19, 0xFF	; 255
     59e:	40 e0       	ldi	r20, 0x00	; 0
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	6a e7       	ldi	r22, 0x7A	; 122
     5a4:	74 e4       	ldi	r23, 0x44	; 68
     5a6:	c8 01       	movw	r24, r16
     5a8:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     5ac:	d6 01       	movw	r26, r12
     5ae:	58 96       	adiw	r26, 0x18	; 24
     5b0:	6d 93       	st	X+, r22
     5b2:	7d 93       	st	X+, r23
     5b4:	8d 93       	st	X+, r24
     5b6:	9c 93       	st	X, r25
     5b8:	5b 97       	sbiw	r26, 0x1b	; 27
     5ba:	9e 01       	movw	r18, r28
     5bc:	2f 5f       	subi	r18, 0xFF	; 255
     5be:	3f 4f       	sbci	r19, 0xFF	; 255
     5c0:	40 e0       	ldi	r20, 0x00	; 0
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	6a e7       	ldi	r22, 0x7A	; 122
     5c6:	74 e4       	ldi	r23, 0x44	; 68
     5c8:	c8 01       	movw	r24, r16
     5ca:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     5ce:	f6 01       	movw	r30, r12
     5d0:	64 8f       	std	Z+28, r22	; 0x1c
     5d2:	75 8f       	std	Z+29, r23	; 0x1d
     5d4:	86 8f       	std	Z+30, r24	; 0x1e
     5d6:	97 8f       	std	Z+31, r25	; 0x1f
     5d8:	9e 01       	movw	r18, r28
     5da:	2f 5f       	subi	r18, 0xFF	; 255
     5dc:	3f 4f       	sbci	r19, 0xFF	; 255
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	50 e0       	ldi	r21, 0x00	; 0
     5e2:	6a e7       	ldi	r22, 0x7A	; 122
     5e4:	74 e4       	ldi	r23, 0x44	; 68
     5e6:	c8 01       	movw	r24, r16
     5e8:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     5ec:	d6 01       	movw	r26, r12
     5ee:	90 96       	adiw	r26, 0x20	; 32
     5f0:	6d 93       	st	X+, r22
     5f2:	7d 93       	st	X+, r23
     5f4:	8d 93       	st	X+, r24
     5f6:	9c 93       	st	X, r25
     5f8:	93 97       	sbiw	r26, 0x23	; 35
     5fa:	9e 01       	movw	r18, r28
     5fc:	2f 5f       	subi	r18, 0xFF	; 255
     5fe:	3f 4f       	sbci	r19, 0xFF	; 255
     600:	40 e0       	ldi	r20, 0x00	; 0
     602:	50 e0       	ldi	r21, 0x00	; 0
     604:	6a e7       	ldi	r22, 0x7A	; 122
     606:	74 e4       	ldi	r23, 0x44	; 68
     608:	c8 01       	movw	r24, r16
     60a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     60e:	f6 01       	movw	r30, r12
     610:	64 a3       	std	Z+36, r22	; 0x24
     612:	75 a3       	std	Z+37, r23	; 0x25
     614:	86 a3       	std	Z+38, r24	; 0x26
     616:	97 a3       	std	Z+39, r25	; 0x27
     618:	9e 01       	movw	r18, r28
     61a:	2f 5f       	subi	r18, 0xFF	; 255
     61c:	3f 4f       	sbci	r19, 0xFF	; 255
     61e:	40 e0       	ldi	r20, 0x00	; 0
     620:	50 e0       	ldi	r21, 0x00	; 0
     622:	6a e7       	ldi	r22, 0x7A	; 122
     624:	74 e4       	ldi	r23, 0x44	; 68
     626:	c8 01       	movw	r24, r16
     628:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     62c:	d6 01       	movw	r26, r12
     62e:	98 96       	adiw	r26, 0x28	; 40
     630:	6d 93       	st	X+, r22
     632:	7d 93       	st	X+, r23
     634:	8d 93       	st	X+, r24
     636:	9c 93       	st	X, r25
     638:	9b 97       	sbiw	r26, 0x2b	; 43
     63a:	9e 01       	movw	r18, r28
     63c:	2f 5f       	subi	r18, 0xFF	; 255
     63e:	3f 4f       	sbci	r19, 0xFF	; 255
     640:	40 e0       	ldi	r20, 0x00	; 0
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	6a e7       	ldi	r22, 0x7A	; 122
     646:	74 e4       	ldi	r23, 0x44	; 68
     648:	c8 01       	movw	r24, r16
     64a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     64e:	f6 01       	movw	r30, r12
     650:	64 a7       	std	Z+44, r22	; 0x2c
     652:	75 a7       	std	Z+45, r23	; 0x2d
     654:	86 a7       	std	Z+46, r24	; 0x2e
     656:	97 a7       	std	Z+47, r25	; 0x2f
     658:	9e 01       	movw	r18, r28
     65a:	2f 5f       	subi	r18, 0xFF	; 255
     65c:	3f 4f       	sbci	r19, 0xFF	; 255
     65e:	40 e0       	ldi	r20, 0x00	; 0
     660:	50 e0       	ldi	r21, 0x00	; 0
     662:	6a e7       	ldi	r22, 0x7A	; 122
     664:	74 e4       	ldi	r23, 0x44	; 68
     666:	c8 01       	movw	r24, r16
     668:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     66c:	d6 01       	movw	r26, r12
     66e:	d0 96       	adiw	r26, 0x30	; 48
     670:	6d 93       	st	X+, r22
     672:	7d 93       	st	X+, r23
     674:	8d 93       	st	X+, r24
     676:	9c 93       	st	X, r25
     678:	d3 97       	sbiw	r26, 0x33	; 51
     67a:	9e 01       	movw	r18, r28
     67c:	2f 5f       	subi	r18, 0xFF	; 255
     67e:	3f 4f       	sbci	r19, 0xFF	; 255
     680:	40 e0       	ldi	r20, 0x00	; 0
     682:	50 e0       	ldi	r21, 0x00	; 0
     684:	6a e7       	ldi	r22, 0x7A	; 122
     686:	74 e4       	ldi	r23, 0x44	; 68
     688:	c8 01       	movw	r24, r16
     68a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     68e:	f6 01       	movw	r30, r12
     690:	64 ab       	std	Z+52, r22	; 0x34
     692:	75 ab       	std	Z+53, r23	; 0x35
     694:	86 ab       	std	Z+54, r24	; 0x36
     696:	97 ab       	std	Z+55, r25	; 0x37
     698:	89 81       	ldd	r24, Y+1	; 0x01
     69a:	9a 81       	ldd	r25, Y+2	; 0x02
     69c:	ab 81       	ldd	r26, Y+3	; 0x03
     69e:	bc 81       	ldd	r27, Y+4	; 0x04
     6a0:	f8 01       	movw	r30, r16
     6a2:	e8 0f       	add	r30, r24
     6a4:	f9 1f       	adc	r31, r25
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	30 81       	ld	r19, Z
     6aa:	31 11       	cpse	r19, r1
     6ac:	01 c0       	rjmp	.+2      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
     6ae:	20 e0       	ldi	r18, 0x00	; 0
     6b0:	20 93 fc 03 	sts	0x03FC, r18	; 0x8003fc <mcconf+0x38>
     6b4:	ac 01       	movw	r20, r24
     6b6:	bd 01       	movw	r22, r26
     6b8:	4e 5f       	subi	r20, 0xFE	; 254
     6ba:	5f 4f       	sbci	r21, 0xFF	; 255
     6bc:	6f 4f       	sbci	r22, 0xFF	; 255
     6be:	7f 4f       	sbci	r23, 0xFF	; 255
     6c0:	49 83       	std	Y+1, r20	; 0x01
     6c2:	5a 83       	std	Y+2, r21	; 0x02
     6c4:	6b 83       	std	Y+3, r22	; 0x03
     6c6:	7c 83       	std	Y+4, r23	; 0x04
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	a1 1d       	adc	r26, r1
     6cc:	b1 1d       	adc	r27, r1
     6ce:	f8 01       	movw	r30, r16
     6d0:	e8 0f       	add	r30, r24
     6d2:	f9 1f       	adc	r31, r25
     6d4:	21 e0       	ldi	r18, 0x01	; 1
     6d6:	80 81       	ld	r24, Z
     6d8:	81 11       	cpse	r24, r1
     6da:	01 c0       	rjmp	.+2      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
     6dc:	20 e0       	ldi	r18, 0x00	; 0
     6de:	20 93 fd 03 	sts	0x03FD, r18	; 0x8003fd <mcconf+0x39>
     6e2:	9e 01       	movw	r18, r28
     6e4:	2f 5f       	subi	r18, 0xFF	; 255
     6e6:	3f 4f       	sbci	r19, 0xFF	; 255
     6e8:	40 e0       	ldi	r20, 0x00	; 0
     6ea:	50 e0       	ldi	r21, 0x00	; 0
     6ec:	6a e7       	ldi	r22, 0x7A	; 122
     6ee:	74 e4       	ldi	r23, 0x44	; 68
     6f0:	c8 01       	movw	r24, r16
     6f2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     6f6:	60 93 fe 03 	sts	0x03FE, r22	; 0x8003fe <mcconf+0x3a>
     6fa:	70 93 ff 03 	sts	0x03FF, r23	; 0x8003ff <mcconf+0x3b>
     6fe:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <mcconf+0x3c>
     702:	90 93 01 04 	sts	0x0401, r25	; 0x800401 <mcconf+0x3d>
     706:	9e 01       	movw	r18, r28
     708:	2f 5f       	subi	r18, 0xFF	; 255
     70a:	3f 4f       	sbci	r19, 0xFF	; 255
     70c:	40 e0       	ldi	r20, 0x00	; 0
     70e:	50 e0       	ldi	r21, 0x00	; 0
     710:	6a e7       	ldi	r22, 0x7A	; 122
     712:	74 e4       	ldi	r23, 0x44	; 68
     714:	c8 01       	movw	r24, r16
     716:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     71a:	60 93 02 04 	sts	0x0402, r22	; 0x800402 <mcconf+0x3e>
     71e:	70 93 03 04 	sts	0x0403, r23	; 0x800403 <mcconf+0x3f>
     722:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <mcconf+0x40>
     726:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <mcconf+0x41>
     72a:	9e 01       	movw	r18, r28
     72c:	2f 5f       	subi	r18, 0xFF	; 255
     72e:	3f 4f       	sbci	r19, 0xFF	; 255
     730:	40 e0       	ldi	r20, 0x00	; 0
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	6a e7       	ldi	r22, 0x7A	; 122
     736:	74 e4       	ldi	r23, 0x44	; 68
     738:	c8 01       	movw	r24, r16
     73a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     73e:	60 93 06 04 	sts	0x0406, r22	; 0x800406 <mcconf+0x42>
     742:	70 93 07 04 	sts	0x0407, r23	; 0x800407 <mcconf+0x43>
     746:	80 93 08 04 	sts	0x0408, r24	; 0x800408 <mcconf+0x44>
     74a:	90 93 09 04 	sts	0x0409, r25	; 0x800409 <mcconf+0x45>
     74e:	9e 01       	movw	r18, r28
     750:	2f 5f       	subi	r18, 0xFF	; 255
     752:	3f 4f       	sbci	r19, 0xFF	; 255
     754:	40 e0       	ldi	r20, 0x00	; 0
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	6a e7       	ldi	r22, 0x7A	; 122
     75a:	74 e4       	ldi	r23, 0x44	; 68
     75c:	c8 01       	movw	r24, r16
     75e:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     762:	60 93 0a 04 	sts	0x040A, r22	; 0x80040a <mcconf+0x46>
     766:	70 93 0b 04 	sts	0x040B, r23	; 0x80040b <mcconf+0x47>
     76a:	80 93 0c 04 	sts	0x040C, r24	; 0x80040c <mcconf+0x48>
     76e:	90 93 0d 04 	sts	0x040D, r25	; 0x80040d <mcconf+0x49>
     772:	9e 01       	movw	r18, r28
     774:	2f 5f       	subi	r18, 0xFF	; 255
     776:	3f 4f       	sbci	r19, 0xFF	; 255
     778:	40 e0       	ldi	r20, 0x00	; 0
     77a:	54 e2       	ldi	r21, 0x24	; 36
     77c:	64 e7       	ldi	r22, 0x74	; 116
     77e:	79 e4       	ldi	r23, 0x49	; 73
     780:	c8 01       	movw	r24, r16
     782:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     786:	60 93 0e 04 	sts	0x040E, r22	; 0x80040e <mcconf+0x4a>
     78a:	70 93 0f 04 	sts	0x040F, r23	; 0x80040f <mcconf+0x4b>
     78e:	80 93 10 04 	sts	0x0410, r24	; 0x800410 <mcconf+0x4c>
     792:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <mcconf+0x4d>
     796:	9e 01       	movw	r18, r28
     798:	2f 5f       	subi	r18, 0xFF	; 255
     79a:	3f 4f       	sbci	r19, 0xFF	; 255
     79c:	40 e0       	ldi	r20, 0x00	; 0
     79e:	54 e2       	ldi	r21, 0x24	; 36
     7a0:	64 e7       	ldi	r22, 0x74	; 116
     7a2:	79 e4       	ldi	r23, 0x49	; 73
     7a4:	c8 01       	movw	r24, r16
     7a6:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     7aa:	60 93 12 04 	sts	0x0412, r22	; 0x800412 <mcconf+0x4e>
     7ae:	70 93 13 04 	sts	0x0413, r23	; 0x800413 <mcconf+0x4f>
     7b2:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <mcconf+0x50>
     7b6:	90 93 15 04 	sts	0x0415, r25	; 0x800415 <mcconf+0x51>
     7ba:	9e 01       	movw	r18, r28
     7bc:	2f 5f       	subi	r18, 0xFF	; 255
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	40 e0       	ldi	r20, 0x00	; 0
     7c2:	50 e0       	ldi	r21, 0x00	; 0
     7c4:	6a e7       	ldi	r22, 0x7A	; 122
     7c6:	74 e4       	ldi	r23, 0x44	; 68
     7c8:	c8 01       	movw	r24, r16
     7ca:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     7ce:	60 93 26 04 	sts	0x0426, r22	; 0x800426 <mcconf+0x62>
     7d2:	70 93 27 04 	sts	0x0427, r23	; 0x800427 <mcconf+0x63>
     7d6:	80 93 28 04 	sts	0x0428, r24	; 0x800428 <mcconf+0x64>
     7da:	90 93 29 04 	sts	0x0429, r25	; 0x800429 <mcconf+0x65>
     7de:	9e 01       	movw	r18, r28
     7e0:	2f 5f       	subi	r18, 0xFF	; 255
     7e2:	3f 4f       	sbci	r19, 0xFF	; 255
     7e4:	40 e0       	ldi	r20, 0x00	; 0
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	6a e7       	ldi	r22, 0x7A	; 122
     7ea:	74 e4       	ldi	r23, 0x44	; 68
     7ec:	c8 01       	movw	r24, r16
     7ee:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     7f2:	60 93 2a 04 	sts	0x042A, r22	; 0x80042a <mcconf+0x66>
     7f6:	70 93 2b 04 	sts	0x042B, r23	; 0x80042b <mcconf+0x67>
     7fa:	80 93 2c 04 	sts	0x042C, r24	; 0x80042c <mcconf+0x68>
     7fe:	90 93 2d 04 	sts	0x042D, r25	; 0x80042d <mcconf+0x69>
     802:	9e 01       	movw	r18, r28
     804:	2f 5f       	subi	r18, 0xFF	; 255
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	40 e0       	ldi	r20, 0x00	; 0
     80a:	50 e0       	ldi	r21, 0x00	; 0
     80c:	6a e7       	ldi	r22, 0x7A	; 122
     80e:	74 e4       	ldi	r23, 0x44	; 68
     810:	c8 01       	movw	r24, r16
     812:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     816:	60 93 2e 04 	sts	0x042E, r22	; 0x80042e <mcconf+0x6a>
     81a:	70 93 2f 04 	sts	0x042F, r23	; 0x80042f <mcconf+0x6b>
     81e:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <mcconf+0x6c>
     822:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <mcconf+0x6d>
     826:	9e 01       	movw	r18, r28
     828:	2f 5f       	subi	r18, 0xFF	; 255
     82a:	3f 4f       	sbci	r19, 0xFF	; 255
     82c:	40 e0       	ldi	r20, 0x00	; 0
     82e:	50 e0       	ldi	r21, 0x00	; 0
     830:	6a e7       	ldi	r22, 0x7A	; 122
     832:	74 e4       	ldi	r23, 0x44	; 68
     834:	c8 01       	movw	r24, r16
     836:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     83a:	60 93 32 04 	sts	0x0432, r22	; 0x800432 <mcconf+0x6e>
     83e:	70 93 33 04 	sts	0x0433, r23	; 0x800433 <mcconf+0x6f>
     842:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <mcconf+0x70>
     846:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <mcconf+0x71>
     84a:	9e 01       	movw	r18, r28
     84c:	2f 5f       	subi	r18, 0xFF	; 255
     84e:	3f 4f       	sbci	r19, 0xFF	; 255
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	50 e0       	ldi	r21, 0x00	; 0
     854:	6a e7       	ldi	r22, 0x7A	; 122
     856:	74 e4       	ldi	r23, 0x44	; 68
     858:	c8 01       	movw	r24, r16
     85a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     85e:	60 93 36 04 	sts	0x0436, r22	; 0x800436 <mcconf+0x72>
     862:	70 93 37 04 	sts	0x0437, r23	; 0x800437 <mcconf+0x73>
     866:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <mcconf+0x74>
     86a:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <mcconf+0x75>
     86e:	9e 01       	movw	r18, r28
     870:	2f 5f       	subi	r18, 0xFF	; 255
     872:	3f 4f       	sbci	r19, 0xFF	; 255
     874:	40 e0       	ldi	r20, 0x00	; 0
     876:	50 e0       	ldi	r21, 0x00	; 0
     878:	6a e7       	ldi	r22, 0x7A	; 122
     87a:	74 e4       	ldi	r23, 0x44	; 68
     87c:	c8 01       	movw	r24, r16
     87e:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     882:	60 93 3a 04 	sts	0x043A, r22	; 0x80043a <mcconf+0x76>
     886:	70 93 3b 04 	sts	0x043B, r23	; 0x80043b <mcconf+0x77>
     88a:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <mcconf+0x78>
     88e:	90 93 3d 04 	sts	0x043D, r25	; 0x80043d <mcconf+0x79>
     892:	9e 01       	movw	r18, r28
     894:	2f 5f       	subi	r18, 0xFF	; 255
     896:	3f 4f       	sbci	r19, 0xFF	; 255
     898:	40 e0       	ldi	r20, 0x00	; 0
     89a:	50 e0       	ldi	r21, 0x00	; 0
     89c:	6a e7       	ldi	r22, 0x7A	; 122
     89e:	74 e4       	ldi	r23, 0x44	; 68
     8a0:	c8 01       	movw	r24, r16
     8a2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     8a6:	60 93 3e 04 	sts	0x043E, r22	; 0x80043e <mcconf+0x7a>
     8aa:	70 93 3f 04 	sts	0x043F, r23	; 0x80043f <mcconf+0x7b>
     8ae:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <mcconf+0x7c>
     8b2:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <mcconf+0x7d>
     8b6:	49 81       	ldd	r20, Y+1	; 0x01
     8b8:	5a 81       	ldd	r21, Y+2	; 0x02
     8ba:	6b 81       	ldd	r22, Y+3	; 0x03
     8bc:	7c 81       	ldd	r23, Y+4	; 0x04
     8be:	f8 01       	movw	r30, r16
     8c0:	e4 0f       	add	r30, r20
     8c2:	f5 1f       	adc	r31, r21
     8c4:	88 e0       	ldi	r24, 0x08	; 8
     8c6:	a2 e4       	ldi	r26, 0x42	; 66
     8c8:	b4 e0       	ldi	r27, 0x04	; 4
     8ca:	01 90       	ld	r0, Z+
     8cc:	0d 92       	st	X+, r0
     8ce:	8a 95       	dec	r24
     8d0:	e1 f7       	brne	.-8      	; 0x8ca <__LOCK_REGION_LENGTH__+0x4ca>
     8d2:	48 5f       	subi	r20, 0xF8	; 248
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	6f 4f       	sbci	r22, 0xFF	; 255
     8d8:	7f 4f       	sbci	r23, 0xFF	; 255
     8da:	49 83       	std	Y+1, r20	; 0x01
     8dc:	5a 83       	std	Y+2, r21	; 0x02
     8de:	6b 83       	std	Y+3, r22	; 0x03
     8e0:	7c 83       	std	Y+4, r23	; 0x04
     8e2:	9e 01       	movw	r18, r28
     8e4:	2f 5f       	subi	r18, 0xFF	; 255
     8e6:	3f 4f       	sbci	r19, 0xFF	; 255
     8e8:	40 e0       	ldi	r20, 0x00	; 0
     8ea:	50 e0       	ldi	r21, 0x00	; 0
     8ec:	6a e7       	ldi	r22, 0x7A	; 122
     8ee:	74 e4       	ldi	r23, 0x44	; 68
     8f0:	c8 01       	movw	r24, r16
     8f2:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     8f6:	60 93 4a 04 	sts	0x044A, r22	; 0x80044a <mcconf+0x86>
     8fa:	70 93 4b 04 	sts	0x044B, r23	; 0x80044b <mcconf+0x87>
     8fe:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <mcconf+0x88>
     902:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <mcconf+0x89>
     906:	9e 01       	movw	r18, r28
     908:	2f 5f       	subi	r18, 0xFF	; 255
     90a:	3f 4f       	sbci	r19, 0xFF	; 255
     90c:	40 e0       	ldi	r20, 0x00	; 0
     90e:	50 e5       	ldi	r21, 0x50	; 80
     910:	63 ec       	ldi	r22, 0xC3	; 195
     912:	77 e4       	ldi	r23, 0x47	; 71
     914:	c8 01       	movw	r24, r16
     916:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     91a:	60 93 4e 04 	sts	0x044E, r22	; 0x80044e <mcconf+0x8a>
     91e:	70 93 4f 04 	sts	0x044F, r23	; 0x80044f <mcconf+0x8b>
     922:	80 93 50 04 	sts	0x0450, r24	; 0x800450 <mcconf+0x8c>
     926:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <mcconf+0x8d>
     92a:	9e 01       	movw	r18, r28
     92c:	2f 5f       	subi	r18, 0xFF	; 255
     92e:	3f 4f       	sbci	r19, 0xFF	; 255
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	50 e5       	ldi	r21, 0x50	; 80
     934:	63 ec       	ldi	r22, 0xC3	; 195
     936:	77 e4       	ldi	r23, 0x47	; 71
     938:	c8 01       	movw	r24, r16
     93a:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     93e:	60 93 52 04 	sts	0x0452, r22	; 0x800452 <mcconf+0x8e>
     942:	70 93 53 04 	sts	0x0453, r23	; 0x800453 <mcconf+0x8f>
     946:	80 93 54 04 	sts	0x0454, r24	; 0x800454 <mcconf+0x90>
     94a:	90 93 55 04 	sts	0x0455, r25	; 0x800455 <mcconf+0x91>
     94e:	9e 01       	movw	r18, r28
     950:	2f 5f       	subi	r18, 0xFF	; 255
     952:	3f 4f       	sbci	r19, 0xFF	; 255
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	50 e0       	ldi	r21, 0x00	; 0
     958:	6a e7       	ldi	r22, 0x7A	; 122
     95a:	74 e4       	ldi	r23, 0x44	; 68
     95c:	c8 01       	movw	r24, r16
     95e:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     962:	60 93 56 04 	sts	0x0456, r22	; 0x800456 <mcconf+0x92>
     966:	70 93 57 04 	sts	0x0457, r23	; 0x800457 <mcconf+0x93>
     96a:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <mcconf+0x94>
     96e:	90 93 59 04 	sts	0x0459, r25	; 0x800459 <mcconf+0x95>
     972:	9e 01       	movw	r18, r28
     974:	2f 5f       	subi	r18, 0xFF	; 255
     976:	3f 4f       	sbci	r19, 0xFF	; 255
     978:	40 e0       	ldi	r20, 0x00	; 0
     97a:	54 e2       	ldi	r21, 0x24	; 36
     97c:	64 e7       	ldi	r22, 0x74	; 116
     97e:	79 e4       	ldi	r23, 0x49	; 73
     980:	c8 01       	movw	r24, r16
     982:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     986:	60 93 5a 04 	sts	0x045A, r22	; 0x80045a <mcconf+0x96>
     98a:	70 93 5b 04 	sts	0x045B, r23	; 0x80045b <mcconf+0x97>
     98e:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <mcconf+0x98>
     992:	90 93 5d 04 	sts	0x045D, r25	; 0x80045d <mcconf+0x99>
     996:	89 81       	ldd	r24, Y+1	; 0x01
     998:	9a 81       	ldd	r25, Y+2	; 0x02
     99a:	ab 81       	ldd	r26, Y+3	; 0x03
     99c:	bc 81       	ldd	r27, Y+4	; 0x04
     99e:	ac 01       	movw	r20, r24
     9a0:	bd 01       	movw	r22, r26
     9a2:	4f 5f       	subi	r20, 0xFF	; 255
     9a4:	5f 4f       	sbci	r21, 0xFF	; 255
     9a6:	6f 4f       	sbci	r22, 0xFF	; 255
     9a8:	7f 4f       	sbci	r23, 0xFF	; 255
     9aa:	49 83       	std	Y+1, r20	; 0x01
     9ac:	5a 83       	std	Y+2, r21	; 0x02
     9ae:	6b 83       	std	Y+3, r22	; 0x03
     9b0:	7c 83       	std	Y+4, r23	; 0x04
     9b2:	f8 01       	movw	r30, r16
     9b4:	e8 0f       	add	r30, r24
     9b6:	f9 1f       	adc	r31, r25
     9b8:	21 e0       	ldi	r18, 0x01	; 1
     9ba:	80 81       	ld	r24, Z
     9bc:	81 11       	cpse	r24, r1
     9be:	01 c0       	rjmp	.+2      	; 0x9c2 <__LOCK_REGION_LENGTH__+0x5c2>
     9c0:	20 e0       	ldi	r18, 0x00	; 0
     9c2:	20 93 62 04 	sts	0x0462, r18	; 0x800462 <mcconf+0x9e>
     9c6:	9e 01       	movw	r18, r28
     9c8:	2f 5f       	subi	r18, 0xFF	; 255
     9ca:	3f 4f       	sbci	r19, 0xFF	; 255
     9cc:	40 e0       	ldi	r20, 0x00	; 0
     9ce:	50 e0       	ldi	r21, 0x00	; 0
     9d0:	6a e7       	ldi	r22, 0x7A	; 122
     9d2:	74 e4       	ldi	r23, 0x44	; 68
     9d4:	c8 01       	movw	r24, r16
     9d6:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     9da:	60 93 5e 04 	sts	0x045E, r22	; 0x80045e <mcconf+0x9a>
     9de:	70 93 5f 04 	sts	0x045F, r23	; 0x80045f <mcconf+0x9b>
     9e2:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <mcconf+0x9c>
     9e6:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <mcconf+0x9d>
     9ea:	9e 01       	movw	r18, r28
     9ec:	2f 5f       	subi	r18, 0xFF	; 255
     9ee:	3f 4f       	sbci	r19, 0xFF	; 255
     9f0:	40 e0       	ldi	r20, 0x00	; 0
     9f2:	50 e0       	ldi	r21, 0x00	; 0
     9f4:	6a e7       	ldi	r22, 0x7A	; 122
     9f6:	74 e4       	ldi	r23, 0x44	; 68
     9f8:	c8 01       	movw	r24, r16
     9fa:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <buffer_get_float32>
     9fe:	60 93 63 04 	sts	0x0463, r22	; 0x800463 <mcconf+0x9f>
     a02:	70 93 64 04 	sts	0x0464, r23	; 0x800464 <mcconf+0xa0>
     a06:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <mcconf+0xa1>
     a0a:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <mcconf+0xa2>
     a0e:	89 81       	ldd	r24, Y+1	; 0x01
     a10:	9a 81       	ldd	r25, Y+2	; 0x02
     a12:	ab 81       	ldd	r26, Y+3	; 0x03
     a14:	bc 81       	ldd	r27, Y+4	; 0x04
     a16:	ac 01       	movw	r20, r24
     a18:	bd 01       	movw	r22, r26
     a1a:	4f 5f       	subi	r20, 0xFF	; 255
     a1c:	5f 4f       	sbci	r21, 0xFF	; 255
     a1e:	6f 4f       	sbci	r22, 0xFF	; 255
     a20:	7f 4f       	sbci	r23, 0xFF	; 255
     a22:	49 83       	std	Y+1, r20	; 0x01
     a24:	5a 83       	std	Y+2, r21	; 0x02
     a26:	6b 83       	std	Y+3, r22	; 0x03
     a28:	7c 83       	std	Y+4, r23	; 0x04
     a2a:	f8 01       	movw	r30, r16
     a2c:	e8 0f       	add	r30, r24
     a2e:	f9 1f       	adc	r31, r25
     a30:	80 81       	ld	r24, Z
     a32:	80 93 9b 04 	sts	0x049B, r24	; 0x80049b <mcconf+0xd7>
     a36:	9e 01       	movw	r18, r28
     a38:	2f 5f       	subi	r18, 0xFF	; 255
     a3a:	3f 4f       	sbci	r19, 0xFF	; 255
     a3c:	40 e0       	ldi	r20, 0x00	; 0
     a3e:	50 e0       	ldi	r21, 0x00	; 0
     a40:	6a e7       	ldi	r22, 0x7A	; 122
     a42:	74 e4       	ldi	r23, 0x44	; 68
     a44:	c8 01       	movw	r24, r16
     a46:	e6 d7       	rcall	.+4044   	; 0x1a14 <buffer_get_float32>
     a48:	60 93 77 04 	sts	0x0477, r22	; 0x800477 <mcconf+0xb3>
     a4c:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <mcconf+0xb4>
     a50:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <mcconf+0xb5>
     a54:	90 93 7a 04 	sts	0x047A, r25	; 0x80047a <mcconf+0xb6>
     a58:	9e 01       	movw	r18, r28
     a5a:	2f 5f       	subi	r18, 0xFF	; 255
     a5c:	3f 4f       	sbci	r19, 0xFF	; 255
     a5e:	40 e0       	ldi	r20, 0x00	; 0
     a60:	50 e0       	ldi	r21, 0x00	; 0
     a62:	6a e7       	ldi	r22, 0x7A	; 122
     a64:	74 e4       	ldi	r23, 0x44	; 68
     a66:	c8 01       	movw	r24, r16
     a68:	d5 d7       	rcall	.+4010   	; 0x1a14 <buffer_get_float32>
     a6a:	60 93 7b 04 	sts	0x047B, r22	; 0x80047b <mcconf+0xb7>
     a6e:	70 93 7c 04 	sts	0x047C, r23	; 0x80047c <mcconf+0xb8>
     a72:	80 93 7d 04 	sts	0x047D, r24	; 0x80047d <mcconf+0xb9>
     a76:	90 93 7e 04 	sts	0x047E, r25	; 0x80047e <mcconf+0xba>
     a7a:	9e 01       	movw	r18, r28
     a7c:	2f 5f       	subi	r18, 0xFF	; 255
     a7e:	3f 4f       	sbci	r19, 0xFF	; 255
     a80:	40 e2       	ldi	r20, 0x20	; 32
     a82:	5c eb       	ldi	r21, 0xBC	; 188
     a84:	6e eb       	ldi	r22, 0xBE	; 190
     a86:	7c e4       	ldi	r23, 0x4C	; 76
     a88:	c8 01       	movw	r24, r16
     a8a:	c4 d7       	rcall	.+3976   	; 0x1a14 <buffer_get_float32>
     a8c:	60 93 67 04 	sts	0x0467, r22	; 0x800467 <mcconf+0xa3>
     a90:	70 93 68 04 	sts	0x0468, r23	; 0x800468 <mcconf+0xa4>
     a94:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <mcconf+0xa5>
     a98:	90 93 6a 04 	sts	0x046A, r25	; 0x80046a <mcconf+0xa6>
     a9c:	9e 01       	movw	r18, r28
     a9e:	2f 5f       	subi	r18, 0xFF	; 255
     aa0:	3f 4f       	sbci	r19, 0xFF	; 255
     aa2:	40 e0       	ldi	r20, 0x00	; 0
     aa4:	50 e5       	ldi	r21, 0x50	; 80
     aa6:	63 ec       	ldi	r22, 0xC3	; 195
     aa8:	77 e4       	ldi	r23, 0x47	; 71
     aaa:	c8 01       	movw	r24, r16
     aac:	b3 d7       	rcall	.+3942   	; 0x1a14 <buffer_get_float32>
     aae:	60 93 6b 04 	sts	0x046B, r22	; 0x80046b <mcconf+0xa7>
     ab2:	70 93 6c 04 	sts	0x046C, r23	; 0x80046c <mcconf+0xa8>
     ab6:	80 93 6d 04 	sts	0x046D, r24	; 0x80046d <mcconf+0xa9>
     aba:	90 93 6e 04 	sts	0x046E, r25	; 0x80046e <mcconf+0xaa>
     abe:	9e 01       	movw	r18, r28
     ac0:	2f 5f       	subi	r18, 0xFF	; 255
     ac2:	3f 4f       	sbci	r19, 0xFF	; 255
     ac4:	40 e0       	ldi	r20, 0x00	; 0
     ac6:	50 e5       	ldi	r21, 0x50	; 80
     ac8:	63 ec       	ldi	r22, 0xC3	; 195
     aca:	77 e4       	ldi	r23, 0x47	; 71
     acc:	c8 01       	movw	r24, r16
     ace:	a2 d7       	rcall	.+3908   	; 0x1a14 <buffer_get_float32>
     ad0:	60 93 6f 04 	sts	0x046F, r22	; 0x80046f <mcconf+0xab>
     ad4:	70 93 70 04 	sts	0x0470, r23	; 0x800470 <mcconf+0xac>
     ad8:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <mcconf+0xad>
     adc:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <mcconf+0xae>
     ae0:	9e 01       	movw	r18, r28
     ae2:	2f 5f       	subi	r18, 0xFF	; 255
     ae4:	3f 4f       	sbci	r19, 0xFF	; 255
     ae6:	40 e0       	ldi	r20, 0x00	; 0
     ae8:	50 e0       	ldi	r21, 0x00	; 0
     aea:	60 e8       	ldi	r22, 0x80	; 128
     aec:	7f e3       	ldi	r23, 0x3F	; 63
     aee:	c8 01       	movw	r24, r16
     af0:	91 d7       	rcall	.+3874   	; 0x1a14 <buffer_get_float32>
     af2:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <mcconf+0xaf>
     af6:	70 93 74 04 	sts	0x0474, r23	; 0x800474 <mcconf+0xb0>
     afa:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <mcconf+0xb1>
     afe:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <mcconf+0xb2>
     b02:	9e 01       	movw	r18, r28
     b04:	2f 5f       	subi	r18, 0xFF	; 255
     b06:	3f 4f       	sbci	r19, 0xFF	; 255
     b08:	40 e0       	ldi	r20, 0x00	; 0
     b0a:	50 e0       	ldi	r21, 0x00	; 0
     b0c:	6a e7       	ldi	r22, 0x7A	; 122
     b0e:	74 e4       	ldi	r23, 0x44	; 68
     b10:	c8 01       	movw	r24, r16
     b12:	80 d7       	rcall	.+3840   	; 0x1a14 <buffer_get_float32>
     b14:	60 93 7f 04 	sts	0x047F, r22	; 0x80047f <mcconf+0xbb>
     b18:	70 93 80 04 	sts	0x0480, r23	; 0x800480 <mcconf+0xbc>
     b1c:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <mcconf+0xbd>
     b20:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <mcconf+0xbe>
     b24:	9e 01       	movw	r18, r28
     b26:	2f 5f       	subi	r18, 0xFF	; 255
     b28:	3f 4f       	sbci	r19, 0xFF	; 255
     b2a:	40 e0       	ldi	r20, 0x00	; 0
     b2c:	50 e0       	ldi	r21, 0x00	; 0
     b2e:	6a e7       	ldi	r22, 0x7A	; 122
     b30:	74 e4       	ldi	r23, 0x44	; 68
     b32:	c8 01       	movw	r24, r16
     b34:	6f d7       	rcall	.+3806   	; 0x1a14 <buffer_get_float32>
     b36:	60 93 83 04 	sts	0x0483, r22	; 0x800483 <mcconf+0xbf>
     b3a:	70 93 84 04 	sts	0x0484, r23	; 0x800484 <mcconf+0xc0>
     b3e:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <mcconf+0xc1>
     b42:	90 93 86 04 	sts	0x0486, r25	; 0x800486 <mcconf+0xc2>
     b46:	9e 01       	movw	r18, r28
     b48:	2f 5f       	subi	r18, 0xFF	; 255
     b4a:	3f 4f       	sbci	r19, 0xFF	; 255
     b4c:	40 e0       	ldi	r20, 0x00	; 0
     b4e:	50 e0       	ldi	r21, 0x00	; 0
     b50:	6a e7       	ldi	r22, 0x7A	; 122
     b52:	74 e4       	ldi	r23, 0x44	; 68
     b54:	c8 01       	movw	r24, r16
     b56:	5e d7       	rcall	.+3772   	; 0x1a14 <buffer_get_float32>
     b58:	60 93 87 04 	sts	0x0487, r22	; 0x800487 <mcconf+0xc3>
     b5c:	70 93 88 04 	sts	0x0488, r23	; 0x800488 <mcconf+0xc4>
     b60:	80 93 89 04 	sts	0x0489, r24	; 0x800489 <mcconf+0xc5>
     b64:	90 93 8a 04 	sts	0x048A, r25	; 0x80048a <mcconf+0xc6>
     b68:	9e 01       	movw	r18, r28
     b6a:	2f 5f       	subi	r18, 0xFF	; 255
     b6c:	3f 4f       	sbci	r19, 0xFF	; 255
     b6e:	40 e0       	ldi	r20, 0x00	; 0
     b70:	50 e0       	ldi	r21, 0x00	; 0
     b72:	6a e7       	ldi	r22, 0x7A	; 122
     b74:	74 e4       	ldi	r23, 0x44	; 68
     b76:	c8 01       	movw	r24, r16
     b78:	4d d7       	rcall	.+3738   	; 0x1a14 <buffer_get_float32>
     b7a:	60 93 8b 04 	sts	0x048B, r22	; 0x80048b <mcconf+0xc7>
     b7e:	70 93 8c 04 	sts	0x048C, r23	; 0x80048c <mcconf+0xc8>
     b82:	80 93 8d 04 	sts	0x048D, r24	; 0x80048d <mcconf+0xc9>
     b86:	90 93 8e 04 	sts	0x048E, r25	; 0x80048e <mcconf+0xca>
     b8a:	9e 01       	movw	r18, r28
     b8c:	2f 5f       	subi	r18, 0xFF	; 255
     b8e:	3f 4f       	sbci	r19, 0xFF	; 255
     b90:	40 e0       	ldi	r20, 0x00	; 0
     b92:	50 e0       	ldi	r21, 0x00	; 0
     b94:	6a e7       	ldi	r22, 0x7A	; 122
     b96:	74 e4       	ldi	r23, 0x44	; 68
     b98:	c8 01       	movw	r24, r16
     b9a:	3c d7       	rcall	.+3704   	; 0x1a14 <buffer_get_float32>
     b9c:	60 93 8f 04 	sts	0x048F, r22	; 0x80048f <mcconf+0xcb>
     ba0:	70 93 90 04 	sts	0x0490, r23	; 0x800490 <mcconf+0xcc>
     ba4:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <mcconf+0xcd>
     ba8:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <mcconf+0xce>
     bac:	9e 01       	movw	r18, r28
     bae:	2f 5f       	subi	r18, 0xFF	; 255
     bb0:	3f 4f       	sbci	r19, 0xFF	; 255
     bb2:	40 e0       	ldi	r20, 0x00	; 0
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	6a e7       	ldi	r22, 0x7A	; 122
     bb8:	74 e4       	ldi	r23, 0x44	; 68
     bba:	c8 01       	movw	r24, r16
     bbc:	2b d7       	rcall	.+3670   	; 0x1a14 <buffer_get_float32>
     bbe:	60 93 93 04 	sts	0x0493, r22	; 0x800493 <mcconf+0xcf>
     bc2:	70 93 94 04 	sts	0x0494, r23	; 0x800494 <mcconf+0xd0>
     bc6:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <mcconf+0xd1>
     bca:	90 93 96 04 	sts	0x0496, r25	; 0x800496 <mcconf+0xd2>
     bce:	9e 01       	movw	r18, r28
     bd0:	2f 5f       	subi	r18, 0xFF	; 255
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	40 e0       	ldi	r20, 0x00	; 0
     bd6:	50 e0       	ldi	r21, 0x00	; 0
     bd8:	6a e7       	ldi	r22, 0x7A	; 122
     bda:	74 e4       	ldi	r23, 0x44	; 68
     bdc:	c8 01       	movw	r24, r16
     bde:	1a d7       	rcall	.+3636   	; 0x1a14 <buffer_get_float32>
     be0:	60 93 97 04 	sts	0x0497, r22	; 0x800497 <mcconf+0xd3>
     be4:	70 93 98 04 	sts	0x0498, r23	; 0x800498 <mcconf+0xd4>
     be8:	80 93 99 04 	sts	0x0499, r24	; 0x800499 <mcconf+0xd5>
     bec:	90 93 9a 04 	sts	0x049A, r25	; 0x80049a <mcconf+0xd6>
     bf0:	49 81       	ldd	r20, Y+1	; 0x01
     bf2:	5a 81       	ldd	r21, Y+2	; 0x02
     bf4:	6b 81       	ldd	r22, Y+3	; 0x03
     bf6:	7c 81       	ldd	r23, Y+4	; 0x04
     bf8:	f8 01       	movw	r30, r16
     bfa:	e4 0f       	add	r30, r20
     bfc:	f5 1f       	adc	r31, r21
     bfe:	88 e0       	ldi	r24, 0x08	; 8
     c00:	ac e9       	ldi	r26, 0x9C	; 156
     c02:	b4 e0       	ldi	r27, 0x04	; 4
     c04:	01 90       	ld	r0, Z+
     c06:	0d 92       	st	X+, r0
     c08:	8a 95       	dec	r24
     c0a:	e1 f7       	brne	.-8      	; 0xc04 <__LOCK_REGION_LENGTH__+0x804>
     c0c:	48 5f       	subi	r20, 0xF8	; 248
     c0e:	5f 4f       	sbci	r21, 0xFF	; 255
     c10:	6f 4f       	sbci	r22, 0xFF	; 255
     c12:	7f 4f       	sbci	r23, 0xFF	; 255
     c14:	49 83       	std	Y+1, r20	; 0x01
     c16:	5a 83       	std	Y+2, r21	; 0x02
     c18:	6b 83       	std	Y+3, r22	; 0x03
     c1a:	7c 83       	std	Y+4, r23	; 0x04
     c1c:	9e 01       	movw	r18, r28
     c1e:	2f 5f       	subi	r18, 0xFF	; 255
     c20:	3f 4f       	sbci	r19, 0xFF	; 255
     c22:	40 e0       	ldi	r20, 0x00	; 0
     c24:	50 e0       	ldi	r21, 0x00	; 0
     c26:	6a e7       	ldi	r22, 0x7A	; 122
     c28:	74 e4       	ldi	r23, 0x44	; 68
     c2a:	c8 01       	movw	r24, r16
     c2c:	f3 d6       	rcall	.+3558   	; 0x1a14 <buffer_get_float32>
     c2e:	60 93 a4 04 	sts	0x04A4, r22	; 0x8004a4 <mcconf+0xe0>
     c32:	70 93 a5 04 	sts	0x04A5, r23	; 0x8004a5 <mcconf+0xe1>
     c36:	80 93 a6 04 	sts	0x04A6, r24	; 0x8004a6 <mcconf+0xe2>
     c3a:	90 93 a7 04 	sts	0x04A7, r25	; 0x8004a7 <mcconf+0xe3>
     c3e:	9e 01       	movw	r18, r28
     c40:	2f 5f       	subi	r18, 0xFF	; 255
     c42:	3f 4f       	sbci	r19, 0xFF	; 255
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	54 e2       	ldi	r21, 0x24	; 36
     c48:	64 e7       	ldi	r22, 0x74	; 116
     c4a:	79 e4       	ldi	r23, 0x49	; 73
     c4c:	c8 01       	movw	r24, r16
     c4e:	e2 d6       	rcall	.+3524   	; 0x1a14 <buffer_get_float32>
     c50:	60 93 a8 04 	sts	0x04A8, r22	; 0x8004a8 <mcconf+0xe4>
     c54:	70 93 a9 04 	sts	0x04A9, r23	; 0x8004a9 <mcconf+0xe5>
     c58:	80 93 aa 04 	sts	0x04AA, r24	; 0x8004aa <mcconf+0xe6>
     c5c:	90 93 ab 04 	sts	0x04AB, r25	; 0x8004ab <mcconf+0xe7>
     c60:	9e 01       	movw	r18, r28
     c62:	2f 5f       	subi	r18, 0xFF	; 255
     c64:	3f 4f       	sbci	r19, 0xFF	; 255
     c66:	40 e0       	ldi	r20, 0x00	; 0
     c68:	54 e2       	ldi	r21, 0x24	; 36
     c6a:	64 e7       	ldi	r22, 0x74	; 116
     c6c:	79 e4       	ldi	r23, 0x49	; 73
     c6e:	c8 01       	movw	r24, r16
     c70:	d1 d6       	rcall	.+3490   	; 0x1a14 <buffer_get_float32>
     c72:	60 93 ac 04 	sts	0x04AC, r22	; 0x8004ac <mcconf+0xe8>
     c76:	70 93 ad 04 	sts	0x04AD, r23	; 0x8004ad <mcconf+0xe9>
     c7a:	80 93 ae 04 	sts	0x04AE, r24	; 0x8004ae <mcconf+0xea>
     c7e:	90 93 af 04 	sts	0x04AF, r25	; 0x8004af <mcconf+0xeb>
     c82:	9e 01       	movw	r18, r28
     c84:	2f 5f       	subi	r18, 0xFF	; 255
     c86:	3f 4f       	sbci	r19, 0xFF	; 255
     c88:	40 e0       	ldi	r20, 0x00	; 0
     c8a:	54 e2       	ldi	r21, 0x24	; 36
     c8c:	64 e7       	ldi	r22, 0x74	; 116
     c8e:	79 e4       	ldi	r23, 0x49	; 73
     c90:	c8 01       	movw	r24, r16
     c92:	c0 d6       	rcall	.+3456   	; 0x1a14 <buffer_get_float32>
     c94:	60 93 b0 04 	sts	0x04B0, r22	; 0x8004b0 <mcconf+0xec>
     c98:	70 93 b1 04 	sts	0x04B1, r23	; 0x8004b1 <mcconf+0xed>
     c9c:	80 93 b2 04 	sts	0x04B2, r24	; 0x8004b2 <mcconf+0xee>
     ca0:	90 93 b3 04 	sts	0x04B3, r25	; 0x8004b3 <mcconf+0xef>
     ca4:	9e 01       	movw	r18, r28
     ca6:	2f 5f       	subi	r18, 0xFF	; 255
     ca8:	3f 4f       	sbci	r19, 0xFF	; 255
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	6a e7       	ldi	r22, 0x7A	; 122
     cb0:	74 e4       	ldi	r23, 0x44	; 68
     cb2:	c8 01       	movw	r24, r16
     cb4:	af d6       	rcall	.+3422   	; 0x1a14 <buffer_get_float32>
     cb6:	60 93 b4 04 	sts	0x04B4, r22	; 0x8004b4 <mcconf+0xf0>
     cba:	70 93 b5 04 	sts	0x04B5, r23	; 0x8004b5 <mcconf+0xf1>
     cbe:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <mcconf+0xf2>
     cc2:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <mcconf+0xf3>
     cc6:	9e 01       	movw	r18, r28
     cc8:	2f 5f       	subi	r18, 0xFF	; 255
     cca:	3f 4f       	sbci	r19, 0xFF	; 255
     ccc:	40 e0       	ldi	r20, 0x00	; 0
     cce:	54 e2       	ldi	r21, 0x24	; 36
     cd0:	64 e7       	ldi	r22, 0x74	; 116
     cd2:	79 e4       	ldi	r23, 0x49	; 73
     cd4:	c8 01       	movw	r24, r16
     cd6:	9e d6       	rcall	.+3388   	; 0x1a14 <buffer_get_float32>
     cd8:	60 93 b8 04 	sts	0x04B8, r22	; 0x8004b8 <mcconf+0xf4>
     cdc:	70 93 b9 04 	sts	0x04B9, r23	; 0x8004b9 <mcconf+0xf5>
     ce0:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <mcconf+0xf6>
     ce4:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <mcconf+0xf7>
     ce8:	9e 01       	movw	r18, r28
     cea:	2f 5f       	subi	r18, 0xFF	; 255
     cec:	3f 4f       	sbci	r19, 0xFF	; 255
     cee:	40 e0       	ldi	r20, 0x00	; 0
     cf0:	54 e2       	ldi	r21, 0x24	; 36
     cf2:	64 e7       	ldi	r22, 0x74	; 116
     cf4:	79 e4       	ldi	r23, 0x49	; 73
     cf6:	c8 01       	movw	r24, r16
     cf8:	8d d6       	rcall	.+3354   	; 0x1a14 <buffer_get_float32>
     cfa:	60 93 bc 04 	sts	0x04BC, r22	; 0x8004bc <mcconf+0xf8>
     cfe:	70 93 bd 04 	sts	0x04BD, r23	; 0x8004bd <mcconf+0xf9>
     d02:	80 93 be 04 	sts	0x04BE, r24	; 0x8004be <mcconf+0xfa>
     d06:	90 93 bf 04 	sts	0x04BF, r25	; 0x8004bf <mcconf+0xfb>
     d0a:	9e 01       	movw	r18, r28
     d0c:	2f 5f       	subi	r18, 0xFF	; 255
     d0e:	3f 4f       	sbci	r19, 0xFF	; 255
     d10:	40 e0       	ldi	r20, 0x00	; 0
     d12:	54 e2       	ldi	r21, 0x24	; 36
     d14:	64 e7       	ldi	r22, 0x74	; 116
     d16:	79 e4       	ldi	r23, 0x49	; 73
     d18:	c8 01       	movw	r24, r16
     d1a:	7c d6       	rcall	.+3320   	; 0x1a14 <buffer_get_float32>
     d1c:	60 93 c0 04 	sts	0x04C0, r22	; 0x8004c0 <mcconf+0xfc>
     d20:	70 93 c1 04 	sts	0x04C1, r23	; 0x8004c1 <mcconf+0xfd>
     d24:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <mcconf+0xfe>
     d28:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <mcconf+0xff>
     d2c:	9e 01       	movw	r18, r28
     d2e:	2f 5f       	subi	r18, 0xFF	; 255
     d30:	3f 4f       	sbci	r19, 0xFF	; 255
     d32:	40 e0       	ldi	r20, 0x00	; 0
     d34:	50 e5       	ldi	r21, 0x50	; 80
     d36:	63 ec       	ldi	r22, 0xC3	; 195
     d38:	77 e4       	ldi	r23, 0x47	; 71
     d3a:	c8 01       	movw	r24, r16
     d3c:	6b d6       	rcall	.+3286   	; 0x1a14 <buffer_get_float32>
     d3e:	60 93 c4 04 	sts	0x04C4, r22	; 0x8004c4 <mcconf+0x100>
     d42:	70 93 c5 04 	sts	0x04C5, r23	; 0x8004c5 <mcconf+0x101>
     d46:	80 93 c6 04 	sts	0x04C6, r24	; 0x8004c6 <mcconf+0x102>
     d4a:	90 93 c7 04 	sts	0x04C7, r25	; 0x8004c7 <mcconf+0x103>
     d4e:	9e 01       	movw	r18, r28
     d50:	2f 5f       	subi	r18, 0xFF	; 255
     d52:	3f 4f       	sbci	r19, 0xFF	; 255
     d54:	40 e0       	ldi	r20, 0x00	; 0
     d56:	54 e2       	ldi	r21, 0x24	; 36
     d58:	64 e7       	ldi	r22, 0x74	; 116
     d5a:	79 e4       	ldi	r23, 0x49	; 73
     d5c:	c8 01       	movw	r24, r16
     d5e:	5a d6       	rcall	.+3252   	; 0x1a14 <buffer_get_float32>
     d60:	60 93 c8 04 	sts	0x04C8, r22	; 0x8004c8 <mcconf+0x104>
     d64:	70 93 c9 04 	sts	0x04C9, r23	; 0x8004c9 <mcconf+0x105>
     d68:	80 93 ca 04 	sts	0x04CA, r24	; 0x8004ca <mcconf+0x106>
     d6c:	90 93 cb 04 	sts	0x04CB, r25	; 0x8004cb <mcconf+0x107>
     d70:	9e 01       	movw	r18, r28
     d72:	2f 5f       	subi	r18, 0xFF	; 255
     d74:	3f 4f       	sbci	r19, 0xFF	; 255
     d76:	40 e0       	ldi	r20, 0x00	; 0
     d78:	50 e0       	ldi	r21, 0x00	; 0
     d7a:	6a e7       	ldi	r22, 0x7A	; 122
     d7c:	74 e4       	ldi	r23, 0x44	; 68
     d7e:	c8 01       	movw	r24, r16
     d80:	49 d6       	rcall	.+3218   	; 0x1a14 <buffer_get_float32>
     d82:	60 93 cc 04 	sts	0x04CC, r22	; 0x8004cc <mcconf+0x108>
     d86:	70 93 cd 04 	sts	0x04CD, r23	; 0x8004cd <mcconf+0x109>
     d8a:	80 93 ce 04 	sts	0x04CE, r24	; 0x8004ce <mcconf+0x10a>
     d8e:	90 93 cf 04 	sts	0x04CF, r25	; 0x8004cf <mcconf+0x10b>
     d92:	9e 01       	movw	r18, r28
     d94:	2f 5f       	subi	r18, 0xFF	; 255
     d96:	3f 4f       	sbci	r19, 0xFF	; 255
     d98:	40 e0       	ldi	r20, 0x00	; 0
     d9a:	54 e2       	ldi	r21, 0x24	; 36
     d9c:	64 e7       	ldi	r22, 0x74	; 116
     d9e:	79 e4       	ldi	r23, 0x49	; 73
     da0:	c8 01       	movw	r24, r16
     da2:	38 d6       	rcall	.+3184   	; 0x1a14 <buffer_get_float32>
     da4:	60 93 d0 04 	sts	0x04D0, r22	; 0x8004d0 <mcconf+0x10c>
     da8:	70 93 d1 04 	sts	0x04D1, r23	; 0x8004d1 <mcconf+0x10d>
     dac:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <mcconf+0x10e>
     db0:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <mcconf+0x10f>
     db4:	9e 01       	movw	r18, r28
     db6:	2f 5f       	subi	r18, 0xFF	; 255
     db8:	3f 4f       	sbci	r19, 0xFF	; 255
     dba:	40 e0       	ldi	r20, 0x00	; 0
     dbc:	54 e2       	ldi	r21, 0x24	; 36
     dbe:	64 e7       	ldi	r22, 0x74	; 116
     dc0:	79 e4       	ldi	r23, 0x49	; 73
     dc2:	c8 01       	movw	r24, r16
     dc4:	27 d6       	rcall	.+3150   	; 0x1a14 <buffer_get_float32>
     dc6:	60 93 d4 04 	sts	0x04D4, r22	; 0x8004d4 <mcconf+0x110>
     dca:	70 93 d5 04 	sts	0x04D5, r23	; 0x8004d5 <mcconf+0x111>
     dce:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <mcconf+0x112>
     dd2:	90 93 d7 04 	sts	0x04D7, r25	; 0x8004d7 <mcconf+0x113>
     dd6:	be 01       	movw	r22, r28
     dd8:	6f 5f       	subi	r22, 0xFF	; 255
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	c8 01       	movw	r24, r16
     dde:	a7 d5       	rcall	.+2894   	; 0x192e <buffer_get_int32>
     de0:	60 93 d8 04 	sts	0x04D8, r22	; 0x8004d8 <mcconf+0x114>
     de4:	70 93 d9 04 	sts	0x04D9, r23	; 0x8004d9 <mcconf+0x115>
     de8:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <mcconf+0x116>
     dec:	90 93 db 04 	sts	0x04DB, r25	; 0x8004db <mcconf+0x117>
     df0:	9e 01       	movw	r18, r28
     df2:	2f 5f       	subi	r18, 0xFF	; 255
     df4:	3f 4f       	sbci	r19, 0xFF	; 255
     df6:	40 e0       	ldi	r20, 0x00	; 0
     df8:	54 e2       	ldi	r21, 0x24	; 36
     dfa:	64 e7       	ldi	r22, 0x74	; 116
     dfc:	79 e4       	ldi	r23, 0x49	; 73
     dfe:	c8 01       	movw	r24, r16
     e00:	09 d6       	rcall	.+3090   	; 0x1a14 <buffer_get_float32>
     e02:	60 93 dc 04 	sts	0x04DC, r22	; 0x8004dc <mcconf+0x118>
     e06:	70 93 dd 04 	sts	0x04DD, r23	; 0x8004dd <mcconf+0x119>
     e0a:	80 93 de 04 	sts	0x04DE, r24	; 0x8004de <mcconf+0x11a>
     e0e:	90 93 df 04 	sts	0x04DF, r25	; 0x8004df <mcconf+0x11b>
     e12:	9e 01       	movw	r18, r28
     e14:	2f 5f       	subi	r18, 0xFF	; 255
     e16:	3f 4f       	sbci	r19, 0xFF	; 255
     e18:	40 e0       	ldi	r20, 0x00	; 0
     e1a:	54 e2       	ldi	r21, 0x24	; 36
     e1c:	64 e7       	ldi	r22, 0x74	; 116
     e1e:	79 e4       	ldi	r23, 0x49	; 73
     e20:	c8 01       	movw	r24, r16
     e22:	f8 d5       	rcall	.+3056   	; 0x1a14 <buffer_get_float32>
     e24:	60 93 e0 04 	sts	0x04E0, r22	; 0x8004e0 <mcconf+0x11c>
     e28:	70 93 e1 04 	sts	0x04E1, r23	; 0x8004e1 <mcconf+0x11d>
     e2c:	80 93 e2 04 	sts	0x04E2, r24	; 0x8004e2 <mcconf+0x11e>
     e30:	90 93 e3 04 	sts	0x04E3, r25	; 0x8004e3 <mcconf+0x11f>
     e34:	9e 01       	movw	r18, r28
     e36:	2f 5f       	subi	r18, 0xFF	; 255
     e38:	3f 4f       	sbci	r19, 0xFF	; 255
     e3a:	40 e0       	ldi	r20, 0x00	; 0
     e3c:	54 e2       	ldi	r21, 0x24	; 36
     e3e:	64 e7       	ldi	r22, 0x74	; 116
     e40:	79 e4       	ldi	r23, 0x49	; 73
     e42:	c8 01       	movw	r24, r16
     e44:	e7 d5       	rcall	.+3022   	; 0x1a14 <buffer_get_float32>
     e46:	60 93 e4 04 	sts	0x04E4, r22	; 0x8004e4 <mcconf+0x120>
     e4a:	70 93 e5 04 	sts	0x04E5, r23	; 0x8004e5 <mcconf+0x121>
     e4e:	80 93 e6 04 	sts	0x04E6, r24	; 0x8004e6 <mcconf+0x122>
     e52:	90 93 e7 04 	sts	0x04E7, r25	; 0x8004e7 <mcconf+0x123>
     e56:	be 01       	movw	r22, r28
     e58:	6f 5f       	subi	r22, 0xFF	; 255
     e5a:	7f 4f       	sbci	r23, 0xFF	; 255
     e5c:	c8 01       	movw	r24, r16
     e5e:	96 d5       	rcall	.+2860   	; 0x198c <buffer_get_uint32>
     e60:	60 93 e8 04 	sts	0x04E8, r22	; 0x8004e8 <mcconf+0x124>
     e64:	70 93 e9 04 	sts	0x04E9, r23	; 0x8004e9 <mcconf+0x125>
     e68:	80 93 ea 04 	sts	0x04EA, r24	; 0x8004ea <mcconf+0x126>
     e6c:	90 93 eb 04 	sts	0x04EB, r25	; 0x8004eb <mcconf+0x127>
     e70:	e0 91 12 03 	lds	r30, 0x0312	; 0x800312 <rx_mcconf_func>
     e74:	f0 91 13 03 	lds	r31, 0x0313	; 0x800313 <rx_mcconf_func+0x1>
     e78:	30 97       	sbiw	r30, 0x00	; 0
     e7a:	09 f4       	brne	.+2      	; 0xe7e <__LOCK_REGION_LENGTH__+0xa7e>
     e7c:	5b c4       	rjmp	.+2230   	; 0x1734 <__stack+0x635>
     e7e:	84 ec       	ldi	r24, 0xC4	; 196
     e80:	93 e0       	ldi	r25, 0x03	; 3
     e82:	09 95       	icall
     e84:	57 c4       	rjmp	.+2222   	; 0x1734 <__stack+0x635>
     e86:	81 e0       	ldi	r24, 0x01	; 1
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	a0 e0       	ldi	r26, 0x00	; 0
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	89 83       	std	Y+1, r24	; 0x01
     e90:	9a 83       	std	Y+2, r25	; 0x02
     e92:	ab 83       	std	Y+3, r26	; 0x03
     e94:	bc 83       	std	Y+4, r27	; 0x04
     e96:	0f 2e       	mov	r0, r31
     e98:	f3 e4       	ldi	r31, 0x43	; 67
     e9a:	cf 2e       	mov	r12, r31
     e9c:	f3 e0       	ldi	r31, 0x03	; 3
     e9e:	df 2e       	mov	r13, r31
     ea0:	f0 2d       	mov	r31, r0
     ea2:	d7 01       	movw	r26, r14
     ea4:	11 96       	adiw	r26, 0x01	; 1
     ea6:	8c 91       	ld	r24, X
     ea8:	f6 01       	movw	r30, r12
     eaa:	80 83       	st	Z, r24
     eac:	be 01       	movw	r22, r28
     eae:	6f 5f       	subi	r22, 0xFF	; 255
     eb0:	7f 4f       	sbci	r23, 0xFF	; 255
     eb2:	c8 01       	movw	r24, r16
     eb4:	6b d5       	rcall	.+2774   	; 0x198c <buffer_get_uint32>
     eb6:	d6 01       	movw	r26, r12
     eb8:	11 96       	adiw	r26, 0x01	; 1
     eba:	6d 93       	st	X+, r22
     ebc:	7d 93       	st	X+, r23
     ebe:	8d 93       	st	X+, r24
     ec0:	9c 93       	st	X, r25
     ec2:	14 97       	sbiw	r26, 0x04	; 4
     ec4:	9e 01       	movw	r18, r28
     ec6:	2f 5f       	subi	r18, 0xFF	; 255
     ec8:	3f 4f       	sbci	r19, 0xFF	; 255
     eca:	40 e0       	ldi	r20, 0x00	; 0
     ecc:	50 e0       	ldi	r21, 0x00	; 0
     ece:	6a e7       	ldi	r22, 0x7A	; 122
     ed0:	74 e4       	ldi	r23, 0x44	; 68
     ed2:	c8 01       	movw	r24, r16
     ed4:	9f d5       	rcall	.+2878   	; 0x1a14 <buffer_get_float32>
     ed6:	f6 01       	movw	r30, r12
     ed8:	65 83       	std	Z+5, r22	; 0x05
     eda:	76 83       	std	Z+6, r23	; 0x06
     edc:	87 83       	std	Z+7, r24	; 0x07
     ede:	90 87       	std	Z+8, r25	; 0x08
     ee0:	89 81       	ldd	r24, Y+1	; 0x01
     ee2:	9a 81       	ldd	r25, Y+2	; 0x02
     ee4:	ab 81       	ldd	r26, Y+3	; 0x03
     ee6:	bc 81       	ldd	r27, Y+4	; 0x04
     ee8:	ac 01       	movw	r20, r24
     eea:	bd 01       	movw	r22, r26
     eec:	4f 5f       	subi	r20, 0xFF	; 255
     eee:	5f 4f       	sbci	r21, 0xFF	; 255
     ef0:	6f 4f       	sbci	r22, 0xFF	; 255
     ef2:	7f 4f       	sbci	r23, 0xFF	; 255
     ef4:	49 83       	std	Y+1, r20	; 0x01
     ef6:	5a 83       	std	Y+2, r21	; 0x02
     ef8:	6b 83       	std	Y+3, r22	; 0x03
     efa:	7c 83       	std	Y+4, r23	; 0x04
     efc:	f8 01       	movw	r30, r16
     efe:	e8 0f       	add	r30, r24
     f00:	f9 1f       	adc	r31, r25
     f02:	21 e0       	ldi	r18, 0x01	; 1
     f04:	80 81       	ld	r24, Z
     f06:	81 11       	cpse	r24, r1
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <__LOCK_REGION_LENGTH__+0xb0c>
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	20 93 4c 03 	sts	0x034C, r18	; 0x80034c <appconf+0x9>
     f10:	be 01       	movw	r22, r28
     f12:	6f 5f       	subi	r22, 0xFF	; 255
     f14:	7f 4f       	sbci	r23, 0xFF	; 255
     f16:	c8 01       	movw	r24, r16
     f18:	f3 d4       	rcall	.+2534   	; 0x1900 <buffer_get_uint16>
     f1a:	0f 2e       	mov	r0, r31
     f1c:	f3 e4       	ldi	r31, 0x43	; 67
     f1e:	ef 2e       	mov	r14, r31
     f20:	f3 e0       	ldi	r31, 0x03	; 3
     f22:	ff 2e       	mov	r15, r31
     f24:	f0 2d       	mov	r31, r0
     f26:	a0 e0       	ldi	r26, 0x00	; 0
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	f7 01       	movw	r30, r14
     f2c:	82 87       	std	Z+10, r24	; 0x0a
     f2e:	93 87       	std	Z+11, r25	; 0x0b
     f30:	a4 87       	std	Z+12, r26	; 0x0c
     f32:	b5 87       	std	Z+13, r27	; 0x0d
     f34:	89 81       	ldd	r24, Y+1	; 0x01
     f36:	9a 81       	ldd	r25, Y+2	; 0x02
     f38:	ab 81       	ldd	r26, Y+3	; 0x03
     f3a:	bc 81       	ldd	r27, Y+4	; 0x04
     f3c:	f8 01       	movw	r30, r16
     f3e:	e8 0f       	add	r30, r24
     f40:	f9 1f       	adc	r31, r25
     f42:	20 81       	ld	r18, Z
     f44:	f7 01       	movw	r30, r14
     f46:	26 87       	std	Z+14, r18	; 0x0e
     f48:	ac 01       	movw	r20, r24
     f4a:	bd 01       	movw	r22, r26
     f4c:	4e 5f       	subi	r20, 0xFE	; 254
     f4e:	5f 4f       	sbci	r21, 0xFF	; 255
     f50:	6f 4f       	sbci	r22, 0xFF	; 255
     f52:	7f 4f       	sbci	r23, 0xFF	; 255
     f54:	49 83       	std	Y+1, r20	; 0x01
     f56:	5a 83       	std	Y+2, r21	; 0x02
     f58:	6b 83       	std	Y+3, r22	; 0x03
     f5a:	7c 83       	std	Y+4, r23	; 0x04
     f5c:	01 96       	adiw	r24, 0x01	; 1
     f5e:	a1 1d       	adc	r26, r1
     f60:	b1 1d       	adc	r27, r1
     f62:	f8 01       	movw	r30, r16
     f64:	e8 0f       	add	r30, r24
     f66:	f9 1f       	adc	r31, r25
     f68:	80 81       	ld	r24, Z
     f6a:	d7 01       	movw	r26, r14
     f6c:	1f 96       	adiw	r26, 0x0f	; 15
     f6e:	8c 93       	st	X, r24
     f70:	9e 01       	movw	r18, r28
     f72:	2f 5f       	subi	r18, 0xFF	; 255
     f74:	3f 4f       	sbci	r19, 0xFF	; 255
     f76:	40 e0       	ldi	r20, 0x00	; 0
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	6a e7       	ldi	r22, 0x7A	; 122
     f7c:	74 e4       	ldi	r23, 0x44	; 68
     f7e:	c8 01       	movw	r24, r16
     f80:	49 d5       	rcall	.+2706   	; 0x1a14 <buffer_get_float32>
     f82:	f7 01       	movw	r30, r14
     f84:	60 8b       	std	Z+16, r22	; 0x10
     f86:	71 8b       	std	Z+17, r23	; 0x11
     f88:	82 8b       	std	Z+18, r24	; 0x12
     f8a:	93 8b       	std	Z+19, r25	; 0x13
     f8c:	9e 01       	movw	r18, r28
     f8e:	2f 5f       	subi	r18, 0xFF	; 255
     f90:	3f 4f       	sbci	r19, 0xFF	; 255
     f92:	40 e0       	ldi	r20, 0x00	; 0
     f94:	50 e0       	ldi	r21, 0x00	; 0
     f96:	6a e7       	ldi	r22, 0x7A	; 122
     f98:	74 e4       	ldi	r23, 0x44	; 68
     f9a:	c8 01       	movw	r24, r16
     f9c:	3b d5       	rcall	.+2678   	; 0x1a14 <buffer_get_float32>
     f9e:	d7 01       	movw	r26, r14
     fa0:	54 96       	adiw	r26, 0x14	; 20
     fa2:	6d 93       	st	X+, r22
     fa4:	7d 93       	st	X+, r23
     fa6:	8d 93       	st	X+, r24
     fa8:	9c 93       	st	X, r25
     faa:	57 97       	sbiw	r26, 0x17	; 23
     fac:	9e 01       	movw	r18, r28
     fae:	2f 5f       	subi	r18, 0xFF	; 255
     fb0:	3f 4f       	sbci	r19, 0xFF	; 255
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	50 e0       	ldi	r21, 0x00	; 0
     fb6:	6a e7       	ldi	r22, 0x7A	; 122
     fb8:	74 e4       	ldi	r23, 0x44	; 68
     fba:	c8 01       	movw	r24, r16
     fbc:	2b d5       	rcall	.+2646   	; 0x1a14 <buffer_get_float32>
     fbe:	f7 01       	movw	r30, r14
     fc0:	60 8f       	std	Z+24, r22	; 0x18
     fc2:	71 8f       	std	Z+25, r23	; 0x19
     fc4:	82 8f       	std	Z+26, r24	; 0x1a
     fc6:	93 8f       	std	Z+27, r25	; 0x1b
     fc8:	9e 01       	movw	r18, r28
     fca:	2f 5f       	subi	r18, 0xFF	; 255
     fcc:	3f 4f       	sbci	r19, 0xFF	; 255
     fce:	40 e0       	ldi	r20, 0x00	; 0
     fd0:	50 e0       	ldi	r21, 0x00	; 0
     fd2:	6a e7       	ldi	r22, 0x7A	; 122
     fd4:	74 e4       	ldi	r23, 0x44	; 68
     fd6:	c8 01       	movw	r24, r16
     fd8:	1d d5       	rcall	.+2618   	; 0x1a14 <buffer_get_float32>
     fda:	d7 01       	movw	r26, r14
     fdc:	5c 96       	adiw	r26, 0x1c	; 28
     fde:	6d 93       	st	X+, r22
     fe0:	7d 93       	st	X+, r23
     fe2:	8d 93       	st	X+, r24
     fe4:	9c 93       	st	X, r25
     fe6:	5f 97       	sbiw	r26, 0x1f	; 31
     fe8:	89 81       	ldd	r24, Y+1	; 0x01
     fea:	9a 81       	ldd	r25, Y+2	; 0x02
     fec:	ab 81       	ldd	r26, Y+3	; 0x03
     fee:	bc 81       	ldd	r27, Y+4	; 0x04
     ff0:	f8 01       	movw	r30, r16
     ff2:	e8 0f       	add	r30, r24
     ff4:	f9 1f       	adc	r31, r25
     ff6:	21 e0       	ldi	r18, 0x01	; 1
     ff8:	30 81       	ld	r19, Z
     ffa:	31 11       	cpse	r19, r1
     ffc:	01 c0       	rjmp	.+2      	; 0x1000 <__LOCK_REGION_LENGTH__+0xc00>
     ffe:	20 e0       	ldi	r18, 0x00	; 0
    1000:	20 93 63 03 	sts	0x0363, r18	; 0x800363 <appconf+0x20>
    1004:	ac 01       	movw	r20, r24
    1006:	bd 01       	movw	r22, r26
    1008:	4e 5f       	subi	r20, 0xFE	; 254
    100a:	5f 4f       	sbci	r21, 0xFF	; 255
    100c:	6f 4f       	sbci	r22, 0xFF	; 255
    100e:	7f 4f       	sbci	r23, 0xFF	; 255
    1010:	49 83       	std	Y+1, r20	; 0x01
    1012:	5a 83       	std	Y+2, r21	; 0x02
    1014:	6b 83       	std	Y+3, r22	; 0x03
    1016:	7c 83       	std	Y+4, r23	; 0x04
    1018:	01 96       	adiw	r24, 0x01	; 1
    101a:	a1 1d       	adc	r26, r1
    101c:	b1 1d       	adc	r27, r1
    101e:	f8 01       	movw	r30, r16
    1020:	e8 0f       	add	r30, r24
    1022:	f9 1f       	adc	r31, r25
    1024:	21 e0       	ldi	r18, 0x01	; 1
    1026:	80 81       	ld	r24, Z
    1028:	81 11       	cpse	r24, r1
    102a:	01 c0       	rjmp	.+2      	; 0x102e <__LOCK_REGION_LENGTH__+0xc2e>
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	20 93 64 03 	sts	0x0364, r18	; 0x800364 <appconf+0x21>
    1032:	9e 01       	movw	r18, r28
    1034:	2f 5f       	subi	r18, 0xFF	; 255
    1036:	3f 4f       	sbci	r19, 0xFF	; 255
    1038:	40 e0       	ldi	r20, 0x00	; 0
    103a:	50 e0       	ldi	r21, 0x00	; 0
    103c:	6a e7       	ldi	r22, 0x7A	; 122
    103e:	74 e4       	ldi	r23, 0x44	; 68
    1040:	c8 01       	movw	r24, r16
    1042:	e8 d4       	rcall	.+2512   	; 0x1a14 <buffer_get_float32>
    1044:	0f 2e       	mov	r0, r31
    1046:	f3 e4       	ldi	r31, 0x43	; 67
    1048:	ef 2e       	mov	r14, r31
    104a:	f3 e0       	ldi	r31, 0x03	; 3
    104c:	ff 2e       	mov	r15, r31
    104e:	f0 2d       	mov	r31, r0
    1050:	f7 01       	movw	r30, r14
    1052:	62 a3       	std	Z+34, r22	; 0x22
    1054:	73 a3       	std	Z+35, r23	; 0x23
    1056:	84 a3       	std	Z+36, r24	; 0x24
    1058:	95 a3       	std	Z+37, r25	; 0x25
    105a:	9e 01       	movw	r18, r28
    105c:	2f 5f       	subi	r18, 0xFF	; 255
    105e:	3f 4f       	sbci	r19, 0xFF	; 255
    1060:	40 e0       	ldi	r20, 0x00	; 0
    1062:	50 e0       	ldi	r21, 0x00	; 0
    1064:	6a e7       	ldi	r22, 0x7A	; 122
    1066:	74 e4       	ldi	r23, 0x44	; 68
    1068:	c8 01       	movw	r24, r16
    106a:	d4 d4       	rcall	.+2472   	; 0x1a14 <buffer_get_float32>
    106c:	d7 01       	movw	r26, r14
    106e:	96 96       	adiw	r26, 0x26	; 38
    1070:	6d 93       	st	X+, r22
    1072:	7d 93       	st	X+, r23
    1074:	8d 93       	st	X+, r24
    1076:	9c 93       	st	X, r25
    1078:	99 97       	sbiw	r26, 0x29	; 41
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	9a 81       	ldd	r25, Y+2	; 0x02
    107e:	ab 81       	ldd	r26, Y+3	; 0x03
    1080:	bc 81       	ldd	r27, Y+4	; 0x04
    1082:	f8 01       	movw	r30, r16
    1084:	e8 0f       	add	r30, r24
    1086:	f9 1f       	adc	r31, r25
    1088:	21 e0       	ldi	r18, 0x01	; 1
    108a:	30 81       	ld	r19, Z
    108c:	31 11       	cpse	r19, r1
    108e:	01 c0       	rjmp	.+2      	; 0x1092 <__LOCK_REGION_LENGTH__+0xc92>
    1090:	20 e0       	ldi	r18, 0x00	; 0
    1092:	20 93 6d 03 	sts	0x036D, r18	; 0x80036d <appconf+0x2a>
    1096:	ac 01       	movw	r20, r24
    1098:	bd 01       	movw	r22, r26
    109a:	4e 5f       	subi	r20, 0xFE	; 254
    109c:	5f 4f       	sbci	r21, 0xFF	; 255
    109e:	6f 4f       	sbci	r22, 0xFF	; 255
    10a0:	7f 4f       	sbci	r23, 0xFF	; 255
    10a2:	49 83       	std	Y+1, r20	; 0x01
    10a4:	5a 83       	std	Y+2, r21	; 0x02
    10a6:	6b 83       	std	Y+3, r22	; 0x03
    10a8:	7c 83       	std	Y+4, r23	; 0x04
    10aa:	01 96       	adiw	r24, 0x01	; 1
    10ac:	a1 1d       	adc	r26, r1
    10ae:	b1 1d       	adc	r27, r1
    10b0:	f8 01       	movw	r30, r16
    10b2:	e8 0f       	add	r30, r24
    10b4:	f9 1f       	adc	r31, r25
    10b6:	21 e0       	ldi	r18, 0x01	; 1
    10b8:	80 81       	ld	r24, Z
    10ba:	81 11       	cpse	r24, r1
    10bc:	01 c0       	rjmp	.+2      	; 0x10c0 <__LOCK_REGION_LENGTH__+0xcc0>
    10be:	20 e0       	ldi	r18, 0x00	; 0
    10c0:	20 93 6e 03 	sts	0x036E, r18	; 0x80036e <appconf+0x2b>
    10c4:	9e 01       	movw	r18, r28
    10c6:	2f 5f       	subi	r18, 0xFF	; 255
    10c8:	3f 4f       	sbci	r19, 0xFF	; 255
    10ca:	40 e0       	ldi	r20, 0x00	; 0
    10cc:	50 e0       	ldi	r21, 0x00	; 0
    10ce:	6a e7       	ldi	r22, 0x7A	; 122
    10d0:	74 e4       	ldi	r23, 0x44	; 68
    10d2:	c8 01       	movw	r24, r16
    10d4:	9f d4       	rcall	.+2366   	; 0x1a14 <buffer_get_float32>
    10d6:	0f 2e       	mov	r0, r31
    10d8:	f3 e4       	ldi	r31, 0x43	; 67
    10da:	ef 2e       	mov	r14, r31
    10dc:	f3 e0       	ldi	r31, 0x03	; 3
    10de:	ff 2e       	mov	r15, r31
    10e0:	f0 2d       	mov	r31, r0
    10e2:	f7 01       	movw	r30, r14
    10e4:	64 a7       	std	Z+44, r22	; 0x2c
    10e6:	75 a7       	std	Z+45, r23	; 0x2d
    10e8:	86 a7       	std	Z+46, r24	; 0x2e
    10ea:	97 a7       	std	Z+47, r25	; 0x2f
    10ec:	89 81       	ldd	r24, Y+1	; 0x01
    10ee:	9a 81       	ldd	r25, Y+2	; 0x02
    10f0:	ab 81       	ldd	r26, Y+3	; 0x03
    10f2:	bc 81       	ldd	r27, Y+4	; 0x04
    10f4:	ac 01       	movw	r20, r24
    10f6:	bd 01       	movw	r22, r26
    10f8:	4f 5f       	subi	r20, 0xFF	; 255
    10fa:	5f 4f       	sbci	r21, 0xFF	; 255
    10fc:	6f 4f       	sbci	r22, 0xFF	; 255
    10fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1100:	49 83       	std	Y+1, r20	; 0x01
    1102:	5a 83       	std	Y+2, r21	; 0x02
    1104:	6b 83       	std	Y+3, r22	; 0x03
    1106:	7c 83       	std	Y+4, r23	; 0x04
    1108:	f8 01       	movw	r30, r16
    110a:	e8 0f       	add	r30, r24
    110c:	f9 1f       	adc	r31, r25
    110e:	80 81       	ld	r24, Z
    1110:	d7 01       	movw	r26, r14
    1112:	d0 96       	adiw	r26, 0x30	; 48
    1114:	8c 93       	st	X, r24
    1116:	9e 01       	movw	r18, r28
    1118:	2f 5f       	subi	r18, 0xFF	; 255
    111a:	3f 4f       	sbci	r19, 0xFF	; 255
    111c:	40 e0       	ldi	r20, 0x00	; 0
    111e:	50 e0       	ldi	r21, 0x00	; 0
    1120:	6a e7       	ldi	r22, 0x7A	; 122
    1122:	74 e4       	ldi	r23, 0x44	; 68
    1124:	c8 01       	movw	r24, r16
    1126:	76 d4       	rcall	.+2284   	; 0x1a14 <buffer_get_float32>
    1128:	f7 01       	movw	r30, r14
    112a:	61 ab       	std	Z+49, r22	; 0x31
    112c:	72 ab       	std	Z+50, r23	; 0x32
    112e:	83 ab       	std	Z+51, r24	; 0x33
    1130:	94 ab       	std	Z+52, r25	; 0x34
    1132:	9e 01       	movw	r18, r28
    1134:	2f 5f       	subi	r18, 0xFF	; 255
    1136:	3f 4f       	sbci	r19, 0xFF	; 255
    1138:	40 e0       	ldi	r20, 0x00	; 0
    113a:	50 e0       	ldi	r21, 0x00	; 0
    113c:	6a e7       	ldi	r22, 0x7A	; 122
    113e:	74 e4       	ldi	r23, 0x44	; 68
    1140:	c8 01       	movw	r24, r16
    1142:	68 d4       	rcall	.+2256   	; 0x1a14 <buffer_get_float32>
    1144:	d7 01       	movw	r26, r14
    1146:	d5 96       	adiw	r26, 0x35	; 53
    1148:	6d 93       	st	X+, r22
    114a:	7d 93       	st	X+, r23
    114c:	8d 93       	st	X+, r24
    114e:	9c 93       	st	X, r25
    1150:	d8 97       	sbiw	r26, 0x38	; 56
    1152:	9e 01       	movw	r18, r28
    1154:	2f 5f       	subi	r18, 0xFF	; 255
    1156:	3f 4f       	sbci	r19, 0xFF	; 255
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	50 e0       	ldi	r21, 0x00	; 0
    115c:	6a e7       	ldi	r22, 0x7A	; 122
    115e:	74 e4       	ldi	r23, 0x44	; 68
    1160:	c8 01       	movw	r24, r16
    1162:	58 d4       	rcall	.+2224   	; 0x1a14 <buffer_get_float32>
    1164:	f7 01       	movw	r30, r14
    1166:	61 af       	std	Z+57, r22	; 0x39
    1168:	72 af       	std	Z+58, r23	; 0x3a
    116a:	83 af       	std	Z+59, r24	; 0x3b
    116c:	94 af       	std	Z+60, r25	; 0x3c
    116e:	89 81       	ldd	r24, Y+1	; 0x01
    1170:	9a 81       	ldd	r25, Y+2	; 0x02
    1172:	ab 81       	ldd	r26, Y+3	; 0x03
    1174:	bc 81       	ldd	r27, Y+4	; 0x04
    1176:	f8 01       	movw	r30, r16
    1178:	e8 0f       	add	r30, r24
    117a:	f9 1f       	adc	r31, r25
    117c:	21 e0       	ldi	r18, 0x01	; 1
    117e:	30 81       	ld	r19, Z
    1180:	31 11       	cpse	r19, r1
    1182:	01 c0       	rjmp	.+2      	; 0x1186 <__stack+0x87>
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	20 93 80 03 	sts	0x0380, r18	; 0x800380 <appconf+0x3d>
    118a:	ac 01       	movw	r20, r24
    118c:	bd 01       	movw	r22, r26
    118e:	4f 5f       	subi	r20, 0xFF	; 255
    1190:	5f 4f       	sbci	r21, 0xFF	; 255
    1192:	6f 4f       	sbci	r22, 0xFF	; 255
    1194:	7f 4f       	sbci	r23, 0xFF	; 255
    1196:	f8 01       	movw	r30, r16
    1198:	e4 0f       	add	r30, r20
    119a:	f5 1f       	adc	r31, r21
    119c:	21 e0       	ldi	r18, 0x01	; 1
    119e:	30 81       	ld	r19, Z
    11a0:	31 11       	cpse	r19, r1
    11a2:	01 c0       	rjmp	.+2      	; 0x11a6 <__stack+0xa7>
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	20 93 81 03 	sts	0x0381, r18	; 0x800381 <appconf+0x3e>
    11aa:	ac 01       	movw	r20, r24
    11ac:	bd 01       	movw	r22, r26
    11ae:	4e 5f       	subi	r20, 0xFE	; 254
    11b0:	5f 4f       	sbci	r21, 0xFF	; 255
    11b2:	6f 4f       	sbci	r22, 0xFF	; 255
    11b4:	7f 4f       	sbci	r23, 0xFF	; 255
    11b6:	f8 01       	movw	r30, r16
    11b8:	e4 0f       	add	r30, r20
    11ba:	f5 1f       	adc	r31, r21
    11bc:	21 e0       	ldi	r18, 0x01	; 1
    11be:	30 81       	ld	r19, Z
    11c0:	31 11       	cpse	r19, r1
    11c2:	01 c0       	rjmp	.+2      	; 0x11c6 <__stack+0xc7>
    11c4:	20 e0       	ldi	r18, 0x00	; 0
    11c6:	20 93 82 03 	sts	0x0382, r18	; 0x800382 <appconf+0x3f>
    11ca:	ac 01       	movw	r20, r24
    11cc:	bd 01       	movw	r22, r26
    11ce:	4d 5f       	subi	r20, 0xFD	; 253
    11d0:	5f 4f       	sbci	r21, 0xFF	; 255
    11d2:	6f 4f       	sbci	r22, 0xFF	; 255
    11d4:	7f 4f       	sbci	r23, 0xFF	; 255
    11d6:	f8 01       	movw	r30, r16
    11d8:	e4 0f       	add	r30, r20
    11da:	f5 1f       	adc	r31, r21
    11dc:	21 e0       	ldi	r18, 0x01	; 1
    11de:	30 81       	ld	r19, Z
    11e0:	31 11       	cpse	r19, r1
    11e2:	01 c0       	rjmp	.+2      	; 0x11e6 <__stack+0xe7>
    11e4:	20 e0       	ldi	r18, 0x00	; 0
    11e6:	20 93 83 03 	sts	0x0383, r18	; 0x800383 <appconf+0x40>
    11ea:	ac 01       	movw	r20, r24
    11ec:	bd 01       	movw	r22, r26
    11ee:	4b 5f       	subi	r20, 0xFB	; 251
    11f0:	5f 4f       	sbci	r21, 0xFF	; 255
    11f2:	6f 4f       	sbci	r22, 0xFF	; 255
    11f4:	7f 4f       	sbci	r23, 0xFF	; 255
    11f6:	49 83       	std	Y+1, r20	; 0x01
    11f8:	5a 83       	std	Y+2, r21	; 0x02
    11fa:	6b 83       	std	Y+3, r22	; 0x03
    11fc:	7c 83       	std	Y+4, r23	; 0x04
    11fe:	04 96       	adiw	r24, 0x04	; 4
    1200:	a1 1d       	adc	r26, r1
    1202:	b1 1d       	adc	r27, r1
    1204:	f8 01       	movw	r30, r16
    1206:	e8 0f       	add	r30, r24
    1208:	f9 1f       	adc	r31, r25
    120a:	21 e0       	ldi	r18, 0x01	; 1
    120c:	80 81       	ld	r24, Z
    120e:	81 11       	cpse	r24, r1
    1210:	01 c0       	rjmp	.+2      	; 0x1214 <__stack+0x115>
    1212:	20 e0       	ldi	r18, 0x00	; 0
    1214:	20 93 84 03 	sts	0x0384, r18	; 0x800384 <appconf+0x41>
    1218:	9e 01       	movw	r18, r28
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	40 e0       	ldi	r20, 0x00	; 0
    1220:	50 e0       	ldi	r21, 0x00	; 0
    1222:	6a e7       	ldi	r22, 0x7A	; 122
    1224:	74 e4       	ldi	r23, 0x44	; 68
    1226:	c8 01       	movw	r24, r16
    1228:	f5 d3       	rcall	.+2026   	; 0x1a14 <buffer_get_float32>
    122a:	60 93 85 03 	sts	0x0385, r22	; 0x800385 <appconf+0x42>
    122e:	70 93 86 03 	sts	0x0386, r23	; 0x800386 <appconf+0x43>
    1232:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <appconf+0x44>
    1236:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <appconf+0x45>
    123a:	9e 01       	movw	r18, r28
    123c:	2f 5f       	subi	r18, 0xFF	; 255
    123e:	3f 4f       	sbci	r19, 0xFF	; 255
    1240:	40 e0       	ldi	r20, 0x00	; 0
    1242:	50 e0       	ldi	r21, 0x00	; 0
    1244:	6a e7       	ldi	r22, 0x7A	; 122
    1246:	74 e4       	ldi	r23, 0x44	; 68
    1248:	c8 01       	movw	r24, r16
    124a:	e4 d3       	rcall	.+1992   	; 0x1a14 <buffer_get_float32>
    124c:	60 93 89 03 	sts	0x0389, r22	; 0x800389 <appconf+0x46>
    1250:	70 93 8a 03 	sts	0x038A, r23	; 0x80038a <appconf+0x47>
    1254:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <appconf+0x48>
    1258:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <appconf+0x49>
    125c:	89 81       	ldd	r24, Y+1	; 0x01
    125e:	9a 81       	ldd	r25, Y+2	; 0x02
    1260:	ab 81       	ldd	r26, Y+3	; 0x03
    1262:	bc 81       	ldd	r27, Y+4	; 0x04
    1264:	f8 01       	movw	r30, r16
    1266:	e8 0f       	add	r30, r24
    1268:	f9 1f       	adc	r31, r25
    126a:	21 e0       	ldi	r18, 0x01	; 1
    126c:	30 81       	ld	r19, Z
    126e:	31 11       	cpse	r19, r1
    1270:	01 c0       	rjmp	.+2      	; 0x1274 <__stack+0x175>
    1272:	20 e0       	ldi	r18, 0x00	; 0
    1274:	20 93 8d 03 	sts	0x038D, r18	; 0x80038d <appconf+0x4a>
    1278:	ac 01       	movw	r20, r24
    127a:	bd 01       	movw	r22, r26
    127c:	4e 5f       	subi	r20, 0xFE	; 254
    127e:	5f 4f       	sbci	r21, 0xFF	; 255
    1280:	6f 4f       	sbci	r22, 0xFF	; 255
    1282:	7f 4f       	sbci	r23, 0xFF	; 255
    1284:	49 83       	std	Y+1, r20	; 0x01
    1286:	5a 83       	std	Y+2, r21	; 0x02
    1288:	6b 83       	std	Y+3, r22	; 0x03
    128a:	7c 83       	std	Y+4, r23	; 0x04
    128c:	01 96       	adiw	r24, 0x01	; 1
    128e:	a1 1d       	adc	r26, r1
    1290:	b1 1d       	adc	r27, r1
    1292:	f8 01       	movw	r30, r16
    1294:	e8 0f       	add	r30, r24
    1296:	f9 1f       	adc	r31, r25
    1298:	21 e0       	ldi	r18, 0x01	; 1
    129a:	80 81       	ld	r24, Z
    129c:	81 11       	cpse	r24, r1
    129e:	01 c0       	rjmp	.+2      	; 0x12a2 <__stack+0x1a3>
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	20 93 8e 03 	sts	0x038E, r18	; 0x80038e <appconf+0x4b>
    12a6:	9e 01       	movw	r18, r28
    12a8:	2f 5f       	subi	r18, 0xFF	; 255
    12aa:	3f 4f       	sbci	r19, 0xFF	; 255
    12ac:	40 e0       	ldi	r20, 0x00	; 0
    12ae:	50 e0       	ldi	r21, 0x00	; 0
    12b0:	6a e7       	ldi	r22, 0x7A	; 122
    12b2:	74 e4       	ldi	r23, 0x44	; 68
    12b4:	c8 01       	movw	r24, r16
    12b6:	ae d3       	rcall	.+1884   	; 0x1a14 <buffer_get_float32>
    12b8:	60 93 8f 03 	sts	0x038F, r22	; 0x80038f <appconf+0x4c>
    12bc:	70 93 90 03 	sts	0x0390, r23	; 0x800390 <appconf+0x4d>
    12c0:	80 93 91 03 	sts	0x0391, r24	; 0x800391 <appconf+0x4e>
    12c4:	90 93 92 03 	sts	0x0392, r25	; 0x800392 <appconf+0x4f>
    12c8:	be 01       	movw	r22, r28
    12ca:	6f 5f       	subi	r22, 0xFF	; 255
    12cc:	7f 4f       	sbci	r23, 0xFF	; 255
    12ce:	c8 01       	movw	r24, r16
    12d0:	17 d3       	rcall	.+1582   	; 0x1900 <buffer_get_uint16>
    12d2:	a0 e0       	ldi	r26, 0x00	; 0
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	80 93 93 03 	sts	0x0393, r24	; 0x800393 <appconf+0x50>
    12da:	90 93 94 03 	sts	0x0394, r25	; 0x800394 <appconf+0x51>
    12de:	a0 93 95 03 	sts	0x0395, r26	; 0x800395 <appconf+0x52>
    12e2:	b0 93 96 03 	sts	0x0396, r27	; 0x800396 <appconf+0x53>
    12e6:	be 01       	movw	r22, r28
    12e8:	6f 5f       	subi	r22, 0xFF	; 255
    12ea:	7f 4f       	sbci	r23, 0xFF	; 255
    12ec:	c8 01       	movw	r24, r16
    12ee:	4e d3       	rcall	.+1692   	; 0x198c <buffer_get_uint32>
    12f0:	60 93 97 03 	sts	0x0397, r22	; 0x800397 <appconf+0x54>
    12f4:	70 93 98 03 	sts	0x0398, r23	; 0x800398 <appconf+0x55>
    12f8:	80 93 99 03 	sts	0x0399, r24	; 0x800399 <appconf+0x56>
    12fc:	90 93 9a 03 	sts	0x039A, r25	; 0x80039a <appconf+0x57>
    1300:	89 81       	ldd	r24, Y+1	; 0x01
    1302:	9a 81       	ldd	r25, Y+2	; 0x02
    1304:	ab 81       	ldd	r26, Y+3	; 0x03
    1306:	bc 81       	ldd	r27, Y+4	; 0x04
    1308:	ac 01       	movw	r20, r24
    130a:	bd 01       	movw	r22, r26
    130c:	4f 5f       	subi	r20, 0xFF	; 255
    130e:	5f 4f       	sbci	r21, 0xFF	; 255
    1310:	6f 4f       	sbci	r22, 0xFF	; 255
    1312:	7f 4f       	sbci	r23, 0xFF	; 255
    1314:	49 83       	std	Y+1, r20	; 0x01
    1316:	5a 83       	std	Y+2, r21	; 0x02
    1318:	6b 83       	std	Y+3, r22	; 0x03
    131a:	7c 83       	std	Y+4, r23	; 0x04
    131c:	f8 01       	movw	r30, r16
    131e:	e8 0f       	add	r30, r24
    1320:	f9 1f       	adc	r31, r25
    1322:	80 81       	ld	r24, Z
    1324:	80 93 9b 03 	sts	0x039B, r24	; 0x80039b <appconf+0x58>
    1328:	9e 01       	movw	r18, r28
    132a:	2f 5f       	subi	r18, 0xFF	; 255
    132c:	3f 4f       	sbci	r19, 0xFF	; 255
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	50 e0       	ldi	r21, 0x00	; 0
    1332:	6a e7       	ldi	r22, 0x7A	; 122
    1334:	74 e4       	ldi	r23, 0x44	; 68
    1336:	c8 01       	movw	r24, r16
    1338:	6d d3       	rcall	.+1754   	; 0x1a14 <buffer_get_float32>
    133a:	60 93 9c 03 	sts	0x039C, r22	; 0x80039c <appconf+0x59>
    133e:	70 93 9d 03 	sts	0x039D, r23	; 0x80039d <appconf+0x5a>
    1342:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <appconf+0x5b>
    1346:	90 93 9f 03 	sts	0x039F, r25	; 0x80039f <appconf+0x5c>
    134a:	9e 01       	movw	r18, r28
    134c:	2f 5f       	subi	r18, 0xFF	; 255
    134e:	3f 4f       	sbci	r19, 0xFF	; 255
    1350:	40 e0       	ldi	r20, 0x00	; 0
    1352:	50 e0       	ldi	r21, 0x00	; 0
    1354:	6a e7       	ldi	r22, 0x7A	; 122
    1356:	74 e4       	ldi	r23, 0x44	; 68
    1358:	c8 01       	movw	r24, r16
    135a:	5c d3       	rcall	.+1720   	; 0x1a14 <buffer_get_float32>
    135c:	60 93 a0 03 	sts	0x03A0, r22	; 0x8003a0 <appconf+0x5d>
    1360:	70 93 a1 03 	sts	0x03A1, r23	; 0x8003a1 <appconf+0x5e>
    1364:	80 93 a2 03 	sts	0x03A2, r24	; 0x8003a2 <appconf+0x5f>
    1368:	90 93 a3 03 	sts	0x03A3, r25	; 0x8003a3 <appconf+0x60>
    136c:	9e 01       	movw	r18, r28
    136e:	2f 5f       	subi	r18, 0xFF	; 255
    1370:	3f 4f       	sbci	r19, 0xFF	; 255
    1372:	40 e0       	ldi	r20, 0x00	; 0
    1374:	50 e0       	ldi	r21, 0x00	; 0
    1376:	6a e7       	ldi	r22, 0x7A	; 122
    1378:	74 e4       	ldi	r23, 0x44	; 68
    137a:	c8 01       	movw	r24, r16
    137c:	4b d3       	rcall	.+1686   	; 0x1a14 <buffer_get_float32>
    137e:	60 93 a4 03 	sts	0x03A4, r22	; 0x8003a4 <appconf+0x61>
    1382:	70 93 a5 03 	sts	0x03A5, r23	; 0x8003a5 <appconf+0x62>
    1386:	80 93 a6 03 	sts	0x03A6, r24	; 0x8003a6 <appconf+0x63>
    138a:	90 93 a7 03 	sts	0x03A7, r25	; 0x8003a7 <appconf+0x64>
    138e:	9e 01       	movw	r18, r28
    1390:	2f 5f       	subi	r18, 0xFF	; 255
    1392:	3f 4f       	sbci	r19, 0xFF	; 255
    1394:	40 e0       	ldi	r20, 0x00	; 0
    1396:	50 e0       	ldi	r21, 0x00	; 0
    1398:	6a e7       	ldi	r22, 0x7A	; 122
    139a:	74 e4       	ldi	r23, 0x44	; 68
    139c:	c8 01       	movw	r24, r16
    139e:	3a d3       	rcall	.+1652   	; 0x1a14 <buffer_get_float32>
    13a0:	60 93 a8 03 	sts	0x03A8, r22	; 0x8003a8 <appconf+0x65>
    13a4:	70 93 a9 03 	sts	0x03A9, r23	; 0x8003a9 <appconf+0x66>
    13a8:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <appconf+0x67>
    13ac:	90 93 ab 03 	sts	0x03AB, r25	; 0x8003ab <appconf+0x68>
    13b0:	9e 01       	movw	r18, r28
    13b2:	2f 5f       	subi	r18, 0xFF	; 255
    13b4:	3f 4f       	sbci	r19, 0xFF	; 255
    13b6:	40 e0       	ldi	r20, 0x00	; 0
    13b8:	50 e0       	ldi	r21, 0x00	; 0
    13ba:	6a e7       	ldi	r22, 0x7A	; 122
    13bc:	74 e4       	ldi	r23, 0x44	; 68
    13be:	c8 01       	movw	r24, r16
    13c0:	29 d3       	rcall	.+1618   	; 0x1a14 <buffer_get_float32>
    13c2:	60 93 ac 03 	sts	0x03AC, r22	; 0x8003ac <appconf+0x69>
    13c6:	70 93 ad 03 	sts	0x03AD, r23	; 0x8003ad <appconf+0x6a>
    13ca:	80 93 ae 03 	sts	0x03AE, r24	; 0x8003ae <appconf+0x6b>
    13ce:	90 93 af 03 	sts	0x03AF, r25	; 0x8003af <appconf+0x6c>
    13d2:	9e 01       	movw	r18, r28
    13d4:	2f 5f       	subi	r18, 0xFF	; 255
    13d6:	3f 4f       	sbci	r19, 0xFF	; 255
    13d8:	40 e0       	ldi	r20, 0x00	; 0
    13da:	50 e0       	ldi	r21, 0x00	; 0
    13dc:	6a e7       	ldi	r22, 0x7A	; 122
    13de:	74 e4       	ldi	r23, 0x44	; 68
    13e0:	c8 01       	movw	r24, r16
    13e2:	18 d3       	rcall	.+1584   	; 0x1a14 <buffer_get_float32>
    13e4:	60 93 b0 03 	sts	0x03B0, r22	; 0x8003b0 <appconf+0x6d>
    13e8:	70 93 b1 03 	sts	0x03B1, r23	; 0x8003b1 <appconf+0x6e>
    13ec:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <appconf+0x6f>
    13f0:	90 93 b3 03 	sts	0x03B3, r25	; 0x8003b3 <appconf+0x70>
    13f4:	89 81       	ldd	r24, Y+1	; 0x01
    13f6:	9a 81       	ldd	r25, Y+2	; 0x02
    13f8:	ab 81       	ldd	r26, Y+3	; 0x03
    13fa:	bc 81       	ldd	r27, Y+4	; 0x04
    13fc:	f8 01       	movw	r30, r16
    13fe:	e8 0f       	add	r30, r24
    1400:	f9 1f       	adc	r31, r25
    1402:	21 e0       	ldi	r18, 0x01	; 1
    1404:	30 81       	ld	r19, Z
    1406:	31 11       	cpse	r19, r1
    1408:	01 c0       	rjmp	.+2      	; 0x140c <__stack+0x30d>
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	20 93 b4 03 	sts	0x03B4, r18	; 0x8003b4 <appconf+0x71>
    1410:	ac 01       	movw	r20, r24
    1412:	bd 01       	movw	r22, r26
    1414:	4e 5f       	subi	r20, 0xFE	; 254
    1416:	5f 4f       	sbci	r21, 0xFF	; 255
    1418:	6f 4f       	sbci	r22, 0xFF	; 255
    141a:	7f 4f       	sbci	r23, 0xFF	; 255
    141c:	49 83       	std	Y+1, r20	; 0x01
    141e:	5a 83       	std	Y+2, r21	; 0x02
    1420:	6b 83       	std	Y+3, r22	; 0x03
    1422:	7c 83       	std	Y+4, r23	; 0x04
    1424:	01 96       	adiw	r24, 0x01	; 1
    1426:	a1 1d       	adc	r26, r1
    1428:	b1 1d       	adc	r27, r1
    142a:	f8 01       	movw	r30, r16
    142c:	e8 0f       	add	r30, r24
    142e:	f9 1f       	adc	r31, r25
    1430:	21 e0       	ldi	r18, 0x01	; 1
    1432:	80 81       	ld	r24, Z
    1434:	81 11       	cpse	r24, r1
    1436:	01 c0       	rjmp	.+2      	; 0x143a <__stack+0x33b>
    1438:	20 e0       	ldi	r18, 0x00	; 0
    143a:	20 93 b5 03 	sts	0x03B5, r18	; 0x8003b5 <appconf+0x72>
    143e:	9e 01       	movw	r18, r28
    1440:	2f 5f       	subi	r18, 0xFF	; 255
    1442:	3f 4f       	sbci	r19, 0xFF	; 255
    1444:	40 e0       	ldi	r20, 0x00	; 0
    1446:	50 e0       	ldi	r21, 0x00	; 0
    1448:	6a e7       	ldi	r22, 0x7A	; 122
    144a:	74 e4       	ldi	r23, 0x44	; 68
    144c:	c8 01       	movw	r24, r16
    144e:	e2 d2       	rcall	.+1476   	; 0x1a14 <buffer_get_float32>
    1450:	60 93 b6 03 	sts	0x03B6, r22	; 0x8003b6 <appconf+0x73>
    1454:	70 93 b7 03 	sts	0x03B7, r23	; 0x8003b7 <appconf+0x74>
    1458:	80 93 b8 03 	sts	0x03B8, r24	; 0x8003b8 <appconf+0x75>
    145c:	90 93 b9 03 	sts	0x03B9, r25	; 0x8003b9 <appconf+0x76>
    1460:	89 81       	ldd	r24, Y+1	; 0x01
    1462:	9a 81       	ldd	r25, Y+2	; 0x02
    1464:	ab 81       	ldd	r26, Y+3	; 0x03
    1466:	bc 81       	ldd	r27, Y+4	; 0x04
    1468:	f8 01       	movw	r30, r16
    146a:	e8 0f       	add	r30, r24
    146c:	f9 1f       	adc	r31, r25
    146e:	20 81       	ld	r18, Z
    1470:	20 93 ba 03 	sts	0x03BA, r18	; 0x8003ba <appconf+0x77>
    1474:	ac 01       	movw	r20, r24
    1476:	bd 01       	movw	r22, r26
    1478:	4f 5f       	subi	r20, 0xFF	; 255
    147a:	5f 4f       	sbci	r21, 0xFF	; 255
    147c:	6f 4f       	sbci	r22, 0xFF	; 255
    147e:	7f 4f       	sbci	r23, 0xFF	; 255
    1480:	f8 01       	movw	r30, r16
    1482:	e4 0f       	add	r30, r20
    1484:	f5 1f       	adc	r31, r21
    1486:	20 81       	ld	r18, Z
    1488:	20 93 bb 03 	sts	0x03BB, r18	; 0x8003bb <appconf+0x78>
    148c:	ac 01       	movw	r20, r24
    148e:	bd 01       	movw	r22, r26
    1490:	4e 5f       	subi	r20, 0xFE	; 254
    1492:	5f 4f       	sbci	r21, 0xFF	; 255
    1494:	6f 4f       	sbci	r22, 0xFF	; 255
    1496:	7f 4f       	sbci	r23, 0xFF	; 255
    1498:	f8 01       	movw	r30, r16
    149a:	e4 0f       	add	r30, r20
    149c:	f5 1f       	adc	r31, r21
    149e:	20 81       	ld	r18, Z
    14a0:	20 93 bc 03 	sts	0x03BC, r18	; 0x8003bc <appconf+0x79>
    14a4:	ac 01       	movw	r20, r24
    14a6:	bd 01       	movw	r22, r26
    14a8:	4d 5f       	subi	r20, 0xFD	; 253
    14aa:	5f 4f       	sbci	r21, 0xFF	; 255
    14ac:	6f 4f       	sbci	r22, 0xFF	; 255
    14ae:	7f 4f       	sbci	r23, 0xFF	; 255
    14b0:	f8 01       	movw	r30, r16
    14b2:	e4 0f       	add	r30, r20
    14b4:	f5 1f       	adc	r31, r21
    14b6:	20 81       	ld	r18, Z
    14b8:	20 93 bd 03 	sts	0x03BD, r18	; 0x8003bd <appconf+0x7a>
    14bc:	ac 01       	movw	r20, r24
    14be:	bd 01       	movw	r22, r26
    14c0:	4c 5f       	subi	r20, 0xFC	; 252
    14c2:	5f 4f       	sbci	r21, 0xFF	; 255
    14c4:	6f 4f       	sbci	r22, 0xFF	; 255
    14c6:	7f 4f       	sbci	r23, 0xFF	; 255
    14c8:	f8 01       	movw	r30, r16
    14ca:	e4 0f       	add	r30, r20
    14cc:	f5 1f       	adc	r31, r21
    14ce:	20 81       	ld	r18, Z
    14d0:	20 93 be 03 	sts	0x03BE, r18	; 0x8003be <appconf+0x7b>
    14d4:	ac 01       	movw	r20, r24
    14d6:	bd 01       	movw	r22, r26
    14d8:	4b 5f       	subi	r20, 0xFB	; 251
    14da:	5f 4f       	sbci	r21, 0xFF	; 255
    14dc:	6f 4f       	sbci	r22, 0xFF	; 255
    14de:	7f 4f       	sbci	r23, 0xFF	; 255
    14e0:	f8 01       	movw	r30, r16
    14e2:	e4 0f       	add	r30, r20
    14e4:	f5 1f       	adc	r31, r21
    14e6:	20 81       	ld	r18, Z
    14e8:	20 93 bf 03 	sts	0x03BF, r18	; 0x8003bf <appconf+0x7c>
    14ec:	ac 01       	movw	r20, r24
    14ee:	bd 01       	movw	r22, r26
    14f0:	4a 5f       	subi	r20, 0xFA	; 250
    14f2:	5f 4f       	sbci	r21, 0xFF	; 255
    14f4:	6f 4f       	sbci	r22, 0xFF	; 255
    14f6:	7f 4f       	sbci	r23, 0xFF	; 255
    14f8:	f8 01       	movw	r30, r16
    14fa:	e4 0f       	add	r30, r20
    14fc:	f5 1f       	adc	r31, r21
    14fe:	20 81       	ld	r18, Z
    1500:	31 81       	ldd	r19, Z+1	; 0x01
    1502:	42 81       	ldd	r20, Z+2	; 0x02
    1504:	20 93 c0 03 	sts	0x03C0, r18	; 0x8003c0 <appconf+0x7d>
    1508:	30 93 c1 03 	sts	0x03C1, r19	; 0x8003c1 <appconf+0x7e>
    150c:	40 93 c2 03 	sts	0x03C2, r20	; 0x8003c2 <appconf+0x7f>
    1510:	ac 01       	movw	r20, r24
    1512:	bd 01       	movw	r22, r26
    1514:	46 5f       	subi	r20, 0xF6	; 246
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	6f 4f       	sbci	r22, 0xFF	; 255
    151a:	7f 4f       	sbci	r23, 0xFF	; 255
    151c:	49 83       	std	Y+1, r20	; 0x01
    151e:	5a 83       	std	Y+2, r21	; 0x02
    1520:	6b 83       	std	Y+3, r22	; 0x03
    1522:	7c 83       	std	Y+4, r23	; 0x04
    1524:	09 96       	adiw	r24, 0x09	; 9
    1526:	a1 1d       	adc	r26, r1
    1528:	b1 1d       	adc	r27, r1
    152a:	f8 01       	movw	r30, r16
    152c:	e8 0f       	add	r30, r24
    152e:	f9 1f       	adc	r31, r25
    1530:	21 e0       	ldi	r18, 0x01	; 1
    1532:	80 81       	ld	r24, Z
    1534:	81 11       	cpse	r24, r1
    1536:	01 c0       	rjmp	.+2      	; 0x153a <__stack+0x43b>
    1538:	20 e0       	ldi	r18, 0x00	; 0
    153a:	20 93 c3 03 	sts	0x03C3, r18	; 0x8003c3 <appconf+0x80>
    153e:	e0 91 10 03 	lds	r30, 0x0310	; 0x800310 <rx_appconf_func>
    1542:	f0 91 11 03 	lds	r31, 0x0311	; 0x800311 <rx_appconf_func+0x1>
    1546:	30 97       	sbiw	r30, 0x00	; 0
    1548:	09 f4       	brne	.+2      	; 0x154c <__stack+0x44d>
    154a:	f4 c0       	rjmp	.+488    	; 0x1734 <__stack+0x635>
    154c:	83 e4       	ldi	r24, 0x43	; 67
    154e:	93 e0       	ldi	r25, 0x03	; 3
    1550:	09 95       	icall
    1552:	f0 c0       	rjmp	.+480    	; 0x1734 <__stack+0x635>
    1554:	9e 01       	movw	r18, r28
    1556:	2f 5f       	subi	r18, 0xFF	; 255
    1558:	3f 4f       	sbci	r19, 0xFF	; 255
    155a:	40 e0       	ldi	r20, 0x00	; 0
    155c:	50 e0       	ldi	r21, 0x00	; 0
    155e:	6a e7       	ldi	r22, 0x7A	; 122
    1560:	74 e4       	ldi	r23, 0x44	; 68
    1562:	c8 01       	movw	r24, r16
    1564:	57 d2       	rcall	.+1198   	; 0x1a14 <buffer_get_float32>
    1566:	60 93 3f 03 	sts	0x033F, r22	; 0x80033f <detect_cycle_int_limit>
    156a:	70 93 40 03 	sts	0x0340, r23	; 0x800340 <detect_cycle_int_limit+0x1>
    156e:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <detect_cycle_int_limit+0x2>
    1572:	90 93 42 03 	sts	0x0342, r25	; 0x800342 <detect_cycle_int_limit+0x3>
    1576:	9e 01       	movw	r18, r28
    1578:	2f 5f       	subi	r18, 0xFF	; 255
    157a:	3f 4f       	sbci	r19, 0xFF	; 255
    157c:	40 e0       	ldi	r20, 0x00	; 0
    157e:	50 e0       	ldi	r21, 0x00	; 0
    1580:	6a e7       	ldi	r22, 0x7A	; 122
    1582:	74 e4       	ldi	r23, 0x44	; 68
    1584:	c8 01       	movw	r24, r16
    1586:	46 d2       	rcall	.+1164   	; 0x1a14 <buffer_get_float32>
    1588:	4b 01       	movw	r8, r22
    158a:	5c 01       	movw	r10, r24
    158c:	60 93 3b 03 	sts	0x033B, r22	; 0x80033b <detect_coupling_k>
    1590:	70 93 3c 03 	sts	0x033C, r23	; 0x80033c <detect_coupling_k+0x1>
    1594:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <detect_coupling_k+0x2>
    1598:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <detect_coupling_k+0x3>
    159c:	49 81       	ldd	r20, Y+1	; 0x01
    159e:	5a 81       	ldd	r21, Y+2	; 0x02
    15a0:	6b 81       	ldd	r22, Y+3	; 0x03
    15a2:	7c 81       	ldd	r23, Y+4	; 0x04
    15a4:	fa 01       	movw	r30, r20
    15a6:	31 96       	adiw	r30, 0x01	; 1
    15a8:	ee 0d       	add	r30, r14
    15aa:	ff 1d       	adc	r31, r15
    15ac:	a3 e3       	ldi	r26, 0x33	; 51
    15ae:	b3 e0       	ldi	r27, 0x03	; 3
    15b0:	ca 01       	movw	r24, r20
    15b2:	09 96       	adiw	r24, 0x09	; 9
    15b4:	e8 0e       	add	r14, r24
    15b6:	f9 1e       	adc	r15, r25
    15b8:	91 91       	ld	r25, Z+
    15ba:	9d 93       	st	X+, r25
    15bc:	ee 15       	cp	r30, r14
    15be:	ff 05       	cpc	r31, r15
    15c0:	d9 f7       	brne	.-10     	; 0x15b8 <__stack+0x4b9>
    15c2:	db 01       	movw	r26, r22
    15c4:	ca 01       	movw	r24, r20
    15c6:	09 96       	adiw	r24, 0x09	; 9
    15c8:	a1 1d       	adc	r26, r1
    15ca:	b1 1d       	adc	r27, r1
    15cc:	89 83       	std	Y+1, r24	; 0x01
    15ce:	9a 83       	std	Y+2, r25	; 0x02
    15d0:	ab 83       	std	Y+3, r26	; 0x03
    15d2:	bc 83       	std	Y+4, r27	; 0x04
    15d4:	48 5f       	subi	r20, 0xF8	; 248
    15d6:	5f 4f       	sbci	r21, 0xFF	; 255
    15d8:	6f 4f       	sbci	r22, 0xFF	; 255
    15da:	7f 4f       	sbci	r23, 0xFF	; 255
    15dc:	f8 01       	movw	r30, r16
    15de:	e4 0f       	add	r30, r20
    15e0:	f5 1f       	adc	r31, r21
    15e2:	e0 80       	ld	r14, Z
    15e4:	e0 92 32 03 	sts	0x0332, r14	; 0x800332 <detect_hall_res>
    15e8:	e0 91 0e 03 	lds	r30, 0x030E	; 0x80030e <rx_detect_func>
    15ec:	f0 91 0f 03 	lds	r31, 0x030F	; 0x80030f <rx_detect_func+0x1>
    15f0:	30 97       	sbiw	r30, 0x00	; 0
    15f2:	09 f4       	brne	.+2      	; 0x15f6 <__stack+0x4f7>
    15f4:	9f c0       	rjmp	.+318    	; 0x1734 <__stack+0x635>
    15f6:	60 91 3f 03 	lds	r22, 0x033F	; 0x80033f <detect_cycle_int_limit>
    15fa:	70 91 40 03 	lds	r23, 0x0340	; 0x800340 <detect_cycle_int_limit+0x1>
    15fe:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <detect_cycle_int_limit+0x2>
    1602:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <detect_cycle_int_limit+0x3>
    1606:	03 e3       	ldi	r16, 0x33	; 51
    1608:	13 e0       	ldi	r17, 0x03	; 3
    160a:	a5 01       	movw	r20, r10
    160c:	94 01       	movw	r18, r8
    160e:	09 95       	icall
    1610:	91 c0       	rjmp	.+290    	; 0x1734 <__stack+0x635>
    1612:	9e 01       	movw	r18, r28
    1614:	2f 5f       	subi	r18, 0xFF	; 255
    1616:	3f 4f       	sbci	r19, 0xFF	; 255
    1618:	40 e0       	ldi	r20, 0x00	; 0
    161a:	54 e2       	ldi	r21, 0x24	; 36
    161c:	64 e7       	ldi	r22, 0x74	; 116
    161e:	79 e4       	ldi	r23, 0x49	; 73
    1620:	c8 01       	movw	r24, r16
    1622:	f8 d1       	rcall	.+1008   	; 0x1a14 <buffer_get_float32>
    1624:	60 93 2e 03 	sts	0x032E, r22	; 0x80032e <dec_ppm>
    1628:	70 93 2f 03 	sts	0x032F, r23	; 0x80032f <dec_ppm+0x1>
    162c:	80 93 30 03 	sts	0x0330, r24	; 0x800330 <dec_ppm+0x2>
    1630:	90 93 31 03 	sts	0x0331, r25	; 0x800331 <dec_ppm+0x3>
    1634:	9e 01       	movw	r18, r28
    1636:	2f 5f       	subi	r18, 0xFF	; 255
    1638:	3f 4f       	sbci	r19, 0xFF	; 255
    163a:	40 e0       	ldi	r20, 0x00	; 0
    163c:	54 e2       	ldi	r21, 0x24	; 36
    163e:	64 e7       	ldi	r22, 0x74	; 116
    1640:	79 e4       	ldi	r23, 0x49	; 73
    1642:	c8 01       	movw	r24, r16
    1644:	e7 d1       	rcall	.+974    	; 0x1a14 <buffer_get_float32>
    1646:	9b 01       	movw	r18, r22
    1648:	ac 01       	movw	r20, r24
    164a:	60 93 2a 03 	sts	0x032A, r22	; 0x80032a <dec_ppm_len>
    164e:	70 93 2b 03 	sts	0x032B, r23	; 0x80032b <dec_ppm_len+0x1>
    1652:	80 93 2c 03 	sts	0x032C, r24	; 0x80032c <dec_ppm_len+0x2>
    1656:	90 93 2d 03 	sts	0x032D, r25	; 0x80032d <dec_ppm_len+0x3>
    165a:	e0 91 0c 03 	lds	r30, 0x030C	; 0x80030c <rx_dec_ppm_func>
    165e:	f0 91 0d 03 	lds	r31, 0x030D	; 0x80030d <rx_dec_ppm_func+0x1>
    1662:	30 97       	sbiw	r30, 0x00	; 0
    1664:	09 f4       	brne	.+2      	; 0x1668 <__stack+0x569>
    1666:	66 c0       	rjmp	.+204    	; 0x1734 <__stack+0x635>
    1668:	60 91 2e 03 	lds	r22, 0x032E	; 0x80032e <dec_ppm>
    166c:	70 91 2f 03 	lds	r23, 0x032F	; 0x80032f <dec_ppm+0x1>
    1670:	80 91 30 03 	lds	r24, 0x0330	; 0x800330 <dec_ppm+0x2>
    1674:	90 91 31 03 	lds	r25, 0x0331	; 0x800331 <dec_ppm+0x3>
    1678:	09 95       	icall
    167a:	5c c0       	rjmp	.+184    	; 0x1734 <__stack+0x635>
    167c:	9e 01       	movw	r18, r28
    167e:	2f 5f       	subi	r18, 0xFF	; 255
    1680:	3f 4f       	sbci	r19, 0xFF	; 255
    1682:	40 e0       	ldi	r20, 0x00	; 0
    1684:	54 e2       	ldi	r21, 0x24	; 36
    1686:	64 e7       	ldi	r22, 0x74	; 116
    1688:	79 e4       	ldi	r23, 0x49	; 73
    168a:	c8 01       	movw	r24, r16
    168c:	c3 d1       	rcall	.+902    	; 0x1a14 <buffer_get_float32>
    168e:	60 93 26 03 	sts	0x0326, r22	; 0x800326 <dec_adc>
    1692:	70 93 27 03 	sts	0x0327, r23	; 0x800327 <dec_adc+0x1>
    1696:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <dec_adc+0x2>
    169a:	90 93 29 03 	sts	0x0329, r25	; 0x800329 <dec_adc+0x3>
    169e:	9e 01       	movw	r18, r28
    16a0:	2f 5f       	subi	r18, 0xFF	; 255
    16a2:	3f 4f       	sbci	r19, 0xFF	; 255
    16a4:	40 e0       	ldi	r20, 0x00	; 0
    16a6:	54 e2       	ldi	r21, 0x24	; 36
    16a8:	64 e7       	ldi	r22, 0x74	; 116
    16aa:	79 e4       	ldi	r23, 0x49	; 73
    16ac:	c8 01       	movw	r24, r16
    16ae:	b2 d1       	rcall	.+868    	; 0x1a14 <buffer_get_float32>
    16b0:	9b 01       	movw	r18, r22
    16b2:	ac 01       	movw	r20, r24
    16b4:	60 93 22 03 	sts	0x0322, r22	; 0x800322 <dec_adc_voltage>
    16b8:	70 93 23 03 	sts	0x0323, r23	; 0x800323 <dec_adc_voltage+0x1>
    16bc:	80 93 24 03 	sts	0x0324, r24	; 0x800324 <dec_adc_voltage+0x2>
    16c0:	90 93 25 03 	sts	0x0325, r25	; 0x800325 <dec_adc_voltage+0x3>
    16c4:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <rx_dec_adc_func>
    16c8:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <rx_dec_adc_func+0x1>
    16cc:	30 97       	sbiw	r30, 0x00	; 0
    16ce:	91 f1       	breq	.+100    	; 0x1734 <__stack+0x635>
    16d0:	60 91 26 03 	lds	r22, 0x0326	; 0x800326 <dec_adc>
    16d4:	70 91 27 03 	lds	r23, 0x0327	; 0x800327 <dec_adc+0x1>
    16d8:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <dec_adc+0x2>
    16dc:	90 91 29 03 	lds	r25, 0x0329	; 0x800329 <dec_adc+0x3>
    16e0:	09 95       	icall
    16e2:	28 c0       	rjmp	.+80     	; 0x1734 <__stack+0x635>
    16e4:	9e 01       	movw	r18, r28
    16e6:	2f 5f       	subi	r18, 0xFF	; 255
    16e8:	3f 4f       	sbci	r19, 0xFF	; 255
    16ea:	40 e0       	ldi	r20, 0x00	; 0
    16ec:	54 e2       	ldi	r21, 0x24	; 36
    16ee:	64 e7       	ldi	r22, 0x74	; 116
    16f0:	79 e4       	ldi	r23, 0x49	; 73
    16f2:	c8 01       	movw	r24, r16
    16f4:	8f d1       	rcall	.+798    	; 0x1a14 <buffer_get_float32>
    16f6:	60 93 1e 03 	sts	0x031E, r22	; 0x80031e <dec_chuk>
    16fa:	70 93 1f 03 	sts	0x031F, r23	; 0x80031f <dec_chuk+0x1>
    16fe:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <dec_chuk+0x2>
    1702:	90 93 21 03 	sts	0x0321, r25	; 0x800321 <dec_chuk+0x3>
    1706:	e0 91 08 03 	lds	r30, 0x0308	; 0x800308 <rx_dec_chuk_func>
    170a:	f0 91 09 03 	lds	r31, 0x0309	; 0x800309 <rx_dec_chuk_func+0x1>
    170e:	30 97       	sbiw	r30, 0x00	; 0
    1710:	89 f0       	breq	.+34     	; 0x1734 <__stack+0x635>
    1712:	09 95       	icall
    1714:	0f c0       	rjmp	.+30     	; 0x1734 <__stack+0x635>
    1716:	e0 91 06 03 	lds	r30, 0x0306	; 0x800306 <rx_mcconf_received_func>
    171a:	f0 91 07 03 	lds	r31, 0x0307	; 0x800307 <rx_mcconf_received_func+0x1>
    171e:	30 97       	sbiw	r30, 0x00	; 0
    1720:	49 f0       	breq	.+18     	; 0x1734 <__stack+0x635>
    1722:	09 95       	icall
    1724:	07 c0       	rjmp	.+14     	; 0x1734 <__stack+0x635>
    1726:	e0 91 04 03 	lds	r30, 0x0304	; 0x800304 <__data_end>
    172a:	f0 91 05 03 	lds	r31, 0x0305	; 0x800305 <__data_end+0x1>
    172e:	30 97       	sbiw	r30, 0x00	; 0
    1730:	09 f0       	breq	.+2      	; 0x1734 <__stack+0x635>
    1732:	09 95       	icall
    1734:	0f 90       	pop	r0
    1736:	0f 90       	pop	r0
    1738:	0f 90       	pop	r0
    173a:	0f 90       	pop	r0
    173c:	df 91       	pop	r29
    173e:	cf 91       	pop	r28
    1740:	1f 91       	pop	r17
    1742:	0f 91       	pop	r16
    1744:	ff 90       	pop	r15
    1746:	ef 90       	pop	r14
    1748:	df 90       	pop	r13
    174a:	cf 90       	pop	r12
    174c:	bf 90       	pop	r11
    174e:	af 90       	pop	r10
    1750:	9f 90       	pop	r9
    1752:	8f 90       	pop	r8
    1754:	08 95       	ret

00001756 <send_packet_no_fwd>:
    1756:	20 91 1a 03 	lds	r18, 0x031A	; 0x80031a <forward_func>
    175a:	30 91 1b 03 	lds	r19, 0x031B	; 0x80031b <forward_func+0x1>
    175e:	23 2b       	or	r18, r19
    1760:	11 f4       	brne	.+4      	; 0x1766 <send_packet_no_fwd+0x10>
    1762:	0c 94 97 00 	jmp	0x12e	; 0x12e <bldc_interface_send_packet>
    1766:	08 95       	ret

00001768 <bldc_interface_set_current>:

void bldc_interface_set_current(float current) {
    1768:	ef 92       	push	r14
    176a:	ff 92       	push	r15
    176c:	0f 93       	push	r16
    176e:	1f 93       	push	r17
    1770:	cf 93       	push	r28
    1772:	df 93       	push	r29
    1774:	00 d0       	rcall	.+0      	; 0x1776 <bldc_interface_set_current+0xe>
    1776:	00 d0       	rcall	.+0      	; 0x1778 <bldc_interface_set_current+0x10>
    1778:	cd b7       	in	r28, 0x3d	; 61
    177a:	de b7       	in	r29, 0x3e	; 62
    177c:	ab 01       	movw	r20, r22
    177e:	bc 01       	movw	r22, r24
	int32_t send_index = 0;
	send_buffer[send_index++] = COMM_SET_CURRENT;
    1780:	81 e0       	ldi	r24, 0x01	; 1
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	a0 e0       	ldi	r26, 0x00	; 0
    1786:	b0 e0       	ldi	r27, 0x00	; 0
    1788:	89 83       	std	Y+1, r24	; 0x01
    178a:	9a 83       	std	Y+2, r25	; 0x02
    178c:	ab 83       	std	Y+3, r26	; 0x03
    178e:	bc 83       	std	Y+4, r27	; 0x04
    1790:	86 e0       	ldi	r24, 0x06	; 6
    1792:	80 93 3b 05 	sts	0x053B, r24	; 0x80053b <send_buffer>
	buffer_append_float32(send_buffer, current, 1000.0, &send_index);
    1796:	ce 01       	movw	r24, r28
    1798:	01 96       	adiw	r24, 0x01	; 1
    179a:	7c 01       	movw	r14, r24
    179c:	00 e0       	ldi	r16, 0x00	; 0
    179e:	10 e0       	ldi	r17, 0x00	; 0
    17a0:	2a e7       	ldi	r18, 0x7A	; 122
    17a2:	34 e4       	ldi	r19, 0x44	; 68
    17a4:	8b e3       	ldi	r24, 0x3B	; 59
    17a6:	95 e0       	ldi	r25, 0x05	; 5
    17a8:	7b d0       	rcall	.+246    	; 0x18a0 <buffer_append_float32>
	send_packet_no_fwd(send_buffer, send_index);
    17aa:	69 81       	ldd	r22, Y+1	; 0x01
    17ac:	7a 81       	ldd	r23, Y+2	; 0x02
    17ae:	8b e3       	ldi	r24, 0x3B	; 59
    17b0:	95 e0       	ldi	r25, 0x05	; 5
    17b2:	d1 df       	rcall	.-94     	; 0x1756 <send_packet_no_fwd>
}
    17b4:	0f 90       	pop	r0
    17b6:	0f 90       	pop	r0
    17b8:	0f 90       	pop	r0
    17ba:	0f 90       	pop	r0
    17bc:	df 91       	pop	r29
    17be:	cf 91       	pop	r28
    17c0:	1f 91       	pop	r17
    17c2:	0f 91       	pop	r16
    17c4:	ff 90       	pop	r15
    17c6:	ef 90       	pop	r14
    17c8:	08 95       	ret

000017ca <send_packet_bldc_interface>:
 * @param len
 * Data array length
 */
static void send_packet_bldc_interface(unsigned char *data, unsigned int len) {
	// Pass the packet to the packet handler to add checksum, length, start and stop bytes.
	packet_send_packet(data, len, PACKET_HANDLER);
    17ca:	40 e0       	ldi	r20, 0x00	; 0
    17cc:	50 e0       	ldi	r21, 0x00	; 0
    17ce:	60 c1       	rjmp	.+704    	; 0x1a90 <packet_send_packet>
    17d0:	08 95       	ret

000017d2 <process_packet>:
 * @param len
 * Data array length
 */
static void process_packet(unsigned char *data, unsigned int len) {
	// Let bldc_interface process the packet.
	bldc_interface_process_packet(data, len);
    17d2:	0c 94 9f 00 	jmp	0x13e	; 0x13e <bldc_interface_process_packet>
    17d6:	08 95       	ret

000017d8 <bldc_interface_uart_init>:
 * @param func
 * Function provided for sending packets.
 */
void bldc_interface_uart_init(void(*func)(unsigned char *data, unsigned int len)) {
	// Initialize packet handler
	packet_init(func, process_packet, PACKET_HANDLER);
    17d8:	40 e0       	ldi	r20, 0x00	; 0
    17da:	50 e0       	ldi	r21, 0x00	; 0
    17dc:	69 ee       	ldi	r22, 0xE9	; 233
    17de:	7b e0       	ldi	r23, 0x0B	; 11
    17e0:	47 d1       	rcall	.+654    	; 0x1a70 <packet_init>

	// Initialize the bldc interface and provide a send function
	bldc_interface_init(send_packet_bldc_interface);
    17e2:	85 ee       	ldi	r24, 0xE5	; 229
    17e4:	9b e0       	ldi	r25, 0x0B	; 11
    17e6:	0c 94 87 00 	jmp	0x10e	; 0x10e <bldc_interface_init>
    17ea:	08 95       	ret

000017ec <buffer_append_int32>:
	buffer[(*index)++] = number;
}

void buffer_append_float16(uint8_t* buffer, float number, float scale, int32_t *index) {
    buffer_append_int16(buffer, (int16_t)(number * scale), index);
}
    17ec:	cf 92       	push	r12
    17ee:	df 92       	push	r13
    17f0:	ef 92       	push	r14
    17f2:	ff 92       	push	r15
    17f4:	0f 93       	push	r16
    17f6:	1f 93       	push	r17
    17f8:	f9 01       	movw	r30, r18
    17fa:	00 81       	ld	r16, Z
    17fc:	11 81       	ldd	r17, Z+1	; 0x01
    17fe:	22 81       	ldd	r18, Z+2	; 0x02
    1800:	33 81       	ldd	r19, Z+3	; 0x03
    1802:	68 01       	movw	r12, r16
    1804:	79 01       	movw	r14, r18
    1806:	af ef       	ldi	r26, 0xFF	; 255
    1808:	ca 1a       	sub	r12, r26
    180a:	da 0a       	sbc	r13, r26
    180c:	ea 0a       	sbc	r14, r26
    180e:	fa 0a       	sbc	r15, r26
    1810:	c0 82       	st	Z, r12
    1812:	d1 82       	std	Z+1, r13	; 0x01
    1814:	e2 82       	std	Z+2, r14	; 0x02
    1816:	f3 82       	std	Z+3, r15	; 0x03
    1818:	dc 01       	movw	r26, r24
    181a:	a0 0f       	add	r26, r16
    181c:	b1 1f       	adc	r27, r17
    181e:	7c 93       	st	X, r23
    1820:	00 81       	ld	r16, Z
    1822:	11 81       	ldd	r17, Z+1	; 0x01
    1824:	22 81       	ldd	r18, Z+2	; 0x02
    1826:	33 81       	ldd	r19, Z+3	; 0x03
    1828:	68 01       	movw	r12, r16
    182a:	79 01       	movw	r14, r18
    182c:	7f ef       	ldi	r23, 0xFF	; 255
    182e:	c7 1a       	sub	r12, r23
    1830:	d7 0a       	sbc	r13, r23
    1832:	e7 0a       	sbc	r14, r23
    1834:	f7 0a       	sbc	r15, r23
    1836:	c0 82       	st	Z, r12
    1838:	d1 82       	std	Z+1, r13	; 0x01
    183a:	e2 82       	std	Z+2, r14	; 0x02
    183c:	f3 82       	std	Z+3, r15	; 0x03
    183e:	dc 01       	movw	r26, r24
    1840:	a0 0f       	add	r26, r16
    1842:	b1 1f       	adc	r27, r17
    1844:	6c 93       	st	X, r22
    1846:	00 81       	ld	r16, Z
    1848:	11 81       	ldd	r17, Z+1	; 0x01
    184a:	22 81       	ldd	r18, Z+2	; 0x02
    184c:	33 81       	ldd	r19, Z+3	; 0x03
    184e:	68 01       	movw	r12, r16
    1850:	79 01       	movw	r14, r18
    1852:	af ef       	ldi	r26, 0xFF	; 255
    1854:	ca 1a       	sub	r12, r26
    1856:	da 0a       	sbc	r13, r26
    1858:	ea 0a       	sbc	r14, r26
    185a:	fa 0a       	sbc	r15, r26
    185c:	c0 82       	st	Z, r12
    185e:	d1 82       	std	Z+1, r13	; 0x01
    1860:	e2 82       	std	Z+2, r14	; 0x02
    1862:	f3 82       	std	Z+3, r15	; 0x03
    1864:	dc 01       	movw	r26, r24
    1866:	a0 0f       	add	r26, r16
    1868:	b1 1f       	adc	r27, r17
    186a:	5c 93       	st	X, r21
    186c:	00 81       	ld	r16, Z
    186e:	11 81       	ldd	r17, Z+1	; 0x01
    1870:	22 81       	ldd	r18, Z+2	; 0x02
    1872:	33 81       	ldd	r19, Z+3	; 0x03
    1874:	68 01       	movw	r12, r16
    1876:	79 01       	movw	r14, r18
    1878:	5f ef       	ldi	r21, 0xFF	; 255
    187a:	c5 1a       	sub	r12, r21
    187c:	d5 0a       	sbc	r13, r21
    187e:	e5 0a       	sbc	r14, r21
    1880:	f5 0a       	sbc	r15, r21
    1882:	c0 82       	st	Z, r12
    1884:	d1 82       	std	Z+1, r13	; 0x01
    1886:	e2 82       	std	Z+2, r14	; 0x02
    1888:	f3 82       	std	Z+3, r15	; 0x03
    188a:	fc 01       	movw	r30, r24
    188c:	e0 0f       	add	r30, r16
    188e:	f1 1f       	adc	r31, r17
    1890:	40 83       	st	Z, r20
    1892:	1f 91       	pop	r17
    1894:	0f 91       	pop	r16
    1896:	ff 90       	pop	r15
    1898:	ef 90       	pop	r14
    189a:	df 90       	pop	r13
    189c:	cf 90       	pop	r12
    189e:	08 95       	ret

000018a0 <buffer_append_float32>:

void buffer_append_float32(uint8_t* buffer, float number, float scale, int32_t *index) {
    18a0:	ef 92       	push	r14
    18a2:	ff 92       	push	r15
    18a4:	0f 93       	push	r16
    18a6:	1f 93       	push	r17
    18a8:	cf 93       	push	r28
    18aa:	df 93       	push	r29
    18ac:	ec 01       	movw	r28, r24
    18ae:	cb 01       	movw	r24, r22
    18b0:	ba 01       	movw	r22, r20
    buffer_append_int32(buffer, (int32_t)(number * scale), index);
    18b2:	a9 01       	movw	r20, r18
    18b4:	98 01       	movw	r18, r16
    18b6:	4c d4       	rcall	.+2200   	; 0x2150 <__mulsf3>
    18b8:	64 d3       	rcall	.+1736   	; 0x1f82 <__fixsfsi>
    18ba:	ab 01       	movw	r20, r22
    18bc:	bc 01       	movw	r22, r24
    18be:	97 01       	movw	r18, r14
    18c0:	ce 01       	movw	r24, r28
    18c2:	94 df       	rcall	.-216    	; 0x17ec <buffer_append_int32>
}
    18c4:	df 91       	pop	r29
    18c6:	cf 91       	pop	r28
    18c8:	1f 91       	pop	r17
    18ca:	0f 91       	pop	r16
    18cc:	ff 90       	pop	r15
    18ce:	ef 90       	pop	r14
    18d0:	08 95       	ret

000018d2 <buffer_get_int16>:

int16_t buffer_get_int16(const uint8_t *buffer, int32_t *index) {
    18d2:	db 01       	movw	r26, r22
	int16_t res =	((uint16_t) buffer[*index]) << 8 |
    18d4:	4d 91       	ld	r20, X+
    18d6:	5d 91       	ld	r21, X+
    18d8:	6d 91       	ld	r22, X+
    18da:	7c 91       	ld	r23, X
    18dc:	13 97       	sbiw	r26, 0x03	; 3
					((uint16_t) buffer[*index + 1]);
    18de:	fc 01       	movw	r30, r24
    18e0:	e4 0f       	add	r30, r20
    18e2:	f5 1f       	adc	r31, r21
    18e4:	81 81       	ldd	r24, Z+1	; 0x01
void buffer_append_float32(uint8_t* buffer, float number, float scale, int32_t *index) {
    buffer_append_int32(buffer, (int32_t)(number * scale), index);
}

int16_t buffer_get_int16(const uint8_t *buffer, int32_t *index) {
	int16_t res =	((uint16_t) buffer[*index]) << 8 |
    18e6:	20 81       	ld	r18, Z
    18e8:	90 e0       	ldi	r25, 0x00	; 0
					((uint16_t) buffer[*index + 1]);
	*index += 2;
    18ea:	4e 5f       	subi	r20, 0xFE	; 254
    18ec:	5f 4f       	sbci	r21, 0xFF	; 255
    18ee:	6f 4f       	sbci	r22, 0xFF	; 255
    18f0:	7f 4f       	sbci	r23, 0xFF	; 255
    18f2:	4d 93       	st	X+, r20
    18f4:	5d 93       	st	X+, r21
    18f6:	6d 93       	st	X+, r22
    18f8:	7c 93       	st	X, r23
    18fa:	13 97       	sbiw	r26, 0x03	; 3
	return res;
}
    18fc:	92 2b       	or	r25, r18
    18fe:	08 95       	ret

00001900 <buffer_get_uint16>:

uint16_t buffer_get_uint16(const uint8_t *buffer, int32_t *index) {
    1900:	db 01       	movw	r26, r22
	uint16_t res = 	((uint16_t) buffer[*index]) << 8 |
    1902:	4d 91       	ld	r20, X+
    1904:	5d 91       	ld	r21, X+
    1906:	6d 91       	ld	r22, X+
    1908:	7c 91       	ld	r23, X
    190a:	13 97       	sbiw	r26, 0x03	; 3
					((uint16_t) buffer[*index + 1]);
    190c:	fc 01       	movw	r30, r24
    190e:	e4 0f       	add	r30, r20
    1910:	f5 1f       	adc	r31, r21
    1912:	81 81       	ldd	r24, Z+1	; 0x01
	*index += 2;
	return res;
}

uint16_t buffer_get_uint16(const uint8_t *buffer, int32_t *index) {
	uint16_t res = 	((uint16_t) buffer[*index]) << 8 |
    1914:	20 81       	ld	r18, Z
    1916:	90 e0       	ldi	r25, 0x00	; 0
					((uint16_t) buffer[*index + 1]);
	*index += 2;
    1918:	4e 5f       	subi	r20, 0xFE	; 254
    191a:	5f 4f       	sbci	r21, 0xFF	; 255
    191c:	6f 4f       	sbci	r22, 0xFF	; 255
    191e:	7f 4f       	sbci	r23, 0xFF	; 255
    1920:	4d 93       	st	X+, r20
    1922:	5d 93       	st	X+, r21
    1924:	6d 93       	st	X+, r22
    1926:	7c 93       	st	X, r23
    1928:	13 97       	sbiw	r26, 0x03	; 3
	return res;
}
    192a:	92 2b       	or	r25, r18
    192c:	08 95       	ret

0000192e <buffer_get_int32>:

int32_t buffer_get_int32(const uint8_t *buffer, int32_t *index) {
    192e:	cf 92       	push	r12
    1930:	df 92       	push	r13
    1932:	ef 92       	push	r14
    1934:	ff 92       	push	r15
    1936:	0f 93       	push	r16
    1938:	1f 93       	push	r17
    193a:	fb 01       	movw	r30, r22
	int32_t res =	((uint32_t) buffer[*index]) << 24 |
    193c:	00 81       	ld	r16, Z
    193e:	11 81       	ldd	r17, Z+1	; 0x01
    1940:	22 81       	ldd	r18, Z+2	; 0x02
    1942:	33 81       	ldd	r19, Z+3	; 0x03
					((uint32_t) buffer[*index + 1]) << 16 |
					((uint32_t) buffer[*index + 2]) << 8 |
					((uint32_t) buffer[*index + 3]);
    1944:	dc 01       	movw	r26, r24
    1946:	a0 0f       	add	r26, r16
    1948:	b1 1f       	adc	r27, r17
    194a:	13 96       	adiw	r26, 0x03	; 3
    194c:	6c 91       	ld	r22, X
    194e:	13 97       	sbiw	r26, 0x03	; 3
	*index += 2;
	return res;
}

int32_t buffer_get_int32(const uint8_t *buffer, int32_t *index) {
	int32_t res =	((uint32_t) buffer[*index]) << 24 |
    1950:	4c 91       	ld	r20, X
    1952:	c6 2e       	mov	r12, r22
    1954:	d1 2c       	mov	r13, r1
    1956:	e1 2c       	mov	r14, r1
    1958:	f1 2c       	mov	r15, r1
    195a:	f4 2a       	or	r15, r20
					((uint32_t) buffer[*index + 1]) << 16 |
    195c:	11 96       	adiw	r26, 0x01	; 1
    195e:	4c 91       	ld	r20, X
    1960:	11 97       	sbiw	r26, 0x01	; 1
    1962:	e4 2a       	or	r14, r20
					((uint32_t) buffer[*index + 2]) << 8 |
    1964:	12 96       	adiw	r26, 0x02	; 2
    1966:	4c 91       	ld	r20, X
    1968:	c7 01       	movw	r24, r14
    196a:	b6 01       	movw	r22, r12
    196c:	74 2b       	or	r23, r20
					((uint32_t) buffer[*index + 3]);
	*index += 4;
    196e:	0c 5f       	subi	r16, 0xFC	; 252
    1970:	1f 4f       	sbci	r17, 0xFF	; 255
    1972:	2f 4f       	sbci	r18, 0xFF	; 255
    1974:	3f 4f       	sbci	r19, 0xFF	; 255
    1976:	00 83       	st	Z, r16
    1978:	11 83       	std	Z+1, r17	; 0x01
    197a:	22 83       	std	Z+2, r18	; 0x02
    197c:	33 83       	std	Z+3, r19	; 0x03
	return res;
}
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	ff 90       	pop	r15
    1984:	ef 90       	pop	r14
    1986:	df 90       	pop	r13
    1988:	cf 90       	pop	r12
    198a:	08 95       	ret

0000198c <buffer_get_uint32>:

uint32_t buffer_get_uint32(const uint8_t *buffer, int32_t *index) {
    198c:	cf 92       	push	r12
    198e:	df 92       	push	r13
    1990:	ef 92       	push	r14
    1992:	ff 92       	push	r15
    1994:	0f 93       	push	r16
    1996:	1f 93       	push	r17
    1998:	fb 01       	movw	r30, r22
	uint32_t res =	((uint32_t) buffer[*index]) << 24 |
    199a:	00 81       	ld	r16, Z
    199c:	11 81       	ldd	r17, Z+1	; 0x01
    199e:	22 81       	ldd	r18, Z+2	; 0x02
    19a0:	33 81       	ldd	r19, Z+3	; 0x03
					((uint32_t) buffer[*index + 1]) << 16 |
					((uint32_t) buffer[*index + 2]) << 8 |
					((uint32_t) buffer[*index + 3]);
    19a2:	dc 01       	movw	r26, r24
    19a4:	a0 0f       	add	r26, r16
    19a6:	b1 1f       	adc	r27, r17
    19a8:	13 96       	adiw	r26, 0x03	; 3
    19aa:	6c 91       	ld	r22, X
    19ac:	13 97       	sbiw	r26, 0x03	; 3
	*index += 4;
	return res;
}

uint32_t buffer_get_uint32(const uint8_t *buffer, int32_t *index) {
	uint32_t res =	((uint32_t) buffer[*index]) << 24 |
    19ae:	4c 91       	ld	r20, X
    19b0:	c6 2e       	mov	r12, r22
    19b2:	d1 2c       	mov	r13, r1
    19b4:	e1 2c       	mov	r14, r1
    19b6:	f1 2c       	mov	r15, r1
    19b8:	f4 2a       	or	r15, r20
					((uint32_t) buffer[*index + 1]) << 16 |
    19ba:	11 96       	adiw	r26, 0x01	; 1
    19bc:	4c 91       	ld	r20, X
    19be:	11 97       	sbiw	r26, 0x01	; 1
    19c0:	e4 2a       	or	r14, r20
					((uint32_t) buffer[*index + 2]) << 8 |
    19c2:	12 96       	adiw	r26, 0x02	; 2
    19c4:	4c 91       	ld	r20, X
	*index += 4;
	return res;
}

uint32_t buffer_get_uint32(const uint8_t *buffer, int32_t *index) {
	uint32_t res =	((uint32_t) buffer[*index]) << 24 |
    19c6:	c7 01       	movw	r24, r14
    19c8:	b6 01       	movw	r22, r12
    19ca:	74 2b       	or	r23, r20
					((uint32_t) buffer[*index + 1]) << 16 |
					((uint32_t) buffer[*index + 2]) << 8 |
					((uint32_t) buffer[*index + 3]);
	*index += 4;
    19cc:	0c 5f       	subi	r16, 0xFC	; 252
    19ce:	1f 4f       	sbci	r17, 0xFF	; 255
    19d0:	2f 4f       	sbci	r18, 0xFF	; 255
    19d2:	3f 4f       	sbci	r19, 0xFF	; 255
    19d4:	00 83       	st	Z, r16
    19d6:	11 83       	std	Z+1, r17	; 0x01
    19d8:	22 83       	std	Z+2, r18	; 0x02
    19da:	33 83       	std	Z+3, r19	; 0x03
	return res;
}
    19dc:	1f 91       	pop	r17
    19de:	0f 91       	pop	r16
    19e0:	ff 90       	pop	r15
    19e2:	ef 90       	pop	r14
    19e4:	df 90       	pop	r13
    19e6:	cf 90       	pop	r12
    19e8:	08 95       	ret

000019ea <buffer_get_float16>:

float buffer_get_float16(const uint8_t *buffer, float scale, int32_t *index) {
    19ea:	cf 92       	push	r12
    19ec:	df 92       	push	r13
    19ee:	ef 92       	push	r14
    19f0:	ff 92       	push	r15
    19f2:	6a 01       	movw	r12, r20
    19f4:	7b 01       	movw	r14, r22
    return (float)buffer_get_int16(buffer, index) / scale;
    19f6:	b9 01       	movw	r22, r18
    19f8:	6c df       	rcall	.-296    	; 0x18d2 <buffer_get_int16>
    19fa:	bc 01       	movw	r22, r24
    19fc:	99 0f       	add	r25, r25
    19fe:	88 0b       	sbc	r24, r24
    1a00:	99 0b       	sbc	r25, r25
    1a02:	f2 d2       	rcall	.+1508   	; 0x1fe8 <__floatsisf>
    1a04:	a7 01       	movw	r20, r14
    1a06:	96 01       	movw	r18, r12
    1a08:	54 d2       	rcall	.+1192   	; 0x1eb2 <__divsf3>
}
    1a0a:	ff 90       	pop	r15
    1a0c:	ef 90       	pop	r14
    1a0e:	df 90       	pop	r13
    1a10:	cf 90       	pop	r12
    1a12:	08 95       	ret

00001a14 <buffer_get_float32>:

float buffer_get_float32(const uint8_t *buffer, float scale, int32_t *index) {
    1a14:	cf 92       	push	r12
    1a16:	df 92       	push	r13
    1a18:	ef 92       	push	r14
    1a1a:	ff 92       	push	r15
    1a1c:	6a 01       	movw	r12, r20
    1a1e:	7b 01       	movw	r14, r22
    return (float)buffer_get_int32(buffer, index) / scale;
    1a20:	b9 01       	movw	r22, r18
    1a22:	85 df       	rcall	.-246    	; 0x192e <buffer_get_int32>
    1a24:	e1 d2       	rcall	.+1474   	; 0x1fe8 <__floatsisf>
    1a26:	a7 01       	movw	r20, r14
    1a28:	96 01       	movw	r18, r12
    1a2a:	43 d2       	rcall	.+1158   	; 0x1eb2 <__divsf3>
}
    1a2c:	ff 90       	pop	r15
    1a2e:	ef 90       	pop	r14
    1a30:	df 90       	pop	r13
    1a32:	cf 90       	pop	r12
    1a34:	08 95       	ret

00001a36 <crc16>:
		0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0 };

unsigned short crc16(unsigned char *buf, unsigned int len) {
	unsigned int i;
	unsigned short cksum = 0;
	for (i = 0; i < len; i++) {
    1a36:	61 15       	cp	r22, r1
    1a38:	71 05       	cpc	r23, r1
    1a3a:	b9 f0       	breq	.+46     	; 0x1a6a <crc16+0x34>
    1a3c:	dc 01       	movw	r26, r24
    1a3e:	68 0f       	add	r22, r24
    1a40:	79 1f       	adc	r23, r25
    1a42:	80 e0       	ldi	r24, 0x00	; 0
    1a44:	90 e0       	ldi	r25, 0x00	; 0
		cksum = crc16_tab[(((cksum >> 8) ^ *buf++) & 0xFF)] ^ (cksum << 8);
    1a46:	2d 91       	ld	r18, X+
    1a48:	e9 2f       	mov	r30, r25
    1a4a:	ff 27       	eor	r31, r31
    1a4c:	e2 27       	eor	r30, r18
    1a4e:	ee 0f       	add	r30, r30
    1a50:	ff 1f       	adc	r31, r31
    1a52:	ec 5f       	subi	r30, 0xFC	; 252
    1a54:	fe 4f       	sbci	r31, 0xFE	; 254
    1a56:	20 81       	ld	r18, Z
    1a58:	31 81       	ldd	r19, Z+1	; 0x01
    1a5a:	98 2f       	mov	r25, r24
    1a5c:	88 27       	eor	r24, r24
    1a5e:	82 27       	eor	r24, r18
    1a60:	93 27       	eor	r25, r19
		0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0 };

unsigned short crc16(unsigned char *buf, unsigned int len) {
	unsigned int i;
	unsigned short cksum = 0;
	for (i = 0; i < len; i++) {
    1a62:	a6 17       	cp	r26, r22
    1a64:	b7 07       	cpc	r27, r23
    1a66:	79 f7       	brne	.-34     	; 0x1a46 <crc16+0x10>
    1a68:	08 95       	ret
		0x0cc1, 0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,
		0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0 };

unsigned short crc16(unsigned char *buf, unsigned int len) {
	unsigned int i;
	unsigned short cksum = 0;
    1a6a:	80 e0       	ldi	r24, 0x00	; 0
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
	for (i = 0; i < len; i++) {
		cksum = crc16_tab[(((cksum >> 8) ^ *buf++) & 0xFF)] ^ (cksum << 8);
	}
	return cksum;
}
    1a6e:	08 95       	ret

00001a70 <packet_init>:

static PACKET_STATE_t handler_states[PACKET_HANDLERS];

void packet_init(void (*s_func)(unsigned char *data, unsigned int len),
		void (*p_func)(unsigned char *data, unsigned int len), int handler_num) {
	handler_states[handler_num].send_func = s_func;
    1a70:	22 e1       	ldi	r18, 0x12	; 18
    1a72:	34 e0       	ldi	r19, 0x04	; 4
    1a74:	42 9f       	mul	r20, r18
    1a76:	f0 01       	movw	r30, r0
    1a78:	43 9f       	mul	r20, r19
    1a7a:	f0 0d       	add	r31, r0
    1a7c:	52 9f       	mul	r21, r18
    1a7e:	f0 0d       	add	r31, r0
    1a80:	11 24       	eor	r1, r1
    1a82:	e5 5c       	subi	r30, 0xC5	; 197
    1a84:	f8 4f       	sbci	r31, 0xF8	; 248
    1a86:	93 83       	std	Z+3, r25	; 0x03
    1a88:	82 83       	std	Z+2, r24	; 0x02
	handler_states[handler_num].process_func = p_func;
    1a8a:	75 83       	std	Z+5, r23	; 0x05
    1a8c:	64 83       	std	Z+4, r22	; 0x04
    1a8e:	08 95       	ret

00001a90 <packet_send_packet>:
}

void packet_send_packet(unsigned char *data, unsigned int len, int handler_num) {
    1a90:	af 92       	push	r10
    1a92:	bf 92       	push	r11
    1a94:	cf 92       	push	r12
    1a96:	df 92       	push	r13
    1a98:	ef 92       	push	r14
    1a9a:	ff 92       	push	r15
    1a9c:	0f 93       	push	r16
    1a9e:	1f 93       	push	r17
    1aa0:	cf 93       	push	r28
    1aa2:	df 93       	push	r29
    1aa4:	5c 01       	movw	r10, r24
    1aa6:	eb 01       	movw	r28, r22
	if (len > PACKET_MAX_PL_LEN) {
    1aa8:	61 30       	cpi	r22, 0x01	; 1
    1aaa:	22 e0       	ldi	r18, 0x02	; 2
    1aac:	72 07       	cpc	r23, r18
    1aae:	08 f0       	brcs	.+2      	; 0x1ab2 <packet_send_packet+0x22>
    1ab0:	5f c0       	rjmp	.+190    	; 0x1b70 <packet_send_packet+0xe0>
		return;
	}

	int b_ind = 0;

	if (len <= 256) {
    1ab2:	61 30       	cpi	r22, 0x01	; 1
    1ab4:	81 e0       	ldi	r24, 0x01	; 1
    1ab6:	78 07       	cpc	r23, r24
    1ab8:	a8 f4       	brcc	.+42     	; 0x1ae4 <packet_send_packet+0x54>
		handler_states[handler_num].tx_buffer[b_ind++] = 2;
    1aba:	22 e1       	ldi	r18, 0x12	; 18
    1abc:	34 e0       	ldi	r19, 0x04	; 4
    1abe:	42 9f       	mul	r20, r18
    1ac0:	c0 01       	movw	r24, r0
    1ac2:	43 9f       	mul	r20, r19
    1ac4:	90 0d       	add	r25, r0
    1ac6:	52 9f       	mul	r21, r18
    1ac8:	90 0d       	add	r25, r0
    1aca:	11 24       	eor	r1, r1
    1acc:	85 5c       	subi	r24, 0xC5	; 197
    1ace:	98 4f       	sbci	r25, 0xF8	; 248
    1ad0:	fc 01       	movw	r30, r24
    1ad2:	e8 5f       	subi	r30, 0xF8	; 248
    1ad4:	fd 4f       	sbci	r31, 0xFD	; 253
    1ad6:	22 e0       	ldi	r18, 0x02	; 2
    1ad8:	20 83       	st	Z, r18
		handler_states[handler_num].tx_buffer[b_ind++] = len;
    1ada:	31 96       	adiw	r30, 0x01	; 1
    1adc:	60 83       	st	Z, r22
    1ade:	02 e0       	ldi	r16, 0x02	; 2
    1ae0:	10 e0       	ldi	r17, 0x00	; 0
    1ae2:	16 c0       	rjmp	.+44     	; 0x1b10 <packet_send_packet+0x80>
	} else {
		handler_states[handler_num].tx_buffer[b_ind++] = 3;
    1ae4:	22 e1       	ldi	r18, 0x12	; 18
    1ae6:	34 e0       	ldi	r19, 0x04	; 4
    1ae8:	42 9f       	mul	r20, r18
    1aea:	c0 01       	movw	r24, r0
    1aec:	43 9f       	mul	r20, r19
    1aee:	90 0d       	add	r25, r0
    1af0:	52 9f       	mul	r21, r18
    1af2:	90 0d       	add	r25, r0
    1af4:	11 24       	eor	r1, r1
    1af6:	85 5c       	subi	r24, 0xC5	; 197
    1af8:	98 4f       	sbci	r25, 0xF8	; 248
    1afa:	fc 01       	movw	r30, r24
    1afc:	e8 5f       	subi	r30, 0xF8	; 248
    1afe:	fd 4f       	sbci	r31, 0xFD	; 253
    1b00:	23 e0       	ldi	r18, 0x03	; 3
    1b02:	20 83       	st	Z, r18
		handler_states[handler_num].tx_buffer[b_ind++] = len >> 8;
    1b04:	31 96       	adiw	r30, 0x01	; 1
    1b06:	d0 83       	st	Z, r29
		handler_states[handler_num].tx_buffer[b_ind++] = len & 0xFF;
    1b08:	31 96       	adiw	r30, 0x01	; 1
    1b0a:	60 83       	st	Z, r22
    1b0c:	03 e0       	ldi	r16, 0x03	; 3
    1b0e:	10 e0       	ldi	r17, 0x00	; 0
	}

	memcpy(handler_states[handler_num].tx_buffer + b_ind, data, len);
    1b10:	82 e1       	ldi	r24, 0x12	; 18
    1b12:	94 e0       	ldi	r25, 0x04	; 4
    1b14:	48 9f       	mul	r20, r24
    1b16:	70 01       	movw	r14, r0
    1b18:	49 9f       	mul	r20, r25
    1b1a:	f0 0c       	add	r15, r0
    1b1c:	58 9f       	mul	r21, r24
    1b1e:	f0 0c       	add	r15, r0
    1b20:	11 24       	eor	r1, r1
    1b22:	c7 01       	movw	r24, r14
    1b24:	8d 5b       	subi	r24, 0xBD	; 189
    1b26:	96 4f       	sbci	r25, 0xF6	; 246
    1b28:	6c 01       	movw	r12, r24
    1b2a:	ae 01       	movw	r20, r28
    1b2c:	b5 01       	movw	r22, r10
    1b2e:	80 0f       	add	r24, r16
    1b30:	91 1f       	adc	r25, r17
    1b32:	7a d3       	rcall	.+1780   	; 0x2228 <memcpy>
	b_ind += len;
    1b34:	0c 0f       	add	r16, r28
    1b36:	1d 1f       	adc	r17, r29

	unsigned short crc = crc16(data, len);
    1b38:	be 01       	movw	r22, r28
    1b3a:	c5 01       	movw	r24, r10
    1b3c:	7c df       	rcall	.-264    	; 0x1a36 <crc16>
	handler_states[handler_num].tx_buffer[b_ind++] = (uint8_t)(crc >> 8);
    1b3e:	f7 01       	movw	r30, r14
    1b40:	e5 5c       	subi	r30, 0xC5	; 197
    1b42:	f8 4f       	sbci	r31, 0xF8	; 248
    1b44:	9f 01       	movw	r18, r30
    1b46:	20 0f       	add	r18, r16
    1b48:	31 1f       	adc	r19, r17
    1b4a:	d9 01       	movw	r26, r18
    1b4c:	a8 5f       	subi	r26, 0xF8	; 248
    1b4e:	bd 4f       	sbci	r27, 0xFD	; 253
    1b50:	9c 93       	st	X, r25
	handler_states[handler_num].tx_buffer[b_ind++] = (uint8_t)(crc & 0xFF);
    1b52:	11 96       	adiw	r26, 0x01	; 1
    1b54:	8c 93       	st	X, r24
	handler_states[handler_num].tx_buffer[b_ind++] = 3;
    1b56:	b8 01       	movw	r22, r16
    1b58:	6d 5f       	subi	r22, 0xFD	; 253
    1b5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b5c:	11 96       	adiw	r26, 0x01	; 1
    1b5e:	83 e0       	ldi	r24, 0x03	; 3
    1b60:	8c 93       	st	X, r24

	if (handler_states[handler_num].send_func) {
    1b62:	02 80       	ldd	r0, Z+2	; 0x02
    1b64:	f3 81       	ldd	r31, Z+3	; 0x03
    1b66:	e0 2d       	mov	r30, r0
    1b68:	30 97       	sbiw	r30, 0x00	; 0
    1b6a:	11 f0       	breq	.+4      	; 0x1b70 <packet_send_packet+0xe0>
		handler_states[handler_num].send_func(handler_states[handler_num].tx_buffer, b_ind);
    1b6c:	c6 01       	movw	r24, r12
    1b6e:	09 95       	icall
	}
}
    1b70:	df 91       	pop	r29
    1b72:	cf 91       	pop	r28
    1b74:	1f 91       	pop	r17
    1b76:	0f 91       	pop	r16
    1b78:	ff 90       	pop	r15
    1b7a:	ef 90       	pop	r14
    1b7c:	df 90       	pop	r13
    1b7e:	cf 90       	pop	r12
    1b80:	bf 90       	pop	r11
    1b82:	af 90       	pop	r10
    1b84:	08 95       	ret

00001b86 <send_packet>:
    DDRD |= (1<<PD0);   //SPI SS pin
    DDRD &= ~(1<<PD7)|(1<<PD6);  //Configure Port D Pin 7, 6 for input
    PORTD |= (1<<PD7);  //enable pullup
    timer1_init();      //initialize 16 bit timer
    uart_init(MYUBBR);	//initialize uart
    sei();
    1b86:	cf 93       	push	r28
    1b88:	df 93       	push	r29
    1b8a:	9c 01       	movw	r18, r24
    1b8c:	eb e9       	ldi	r30, 0x9B	; 155
    1b8e:	f0 e0       	ldi	r31, 0x00	; 0
    1b90:	90 81       	ld	r25, Z
    1b92:	95 ff       	sbrs	r25, 5
    1b94:	fd cf       	rjmp	.-6      	; 0x1b90 <send_packet+0xa>
    1b96:	61 15       	cp	r22, r1
    1b98:	71 05       	cpc	r23, r1
    1b9a:	99 f0       	breq	.+38     	; 0x1bc2 <send_packet+0x3c>
    1b9c:	d9 01       	movw	r26, r18
    1b9e:	62 0f       	add	r22, r18
    1ba0:	73 1f       	adc	r23, r19
    1ba2:	cc e9       	ldi	r28, 0x9C	; 156
    1ba4:	d0 e0       	ldi	r29, 0x00	; 0
    1ba6:	eb e9       	ldi	r30, 0x9B	; 155
    1ba8:	f0 e0       	ldi	r31, 0x00	; 0
    1baa:	9d 91       	ld	r25, X+
    1bac:	98 83       	st	Y, r25
    1bae:	90 81       	ld	r25, Z
    1bb0:	95 ff       	sbrs	r25, 5
    1bb2:	fd cf       	rjmp	.-6      	; 0x1bae <send_packet+0x28>
    1bb4:	81 e2       	ldi	r24, 0x21	; 33
    1bb6:	8a 95       	dec	r24
    1bb8:	f1 f7       	brne	.-4      	; 0x1bb6 <send_packet+0x30>
    1bba:	00 00       	nop
    1bbc:	a6 17       	cp	r26, r22
    1bbe:	b7 07       	cpc	r27, r23
    1bc0:	a1 f7       	brne	.-24     	; 0x1baa <send_packet+0x24>
    1bc2:	df 91       	pop	r29
    1bc4:	cf 91       	pop	r28
    1bc6:	08 95       	ret

00001bc8 <timer1_init>:
    1bc8:	8f b5       	in	r24, 0x2f	; 47
    1bca:	83 60       	ori	r24, 0x03	; 3
    1bcc:	8f bd       	out	0x2f, r24	; 47
    1bce:	8e b5       	in	r24, 0x2e	; 46
    1bd0:	88 61       	ori	r24, 0x18	; 24
    1bd2:	8e bd       	out	0x2e, r24	; 46
    1bd4:	8e b5       	in	r24, 0x2e	; 46
    1bd6:	83 60       	ori	r24, 0x03	; 3
    1bd8:	8e bd       	out	0x2e, r24	; 46
    1bda:	87 ea       	ldi	r24, 0xA7	; 167
    1bdc:	91 e6       	ldi	r25, 0x61	; 97
    1bde:	9b bd       	out	0x2b, r25	; 43
    1be0:	8a bd       	out	0x2a, r24	; 42
    1be2:	87 b7       	in	r24, 0x37	; 55
    1be4:	84 60       	ori	r24, 0x04	; 4
    1be6:	87 bf       	out	0x37, r24	; 55
    1be8:	08 95       	ret

00001bea <motor_torque>:
    1bea:	8f 92       	push	r8
    1bec:	9f 92       	push	r9
    1bee:	af 92       	push	r10
    1bf0:	bf 92       	push	r11
    1bf2:	cf 92       	push	r12
    1bf4:	df 92       	push	r13
    1bf6:	ef 92       	push	r14
    1bf8:	ff 92       	push	r15
    1bfa:	0f 93       	push	r16
    1bfc:	1f 93       	push	r17
    1bfe:	cf 93       	push	r28
    1c00:	7c 01       	movw	r14, r24
    1c02:	6b 01       	movw	r12, r22
    1c04:	8a 01       	movw	r16, r20
    1c06:	c0 b3       	in	r28, 0x10	; 16
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	40 e0       	ldi	r20, 0x00	; 0
    1c0e:	5f e3       	ldi	r21, 0x3F	; 63
    1c10:	60 91 4d 0b 	lds	r22, 0x0B4D	; 0x800b4d <general_torque.2676>
    1c14:	70 91 4e 0b 	lds	r23, 0x0B4E	; 0x800b4e <general_torque.2676+0x1>
    1c18:	80 91 4f 0b 	lds	r24, 0x0B4F	; 0x800b4f <general_torque.2676+0x2>
    1c1c:	90 91 50 0b 	lds	r25, 0x0B50	; 0x800b50 <general_torque.2676+0x3>
    1c20:	e0 d0       	rcall	.+448    	; 0x1de2 <__addsf3>
    1c22:	60 93 4d 0b 	sts	0x0B4D, r22	; 0x800b4d <general_torque.2676>
    1c26:	70 93 4e 0b 	sts	0x0B4E, r23	; 0x800b4e <general_torque.2676+0x1>
    1c2a:	80 93 4f 0b 	sts	0x0B4F, r24	; 0x800b4f <general_torque.2676+0x2>
    1c2e:	90 93 50 0b 	sts	0x0B50, r25	; 0x800b50 <general_torque.2676+0x3>
    1c32:	f8 01       	movw	r30, r16
    1c34:	11 82       	std	Z+1, r1	; 0x01
    1c36:	10 82       	st	Z, r1
    1c38:	2c 2f       	mov	r18, r28
    1c3a:	2f 67       	ori	r18, 0x7F	; 127
    1c3c:	23 30       	cpi	r18, 0x03	; 3
    1c3e:	09 f4       	brne	.+2      	; 0x1c42 <motor_torque+0x58>
    1c40:	4a c0       	rjmp	.+148    	; 0x1cd6 <motor_torque+0xec>
    1c42:	2f 37       	cpi	r18, 0x7F	; 127
    1c44:	19 f0       	breq	.+6      	; 0x1c4c <motor_torque+0x62>
    1c46:	21 11       	cpse	r18, r1
    1c48:	2e c0       	rjmp	.+92     	; 0x1ca6 <motor_torque+0xbc>
    1c4a:	45 c0       	rjmp	.+138    	; 0x1cd6 <motor_torque+0xec>
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	48 ec       	ldi	r20, 0xC8	; 200
    1c52:	51 e4       	ldi	r21, 0x41	; 65
    1c54:	79 d2       	rcall	.+1266   	; 0x2148 <__gesf2>
    1c56:	18 16       	cp	r1, r24
    1c58:	64 f4       	brge	.+24     	; 0x1c72 <motor_torque+0x88>
    1c5a:	80 e0       	ldi	r24, 0x00	; 0
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	a8 ec       	ldi	r26, 0xC8	; 200
    1c60:	b1 e4       	ldi	r27, 0x41	; 65
    1c62:	80 93 4d 0b 	sts	0x0B4D, r24	; 0x800b4d <general_torque.2676>
    1c66:	90 93 4e 0b 	sts	0x0B4E, r25	; 0x800b4e <general_torque.2676+0x1>
    1c6a:	a0 93 4f 0b 	sts	0x0B4F, r26	; 0x800b4f <general_torque.2676+0x2>
    1c6e:	b0 93 50 0b 	sts	0x0B50, r27	; 0x800b50 <general_torque.2676+0x3>
    1c72:	80 90 4d 0b 	lds	r8, 0x0B4D	; 0x800b4d <general_torque.2676>
    1c76:	90 90 4e 0b 	lds	r9, 0x0B4E	; 0x800b4e <general_torque.2676+0x1>
    1c7a:	a0 90 4f 0b 	lds	r10, 0x0B4F	; 0x800b4f <general_torque.2676+0x2>
    1c7e:	b0 90 50 0b 	lds	r11, 0x0B50	; 0x800b50 <general_torque.2676+0x3>
    1c82:	26 ea       	ldi	r18, 0xA6	; 166
    1c84:	3d ee       	ldi	r19, 0xED	; 237
    1c86:	4f e7       	ldi	r20, 0x7F	; 127
    1c88:	5f e3       	ldi	r21, 0x3F	; 63
    1c8a:	c5 01       	movw	r24, r10
    1c8c:	b4 01       	movw	r22, r8
    1c8e:	60 d2       	rcall	.+1216   	; 0x2150 <__mulsf3>
    1c90:	f7 01       	movw	r30, r14
    1c92:	60 83       	st	Z, r22
    1c94:	71 83       	std	Z+1, r23	; 0x01
    1c96:	82 83       	std	Z+2, r24	; 0x02
    1c98:	93 83       	std	Z+3, r25	; 0x03
    1c9a:	f6 01       	movw	r30, r12
    1c9c:	80 82       	st	Z, r8
    1c9e:	91 82       	std	Z+1, r9	; 0x01
    1ca0:	a2 82       	std	Z+2, r10	; 0x02
    1ca2:	b3 82       	std	Z+3, r11	; 0x03
    1ca4:	18 c0       	rjmp	.+48     	; 0x1cd6 <motor_torque+0xec>
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e0       	ldi	r19, 0x00	; 0
    1caa:	a9 01       	movw	r20, r18
    1cac:	fe d0       	rcall	.+508    	; 0x1eaa <__cmpsf2>
    1cae:	88 23       	and	r24, r24
    1cb0:	91 f0       	breq	.+36     	; 0x1cd6 <motor_torque+0xec>
    1cb2:	10 92 4d 0b 	sts	0x0B4D, r1	; 0x800b4d <general_torque.2676>
    1cb6:	10 92 4e 0b 	sts	0x0B4E, r1	; 0x800b4e <general_torque.2676+0x1>
    1cba:	10 92 4f 0b 	sts	0x0B4F, r1	; 0x800b4f <general_torque.2676+0x2>
    1cbe:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <general_torque.2676+0x3>
    1cc2:	f6 01       	movw	r30, r12
    1cc4:	10 82       	st	Z, r1
    1cc6:	11 82       	std	Z+1, r1	; 0x01
    1cc8:	12 82       	std	Z+2, r1	; 0x02
    1cca:	13 82       	std	Z+3, r1	; 0x03
    1ccc:	f7 01       	movw	r30, r14
    1cce:	10 82       	st	Z, r1
    1cd0:	11 82       	std	Z+1, r1	; 0x01
    1cd2:	12 82       	std	Z+2, r1	; 0x02
    1cd4:	13 82       	std	Z+3, r1	; 0x03
    1cd6:	cf 91       	pop	r28
    1cd8:	1f 91       	pop	r17
    1cda:	0f 91       	pop	r16
    1cdc:	ff 90       	pop	r15
    1cde:	ef 90       	pop	r14
    1ce0:	df 90       	pop	r13
    1ce2:	cf 90       	pop	r12
    1ce4:	bf 90       	pop	r11
    1ce6:	af 90       	pop	r10
    1ce8:	9f 90       	pop	r9
    1cea:	8f 90       	pop	r8
    1cec:	08 95       	ret

00001cee <uart_init>:
    1cee:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
    1cf2:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    1cf6:	88 e1       	ldi	r24, 0x18	; 24
    1cf8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    1cfc:	ed e9       	ldi	r30, 0x9D	; 157
    1cfe:	f0 e0       	ldi	r31, 0x00	; 0
    1d00:	80 81       	ld	r24, Z
    1d02:	8e 60       	ori	r24, 0x0E	; 14
    1d04:	80 83       	st	Z, r24
    1d06:	08 95       	ret

00001d08 <__vector_14>:
}//program_init

/************************************************************************************************
 * Name: ISR for 16-bit timer
 ************************************************************************************************/
ISR(TIMER1_OVF_vect){
    1d08:	1f 92       	push	r1
    1d0a:	0f 92       	push	r0
    1d0c:	0f b6       	in	r0, 0x3f	; 63
    1d0e:	0f 92       	push	r0
    1d10:	11 24       	eor	r1, r1
    1d12:	0b b6       	in	r0, 0x3b	; 59
    1d14:	0f 92       	push	r0
    1d16:	2f 93       	push	r18
    1d18:	3f 93       	push	r19
    1d1a:	4f 93       	push	r20
    1d1c:	5f 93       	push	r21
    1d1e:	6f 93       	push	r22
    1d20:	7f 93       	push	r23
    1d22:	8f 93       	push	r24
    1d24:	9f 93       	push	r25
    1d26:	af 93       	push	r26
    1d28:	bf 93       	push	r27
    1d2a:	cf 93       	push	r28
    1d2c:	df 93       	push	r29
    1d2e:	ef 93       	push	r30
    1d30:	ff 93       	push	r31
	
	bldc_interface_uart_init(send_packet);
    1d32:	83 ec       	ldi	r24, 0xC3	; 195
    1d34:	9d e0       	ldi	r25, 0x0D	; 13
    1d36:	50 dd       	rcall	.-1376   	; 0x17d8 <bldc_interface_uart_init>
		
	//ISR for the 16 bit timer
    PORTB ^= (1<<PB7);
    1d38:	88 b3       	in	r24, 0x18	; 24
    1d3a:	80 58       	subi	r24, 0x80	; 128
    1d3c:	88 bb       	out	0x18, r24	; 24
    PORTF |= (1<<PF0);
    1d3e:	c2 e6       	ldi	r28, 0x62	; 98
    1d40:	d0 e0       	ldi	r29, 0x00	; 0
    1d42:	88 81       	ld	r24, Y
    1d44:	81 60       	ori	r24, 0x01	; 1
    1d46:	88 83       	st	Y, r24
    motor_torque(&torque_right, &torque_left, &steering_angle);	//Update motor torques
    1d48:	45 e5       	ldi	r20, 0x55	; 85
    1d4a:	5b e0       	ldi	r21, 0x0B	; 11
    1d4c:	67 e5       	ldi	r22, 0x57	; 87
    1d4e:	7b e0       	ldi	r23, 0x0B	; 11
    1d50:	8b e5       	ldi	r24, 0x5B	; 91
    1d52:	9b e0       	ldi	r25, 0x0B	; 11
    1d54:	4a df       	rcall	.-364    	; 0x1bea <motor_torque>
    steering_angle_float = (float)steering_angle;
    1d56:	60 91 55 0b 	lds	r22, 0x0B55	; 0x800b55 <steering_angle>
    1d5a:	70 91 56 0b 	lds	r23, 0x0B56	; 0x800b56 <steering_angle+0x1>
    1d5e:	80 e0       	ldi	r24, 0x00	; 0
    1d60:	90 e0       	ldi	r25, 0x00	; 0
    1d62:	40 d1       	rcall	.+640    	; 0x1fe4 <__floatunsisf>
    1d64:	60 93 51 0b 	sts	0x0B51, r22	; 0x800b51 <steering_angle_float>
    1d68:	70 93 52 0b 	sts	0x0B52, r23	; 0x800b52 <steering_angle_float+0x1>
    1d6c:	80 93 53 0b 	sts	0x0B53, r24	; 0x800b53 <steering_angle_float+0x2>
    1d70:	90 93 54 0b 	sts	0x0B54, r25	; 0x800b54 <steering_angle_float+0x3>

    //float_to_bytes(&torque_right, torque_r_bytes);
    //float_to_bytes(&torque_left, torque_l_bytes);
    //float_to_bytes(&steering_angle_float, steering_angle_bytes);

	setcurrent = torque_right;
    1d74:	60 91 5b 0b 	lds	r22, 0x0B5B	; 0x800b5b <torque_right>
    1d78:	70 91 5c 0b 	lds	r23, 0x0B5C	; 0x800b5c <torque_right+0x1>
    1d7c:	80 91 5d 0b 	lds	r24, 0x0B5D	; 0x800b5d <torque_right+0x2>
    1d80:	90 91 5e 0b 	lds	r25, 0x0B5E	; 0x800b5e <torque_right+0x3>
    1d84:	60 93 5f 0b 	sts	0x0B5F, r22	; 0x800b5f <setcurrent>
    1d88:	70 93 60 0b 	sts	0x0B60, r23	; 0x800b60 <setcurrent+0x1>
    1d8c:	80 93 61 0b 	sts	0x0B61, r24	; 0x800b61 <setcurrent+0x2>
    1d90:	90 93 62 0b 	sts	0x0B62, r25	; 0x800b62 <setcurrent+0x3>
    bldc_interface_set_current(setcurrent);
    1d94:	e9 dc       	rcall	.-1582   	; 0x1768 <bldc_interface_set_current>
    //uart_transmit(torque_r_bytes,4);		//transmit right torque value - float, 4 bytes
    //uart_transmit(torque_l_bytes,4);    		//transmit left torque value - float, 4 bytes
    //uart_transmit(steering_angle_bytes,4);		//transmit steering encoder value - uint16, 2 bytes

//    spi_init();					//Used to initalize SPI for LCD screen if being used
    PORTF &= ~(1<<PF0);
    1d96:	88 81       	ld	r24, Y
    1d98:	8e 7f       	andi	r24, 0xFE	; 254
    1d9a:	88 83       	st	Y, r24
}//timer1_isr
    1d9c:	ff 91       	pop	r31
    1d9e:	ef 91       	pop	r30
    1da0:	df 91       	pop	r29
    1da2:	cf 91       	pop	r28
    1da4:	bf 91       	pop	r27
    1da6:	af 91       	pop	r26
    1da8:	9f 91       	pop	r25
    1daa:	8f 91       	pop	r24
    1dac:	7f 91       	pop	r23
    1dae:	6f 91       	pop	r22
    1db0:	5f 91       	pop	r21
    1db2:	4f 91       	pop	r20
    1db4:	3f 91       	pop	r19
    1db6:	2f 91       	pop	r18
    1db8:	0f 90       	pop	r0
    1dba:	0b be       	out	0x3b, r0	; 59
    1dbc:	0f 90       	pop	r0
    1dbe:	0f be       	out	0x3f, r0	; 63
    1dc0:	0f 90       	pop	r0
    1dc2:	1f 90       	pop	r1
    1dc4:	18 95       	reti

00001dc6 <main>:
/************************************************************************************************
 * Name: Main program, initialize all required ports, timers and UART. Loop infinitely.
 ************************************************************************************************/
int main(){
	
    DDRB |= (1<<PB7)|(1<<PB6)|(1<<PB5)|(1<<PB4);
    1dc6:	87 b3       	in	r24, 0x17	; 23
    1dc8:	80 6f       	ori	r24, 0xF0	; 240
    1dca:	87 bb       	out	0x17, r24	; 23
    DDRF = 0xFF;
    1dcc:	8f ef       	ldi	r24, 0xFF	; 255
    1dce:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    //DDRD |= (1<<PD0);   //SPI SS pin
    DDRD &= ~(1<<PD7)|(1<<PD6);  //Configure Port D Pin 7, 6 for input
    1dd2:	8f 98       	cbi	0x11, 7	; 17
    PORTD |= (1<<PD7);  //enable pull up
    1dd4:	97 9a       	sbi	0x12, 7	; 18
    timer1_init();      //initialize 16 bit timer
    1dd6:	f8 de       	rcall	.-528    	; 0x1bc8 <timer1_init>
    uart_init(MYUBBR);	//initialize uart
    1dd8:	8c e0       	ldi	r24, 0x0C	; 12
    1dda:	89 df       	rcall	.-238    	; 0x1cee <uart_init>
    sei();
    1ddc:	78 94       	sei

    while(1){
    }//while
    1dde:	ff cf       	rjmp	.-2      	; 0x1dde <main+0x18>

00001de0 <__subsf3>:
    1de0:	50 58       	subi	r21, 0x80	; 128

00001de2 <__addsf3>:
    1de2:	bb 27       	eor	r27, r27
    1de4:	aa 27       	eor	r26, r26
    1de6:	0e d0       	rcall	.+28     	; 0x1e04 <__addsf3x>
    1de8:	75 c1       	rjmp	.+746    	; 0x20d4 <__fp_round>
    1dea:	66 d1       	rcall	.+716    	; 0x20b8 <__fp_pscA>
    1dec:	30 f0       	brcs	.+12     	; 0x1dfa <__addsf3+0x18>
    1dee:	6b d1       	rcall	.+726    	; 0x20c6 <__fp_pscB>
    1df0:	20 f0       	brcs	.+8      	; 0x1dfa <__addsf3+0x18>
    1df2:	31 f4       	brne	.+12     	; 0x1e00 <__addsf3+0x1e>
    1df4:	9f 3f       	cpi	r25, 0xFF	; 255
    1df6:	11 f4       	brne	.+4      	; 0x1dfc <__addsf3+0x1a>
    1df8:	1e f4       	brtc	.+6      	; 0x1e00 <__addsf3+0x1e>
    1dfa:	5b c1       	rjmp	.+694    	; 0x20b2 <__fp_nan>
    1dfc:	0e f4       	brtc	.+2      	; 0x1e00 <__addsf3+0x1e>
    1dfe:	e0 95       	com	r30
    1e00:	e7 fb       	bst	r30, 7
    1e02:	51 c1       	rjmp	.+674    	; 0x20a6 <__fp_inf>

00001e04 <__addsf3x>:
    1e04:	e9 2f       	mov	r30, r25
    1e06:	77 d1       	rcall	.+750    	; 0x20f6 <__fp_split3>
    1e08:	80 f3       	brcs	.-32     	; 0x1dea <__addsf3+0x8>
    1e0a:	ba 17       	cp	r27, r26
    1e0c:	62 07       	cpc	r22, r18
    1e0e:	73 07       	cpc	r23, r19
    1e10:	84 07       	cpc	r24, r20
    1e12:	95 07       	cpc	r25, r21
    1e14:	18 f0       	brcs	.+6      	; 0x1e1c <__addsf3x+0x18>
    1e16:	71 f4       	brne	.+28     	; 0x1e34 <__addsf3x+0x30>
    1e18:	9e f5       	brtc	.+102    	; 0x1e80 <__addsf3x+0x7c>
    1e1a:	8f c1       	rjmp	.+798    	; 0x213a <__fp_zero>
    1e1c:	0e f4       	brtc	.+2      	; 0x1e20 <__addsf3x+0x1c>
    1e1e:	e0 95       	com	r30
    1e20:	0b 2e       	mov	r0, r27
    1e22:	ba 2f       	mov	r27, r26
    1e24:	a0 2d       	mov	r26, r0
    1e26:	0b 01       	movw	r0, r22
    1e28:	b9 01       	movw	r22, r18
    1e2a:	90 01       	movw	r18, r0
    1e2c:	0c 01       	movw	r0, r24
    1e2e:	ca 01       	movw	r24, r20
    1e30:	a0 01       	movw	r20, r0
    1e32:	11 24       	eor	r1, r1
    1e34:	ff 27       	eor	r31, r31
    1e36:	59 1b       	sub	r21, r25
    1e38:	99 f0       	breq	.+38     	; 0x1e60 <__addsf3x+0x5c>
    1e3a:	59 3f       	cpi	r21, 0xF9	; 249
    1e3c:	50 f4       	brcc	.+20     	; 0x1e52 <__addsf3x+0x4e>
    1e3e:	50 3e       	cpi	r21, 0xE0	; 224
    1e40:	68 f1       	brcs	.+90     	; 0x1e9c <__addsf3x+0x98>
    1e42:	1a 16       	cp	r1, r26
    1e44:	f0 40       	sbci	r31, 0x00	; 0
    1e46:	a2 2f       	mov	r26, r18
    1e48:	23 2f       	mov	r18, r19
    1e4a:	34 2f       	mov	r19, r20
    1e4c:	44 27       	eor	r20, r20
    1e4e:	58 5f       	subi	r21, 0xF8	; 248
    1e50:	f3 cf       	rjmp	.-26     	; 0x1e38 <__addsf3x+0x34>
    1e52:	46 95       	lsr	r20
    1e54:	37 95       	ror	r19
    1e56:	27 95       	ror	r18
    1e58:	a7 95       	ror	r26
    1e5a:	f0 40       	sbci	r31, 0x00	; 0
    1e5c:	53 95       	inc	r21
    1e5e:	c9 f7       	brne	.-14     	; 0x1e52 <__addsf3x+0x4e>
    1e60:	7e f4       	brtc	.+30     	; 0x1e80 <__addsf3x+0x7c>
    1e62:	1f 16       	cp	r1, r31
    1e64:	ba 0b       	sbc	r27, r26
    1e66:	62 0b       	sbc	r22, r18
    1e68:	73 0b       	sbc	r23, r19
    1e6a:	84 0b       	sbc	r24, r20
    1e6c:	ba f0       	brmi	.+46     	; 0x1e9c <__addsf3x+0x98>
    1e6e:	91 50       	subi	r25, 0x01	; 1
    1e70:	a1 f0       	breq	.+40     	; 0x1e9a <__addsf3x+0x96>
    1e72:	ff 0f       	add	r31, r31
    1e74:	bb 1f       	adc	r27, r27
    1e76:	66 1f       	adc	r22, r22
    1e78:	77 1f       	adc	r23, r23
    1e7a:	88 1f       	adc	r24, r24
    1e7c:	c2 f7       	brpl	.-16     	; 0x1e6e <__addsf3x+0x6a>
    1e7e:	0e c0       	rjmp	.+28     	; 0x1e9c <__addsf3x+0x98>
    1e80:	ba 0f       	add	r27, r26
    1e82:	62 1f       	adc	r22, r18
    1e84:	73 1f       	adc	r23, r19
    1e86:	84 1f       	adc	r24, r20
    1e88:	48 f4       	brcc	.+18     	; 0x1e9c <__addsf3x+0x98>
    1e8a:	87 95       	ror	r24
    1e8c:	77 95       	ror	r23
    1e8e:	67 95       	ror	r22
    1e90:	b7 95       	ror	r27
    1e92:	f7 95       	ror	r31
    1e94:	9e 3f       	cpi	r25, 0xFE	; 254
    1e96:	08 f0       	brcs	.+2      	; 0x1e9a <__addsf3x+0x96>
    1e98:	b3 cf       	rjmp	.-154    	; 0x1e00 <__addsf3+0x1e>
    1e9a:	93 95       	inc	r25
    1e9c:	88 0f       	add	r24, r24
    1e9e:	08 f0       	brcs	.+2      	; 0x1ea2 <__addsf3x+0x9e>
    1ea0:	99 27       	eor	r25, r25
    1ea2:	ee 0f       	add	r30, r30
    1ea4:	97 95       	ror	r25
    1ea6:	87 95       	ror	r24
    1ea8:	08 95       	ret

00001eaa <__cmpsf2>:
    1eaa:	d9 d0       	rcall	.+434    	; 0x205e <__fp_cmp>
    1eac:	08 f4       	brcc	.+2      	; 0x1eb0 <__cmpsf2+0x6>
    1eae:	81 e0       	ldi	r24, 0x01	; 1
    1eb0:	08 95       	ret

00001eb2 <__divsf3>:
    1eb2:	0c d0       	rcall	.+24     	; 0x1ecc <__divsf3x>
    1eb4:	0f c1       	rjmp	.+542    	; 0x20d4 <__fp_round>
    1eb6:	07 d1       	rcall	.+526    	; 0x20c6 <__fp_pscB>
    1eb8:	40 f0       	brcs	.+16     	; 0x1eca <__divsf3+0x18>
    1eba:	fe d0       	rcall	.+508    	; 0x20b8 <__fp_pscA>
    1ebc:	30 f0       	brcs	.+12     	; 0x1eca <__divsf3+0x18>
    1ebe:	21 f4       	brne	.+8      	; 0x1ec8 <__divsf3+0x16>
    1ec0:	5f 3f       	cpi	r21, 0xFF	; 255
    1ec2:	19 f0       	breq	.+6      	; 0x1eca <__divsf3+0x18>
    1ec4:	f0 c0       	rjmp	.+480    	; 0x20a6 <__fp_inf>
    1ec6:	51 11       	cpse	r21, r1
    1ec8:	39 c1       	rjmp	.+626    	; 0x213c <__fp_szero>
    1eca:	f3 c0       	rjmp	.+486    	; 0x20b2 <__fp_nan>

00001ecc <__divsf3x>:
    1ecc:	14 d1       	rcall	.+552    	; 0x20f6 <__fp_split3>
    1ece:	98 f3       	brcs	.-26     	; 0x1eb6 <__divsf3+0x4>

00001ed0 <__divsf3_pse>:
    1ed0:	99 23       	and	r25, r25
    1ed2:	c9 f3       	breq	.-14     	; 0x1ec6 <__divsf3+0x14>
    1ed4:	55 23       	and	r21, r21
    1ed6:	b1 f3       	breq	.-20     	; 0x1ec4 <__divsf3+0x12>
    1ed8:	95 1b       	sub	r25, r21
    1eda:	55 0b       	sbc	r21, r21
    1edc:	bb 27       	eor	r27, r27
    1ede:	aa 27       	eor	r26, r26
    1ee0:	62 17       	cp	r22, r18
    1ee2:	73 07       	cpc	r23, r19
    1ee4:	84 07       	cpc	r24, r20
    1ee6:	38 f0       	brcs	.+14     	; 0x1ef6 <__divsf3_pse+0x26>
    1ee8:	9f 5f       	subi	r25, 0xFF	; 255
    1eea:	5f 4f       	sbci	r21, 0xFF	; 255
    1eec:	22 0f       	add	r18, r18
    1eee:	33 1f       	adc	r19, r19
    1ef0:	44 1f       	adc	r20, r20
    1ef2:	aa 1f       	adc	r26, r26
    1ef4:	a9 f3       	breq	.-22     	; 0x1ee0 <__divsf3_pse+0x10>
    1ef6:	33 d0       	rcall	.+102    	; 0x1f5e <__divsf3_pse+0x8e>
    1ef8:	0e 2e       	mov	r0, r30
    1efa:	3a f0       	brmi	.+14     	; 0x1f0a <__divsf3_pse+0x3a>
    1efc:	e0 e8       	ldi	r30, 0x80	; 128
    1efe:	30 d0       	rcall	.+96     	; 0x1f60 <__divsf3_pse+0x90>
    1f00:	91 50       	subi	r25, 0x01	; 1
    1f02:	50 40       	sbci	r21, 0x00	; 0
    1f04:	e6 95       	lsr	r30
    1f06:	00 1c       	adc	r0, r0
    1f08:	ca f7       	brpl	.-14     	; 0x1efc <__divsf3_pse+0x2c>
    1f0a:	29 d0       	rcall	.+82     	; 0x1f5e <__divsf3_pse+0x8e>
    1f0c:	fe 2f       	mov	r31, r30
    1f0e:	27 d0       	rcall	.+78     	; 0x1f5e <__divsf3_pse+0x8e>
    1f10:	66 0f       	add	r22, r22
    1f12:	77 1f       	adc	r23, r23
    1f14:	88 1f       	adc	r24, r24
    1f16:	bb 1f       	adc	r27, r27
    1f18:	26 17       	cp	r18, r22
    1f1a:	37 07       	cpc	r19, r23
    1f1c:	48 07       	cpc	r20, r24
    1f1e:	ab 07       	cpc	r26, r27
    1f20:	b0 e8       	ldi	r27, 0x80	; 128
    1f22:	09 f0       	breq	.+2      	; 0x1f26 <__divsf3_pse+0x56>
    1f24:	bb 0b       	sbc	r27, r27
    1f26:	80 2d       	mov	r24, r0
    1f28:	bf 01       	movw	r22, r30
    1f2a:	ff 27       	eor	r31, r31
    1f2c:	93 58       	subi	r25, 0x83	; 131
    1f2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1f30:	2a f0       	brmi	.+10     	; 0x1f3c <__divsf3_pse+0x6c>
    1f32:	9e 3f       	cpi	r25, 0xFE	; 254
    1f34:	51 05       	cpc	r21, r1
    1f36:	68 f0       	brcs	.+26     	; 0x1f52 <__divsf3_pse+0x82>
    1f38:	b6 c0       	rjmp	.+364    	; 0x20a6 <__fp_inf>
    1f3a:	00 c1       	rjmp	.+512    	; 0x213c <__fp_szero>
    1f3c:	5f 3f       	cpi	r21, 0xFF	; 255
    1f3e:	ec f3       	brlt	.-6      	; 0x1f3a <__divsf3_pse+0x6a>
    1f40:	98 3e       	cpi	r25, 0xE8	; 232
    1f42:	dc f3       	brlt	.-10     	; 0x1f3a <__divsf3_pse+0x6a>
    1f44:	86 95       	lsr	r24
    1f46:	77 95       	ror	r23
    1f48:	67 95       	ror	r22
    1f4a:	b7 95       	ror	r27
    1f4c:	f7 95       	ror	r31
    1f4e:	9f 5f       	subi	r25, 0xFF	; 255
    1f50:	c9 f7       	brne	.-14     	; 0x1f44 <__divsf3_pse+0x74>
    1f52:	88 0f       	add	r24, r24
    1f54:	91 1d       	adc	r25, r1
    1f56:	96 95       	lsr	r25
    1f58:	87 95       	ror	r24
    1f5a:	97 f9       	bld	r25, 7
    1f5c:	08 95       	ret
    1f5e:	e1 e0       	ldi	r30, 0x01	; 1
    1f60:	66 0f       	add	r22, r22
    1f62:	77 1f       	adc	r23, r23
    1f64:	88 1f       	adc	r24, r24
    1f66:	bb 1f       	adc	r27, r27
    1f68:	62 17       	cp	r22, r18
    1f6a:	73 07       	cpc	r23, r19
    1f6c:	84 07       	cpc	r24, r20
    1f6e:	ba 07       	cpc	r27, r26
    1f70:	20 f0       	brcs	.+8      	; 0x1f7a <__divsf3_pse+0xaa>
    1f72:	62 1b       	sub	r22, r18
    1f74:	73 0b       	sbc	r23, r19
    1f76:	84 0b       	sbc	r24, r20
    1f78:	ba 0b       	sbc	r27, r26
    1f7a:	ee 1f       	adc	r30, r30
    1f7c:	88 f7       	brcc	.-30     	; 0x1f60 <__divsf3_pse+0x90>
    1f7e:	e0 95       	com	r30
    1f80:	08 95       	ret

00001f82 <__fixsfsi>:
    1f82:	04 d0       	rcall	.+8      	; 0x1f8c <__fixunssfsi>
    1f84:	68 94       	set
    1f86:	b1 11       	cpse	r27, r1
    1f88:	d9 c0       	rjmp	.+434    	; 0x213c <__fp_szero>
    1f8a:	08 95       	ret

00001f8c <__fixunssfsi>:
    1f8c:	bc d0       	rcall	.+376    	; 0x2106 <__fp_splitA>
    1f8e:	88 f0       	brcs	.+34     	; 0x1fb2 <__fixunssfsi+0x26>
    1f90:	9f 57       	subi	r25, 0x7F	; 127
    1f92:	90 f0       	brcs	.+36     	; 0x1fb8 <__fixunssfsi+0x2c>
    1f94:	b9 2f       	mov	r27, r25
    1f96:	99 27       	eor	r25, r25
    1f98:	b7 51       	subi	r27, 0x17	; 23
    1f9a:	a0 f0       	brcs	.+40     	; 0x1fc4 <__fixunssfsi+0x38>
    1f9c:	d1 f0       	breq	.+52     	; 0x1fd2 <__fixunssfsi+0x46>
    1f9e:	66 0f       	add	r22, r22
    1fa0:	77 1f       	adc	r23, r23
    1fa2:	88 1f       	adc	r24, r24
    1fa4:	99 1f       	adc	r25, r25
    1fa6:	1a f0       	brmi	.+6      	; 0x1fae <__fixunssfsi+0x22>
    1fa8:	ba 95       	dec	r27
    1faa:	c9 f7       	brne	.-14     	; 0x1f9e <__fixunssfsi+0x12>
    1fac:	12 c0       	rjmp	.+36     	; 0x1fd2 <__fixunssfsi+0x46>
    1fae:	b1 30       	cpi	r27, 0x01	; 1
    1fb0:	81 f0       	breq	.+32     	; 0x1fd2 <__fixunssfsi+0x46>
    1fb2:	c3 d0       	rcall	.+390    	; 0x213a <__fp_zero>
    1fb4:	b1 e0       	ldi	r27, 0x01	; 1
    1fb6:	08 95       	ret
    1fb8:	c0 c0       	rjmp	.+384    	; 0x213a <__fp_zero>
    1fba:	67 2f       	mov	r22, r23
    1fbc:	78 2f       	mov	r23, r24
    1fbe:	88 27       	eor	r24, r24
    1fc0:	b8 5f       	subi	r27, 0xF8	; 248
    1fc2:	39 f0       	breq	.+14     	; 0x1fd2 <__fixunssfsi+0x46>
    1fc4:	b9 3f       	cpi	r27, 0xF9	; 249
    1fc6:	cc f3       	brlt	.-14     	; 0x1fba <__fixunssfsi+0x2e>
    1fc8:	86 95       	lsr	r24
    1fca:	77 95       	ror	r23
    1fcc:	67 95       	ror	r22
    1fce:	b3 95       	inc	r27
    1fd0:	d9 f7       	brne	.-10     	; 0x1fc8 <__fixunssfsi+0x3c>
    1fd2:	3e f4       	brtc	.+14     	; 0x1fe2 <__fixunssfsi+0x56>
    1fd4:	90 95       	com	r25
    1fd6:	80 95       	com	r24
    1fd8:	70 95       	com	r23
    1fda:	61 95       	neg	r22
    1fdc:	7f 4f       	sbci	r23, 0xFF	; 255
    1fde:	8f 4f       	sbci	r24, 0xFF	; 255
    1fe0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe2:	08 95       	ret

00001fe4 <__floatunsisf>:
    1fe4:	e8 94       	clt
    1fe6:	09 c0       	rjmp	.+18     	; 0x1ffa <__floatsisf+0x12>

00001fe8 <__floatsisf>:
    1fe8:	97 fb       	bst	r25, 7
    1fea:	3e f4       	brtc	.+14     	; 0x1ffa <__floatsisf+0x12>
    1fec:	90 95       	com	r25
    1fee:	80 95       	com	r24
    1ff0:	70 95       	com	r23
    1ff2:	61 95       	neg	r22
    1ff4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ff6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ff8:	9f 4f       	sbci	r25, 0xFF	; 255
    1ffa:	99 23       	and	r25, r25
    1ffc:	a9 f0       	breq	.+42     	; 0x2028 <__floatsisf+0x40>
    1ffe:	f9 2f       	mov	r31, r25
    2000:	96 e9       	ldi	r25, 0x96	; 150
    2002:	bb 27       	eor	r27, r27
    2004:	93 95       	inc	r25
    2006:	f6 95       	lsr	r31
    2008:	87 95       	ror	r24
    200a:	77 95       	ror	r23
    200c:	67 95       	ror	r22
    200e:	b7 95       	ror	r27
    2010:	f1 11       	cpse	r31, r1
    2012:	f8 cf       	rjmp	.-16     	; 0x2004 <__floatsisf+0x1c>
    2014:	fa f4       	brpl	.+62     	; 0x2054 <__floatsisf+0x6c>
    2016:	bb 0f       	add	r27, r27
    2018:	11 f4       	brne	.+4      	; 0x201e <__floatsisf+0x36>
    201a:	60 ff       	sbrs	r22, 0
    201c:	1b c0       	rjmp	.+54     	; 0x2054 <__floatsisf+0x6c>
    201e:	6f 5f       	subi	r22, 0xFF	; 255
    2020:	7f 4f       	sbci	r23, 0xFF	; 255
    2022:	8f 4f       	sbci	r24, 0xFF	; 255
    2024:	9f 4f       	sbci	r25, 0xFF	; 255
    2026:	16 c0       	rjmp	.+44     	; 0x2054 <__floatsisf+0x6c>
    2028:	88 23       	and	r24, r24
    202a:	11 f0       	breq	.+4      	; 0x2030 <__floatsisf+0x48>
    202c:	96 e9       	ldi	r25, 0x96	; 150
    202e:	11 c0       	rjmp	.+34     	; 0x2052 <__floatsisf+0x6a>
    2030:	77 23       	and	r23, r23
    2032:	21 f0       	breq	.+8      	; 0x203c <__floatsisf+0x54>
    2034:	9e e8       	ldi	r25, 0x8E	; 142
    2036:	87 2f       	mov	r24, r23
    2038:	76 2f       	mov	r23, r22
    203a:	05 c0       	rjmp	.+10     	; 0x2046 <__floatsisf+0x5e>
    203c:	66 23       	and	r22, r22
    203e:	71 f0       	breq	.+28     	; 0x205c <__floatsisf+0x74>
    2040:	96 e8       	ldi	r25, 0x86	; 134
    2042:	86 2f       	mov	r24, r22
    2044:	70 e0       	ldi	r23, 0x00	; 0
    2046:	60 e0       	ldi	r22, 0x00	; 0
    2048:	2a f0       	brmi	.+10     	; 0x2054 <__floatsisf+0x6c>
    204a:	9a 95       	dec	r25
    204c:	66 0f       	add	r22, r22
    204e:	77 1f       	adc	r23, r23
    2050:	88 1f       	adc	r24, r24
    2052:	da f7       	brpl	.-10     	; 0x204a <__floatsisf+0x62>
    2054:	88 0f       	add	r24, r24
    2056:	96 95       	lsr	r25
    2058:	87 95       	ror	r24
    205a:	97 f9       	bld	r25, 7
    205c:	08 95       	ret

0000205e <__fp_cmp>:
    205e:	99 0f       	add	r25, r25
    2060:	00 08       	sbc	r0, r0
    2062:	55 0f       	add	r21, r21
    2064:	aa 0b       	sbc	r26, r26
    2066:	e0 e8       	ldi	r30, 0x80	; 128
    2068:	fe ef       	ldi	r31, 0xFE	; 254
    206a:	16 16       	cp	r1, r22
    206c:	17 06       	cpc	r1, r23
    206e:	e8 07       	cpc	r30, r24
    2070:	f9 07       	cpc	r31, r25
    2072:	c0 f0       	brcs	.+48     	; 0x20a4 <__fp_cmp+0x46>
    2074:	12 16       	cp	r1, r18
    2076:	13 06       	cpc	r1, r19
    2078:	e4 07       	cpc	r30, r20
    207a:	f5 07       	cpc	r31, r21
    207c:	98 f0       	brcs	.+38     	; 0x20a4 <__fp_cmp+0x46>
    207e:	62 1b       	sub	r22, r18
    2080:	73 0b       	sbc	r23, r19
    2082:	84 0b       	sbc	r24, r20
    2084:	95 0b       	sbc	r25, r21
    2086:	39 f4       	brne	.+14     	; 0x2096 <__fp_cmp+0x38>
    2088:	0a 26       	eor	r0, r26
    208a:	61 f0       	breq	.+24     	; 0x20a4 <__fp_cmp+0x46>
    208c:	23 2b       	or	r18, r19
    208e:	24 2b       	or	r18, r20
    2090:	25 2b       	or	r18, r21
    2092:	21 f4       	brne	.+8      	; 0x209c <__fp_cmp+0x3e>
    2094:	08 95       	ret
    2096:	0a 26       	eor	r0, r26
    2098:	09 f4       	brne	.+2      	; 0x209c <__fp_cmp+0x3e>
    209a:	a1 40       	sbci	r26, 0x01	; 1
    209c:	a6 95       	lsr	r26
    209e:	8f ef       	ldi	r24, 0xFF	; 255
    20a0:	81 1d       	adc	r24, r1
    20a2:	81 1d       	adc	r24, r1
    20a4:	08 95       	ret

000020a6 <__fp_inf>:
    20a6:	97 f9       	bld	r25, 7
    20a8:	9f 67       	ori	r25, 0x7F	; 127
    20aa:	80 e8       	ldi	r24, 0x80	; 128
    20ac:	70 e0       	ldi	r23, 0x00	; 0
    20ae:	60 e0       	ldi	r22, 0x00	; 0
    20b0:	08 95       	ret

000020b2 <__fp_nan>:
    20b2:	9f ef       	ldi	r25, 0xFF	; 255
    20b4:	80 ec       	ldi	r24, 0xC0	; 192
    20b6:	08 95       	ret

000020b8 <__fp_pscA>:
    20b8:	00 24       	eor	r0, r0
    20ba:	0a 94       	dec	r0
    20bc:	16 16       	cp	r1, r22
    20be:	17 06       	cpc	r1, r23
    20c0:	18 06       	cpc	r1, r24
    20c2:	09 06       	cpc	r0, r25
    20c4:	08 95       	ret

000020c6 <__fp_pscB>:
    20c6:	00 24       	eor	r0, r0
    20c8:	0a 94       	dec	r0
    20ca:	12 16       	cp	r1, r18
    20cc:	13 06       	cpc	r1, r19
    20ce:	14 06       	cpc	r1, r20
    20d0:	05 06       	cpc	r0, r21
    20d2:	08 95       	ret

000020d4 <__fp_round>:
    20d4:	09 2e       	mov	r0, r25
    20d6:	03 94       	inc	r0
    20d8:	00 0c       	add	r0, r0
    20da:	11 f4       	brne	.+4      	; 0x20e0 <__fp_round+0xc>
    20dc:	88 23       	and	r24, r24
    20de:	52 f0       	brmi	.+20     	; 0x20f4 <__fp_round+0x20>
    20e0:	bb 0f       	add	r27, r27
    20e2:	40 f4       	brcc	.+16     	; 0x20f4 <__fp_round+0x20>
    20e4:	bf 2b       	or	r27, r31
    20e6:	11 f4       	brne	.+4      	; 0x20ec <__fp_round+0x18>
    20e8:	60 ff       	sbrs	r22, 0
    20ea:	04 c0       	rjmp	.+8      	; 0x20f4 <__fp_round+0x20>
    20ec:	6f 5f       	subi	r22, 0xFF	; 255
    20ee:	7f 4f       	sbci	r23, 0xFF	; 255
    20f0:	8f 4f       	sbci	r24, 0xFF	; 255
    20f2:	9f 4f       	sbci	r25, 0xFF	; 255
    20f4:	08 95       	ret

000020f6 <__fp_split3>:
    20f6:	57 fd       	sbrc	r21, 7
    20f8:	90 58       	subi	r25, 0x80	; 128
    20fa:	44 0f       	add	r20, r20
    20fc:	55 1f       	adc	r21, r21
    20fe:	59 f0       	breq	.+22     	; 0x2116 <__fp_splitA+0x10>
    2100:	5f 3f       	cpi	r21, 0xFF	; 255
    2102:	71 f0       	breq	.+28     	; 0x2120 <__fp_splitA+0x1a>
    2104:	47 95       	ror	r20

00002106 <__fp_splitA>:
    2106:	88 0f       	add	r24, r24
    2108:	97 fb       	bst	r25, 7
    210a:	99 1f       	adc	r25, r25
    210c:	61 f0       	breq	.+24     	; 0x2126 <__fp_splitA+0x20>
    210e:	9f 3f       	cpi	r25, 0xFF	; 255
    2110:	79 f0       	breq	.+30     	; 0x2130 <__fp_splitA+0x2a>
    2112:	87 95       	ror	r24
    2114:	08 95       	ret
    2116:	12 16       	cp	r1, r18
    2118:	13 06       	cpc	r1, r19
    211a:	14 06       	cpc	r1, r20
    211c:	55 1f       	adc	r21, r21
    211e:	f2 cf       	rjmp	.-28     	; 0x2104 <__fp_split3+0xe>
    2120:	46 95       	lsr	r20
    2122:	f1 df       	rcall	.-30     	; 0x2106 <__fp_splitA>
    2124:	08 c0       	rjmp	.+16     	; 0x2136 <__fp_splitA+0x30>
    2126:	16 16       	cp	r1, r22
    2128:	17 06       	cpc	r1, r23
    212a:	18 06       	cpc	r1, r24
    212c:	99 1f       	adc	r25, r25
    212e:	f1 cf       	rjmp	.-30     	; 0x2112 <__fp_splitA+0xc>
    2130:	86 95       	lsr	r24
    2132:	71 05       	cpc	r23, r1
    2134:	61 05       	cpc	r22, r1
    2136:	08 94       	sec
    2138:	08 95       	ret

0000213a <__fp_zero>:
    213a:	e8 94       	clt

0000213c <__fp_szero>:
    213c:	bb 27       	eor	r27, r27
    213e:	66 27       	eor	r22, r22
    2140:	77 27       	eor	r23, r23
    2142:	cb 01       	movw	r24, r22
    2144:	97 f9       	bld	r25, 7
    2146:	08 95       	ret

00002148 <__gesf2>:
    2148:	8a df       	rcall	.-236    	; 0x205e <__fp_cmp>
    214a:	08 f4       	brcc	.+2      	; 0x214e <__gesf2+0x6>
    214c:	8f ef       	ldi	r24, 0xFF	; 255
    214e:	08 95       	ret

00002150 <__mulsf3>:
    2150:	0b d0       	rcall	.+22     	; 0x2168 <__mulsf3x>
    2152:	c0 cf       	rjmp	.-128    	; 0x20d4 <__fp_round>
    2154:	b1 df       	rcall	.-158    	; 0x20b8 <__fp_pscA>
    2156:	28 f0       	brcs	.+10     	; 0x2162 <__mulsf3+0x12>
    2158:	b6 df       	rcall	.-148    	; 0x20c6 <__fp_pscB>
    215a:	18 f0       	brcs	.+6      	; 0x2162 <__mulsf3+0x12>
    215c:	95 23       	and	r25, r21
    215e:	09 f0       	breq	.+2      	; 0x2162 <__mulsf3+0x12>
    2160:	a2 cf       	rjmp	.-188    	; 0x20a6 <__fp_inf>
    2162:	a7 cf       	rjmp	.-178    	; 0x20b2 <__fp_nan>
    2164:	11 24       	eor	r1, r1
    2166:	ea cf       	rjmp	.-44     	; 0x213c <__fp_szero>

00002168 <__mulsf3x>:
    2168:	c6 df       	rcall	.-116    	; 0x20f6 <__fp_split3>
    216a:	a0 f3       	brcs	.-24     	; 0x2154 <__mulsf3+0x4>

0000216c <__mulsf3_pse>:
    216c:	95 9f       	mul	r25, r21
    216e:	d1 f3       	breq	.-12     	; 0x2164 <__mulsf3+0x14>
    2170:	95 0f       	add	r25, r21
    2172:	50 e0       	ldi	r21, 0x00	; 0
    2174:	55 1f       	adc	r21, r21
    2176:	62 9f       	mul	r22, r18
    2178:	f0 01       	movw	r30, r0
    217a:	72 9f       	mul	r23, r18
    217c:	bb 27       	eor	r27, r27
    217e:	f0 0d       	add	r31, r0
    2180:	b1 1d       	adc	r27, r1
    2182:	63 9f       	mul	r22, r19
    2184:	aa 27       	eor	r26, r26
    2186:	f0 0d       	add	r31, r0
    2188:	b1 1d       	adc	r27, r1
    218a:	aa 1f       	adc	r26, r26
    218c:	64 9f       	mul	r22, r20
    218e:	66 27       	eor	r22, r22
    2190:	b0 0d       	add	r27, r0
    2192:	a1 1d       	adc	r26, r1
    2194:	66 1f       	adc	r22, r22
    2196:	82 9f       	mul	r24, r18
    2198:	22 27       	eor	r18, r18
    219a:	b0 0d       	add	r27, r0
    219c:	a1 1d       	adc	r26, r1
    219e:	62 1f       	adc	r22, r18
    21a0:	73 9f       	mul	r23, r19
    21a2:	b0 0d       	add	r27, r0
    21a4:	a1 1d       	adc	r26, r1
    21a6:	62 1f       	adc	r22, r18
    21a8:	83 9f       	mul	r24, r19
    21aa:	a0 0d       	add	r26, r0
    21ac:	61 1d       	adc	r22, r1
    21ae:	22 1f       	adc	r18, r18
    21b0:	74 9f       	mul	r23, r20
    21b2:	33 27       	eor	r19, r19
    21b4:	a0 0d       	add	r26, r0
    21b6:	61 1d       	adc	r22, r1
    21b8:	23 1f       	adc	r18, r19
    21ba:	84 9f       	mul	r24, r20
    21bc:	60 0d       	add	r22, r0
    21be:	21 1d       	adc	r18, r1
    21c0:	82 2f       	mov	r24, r18
    21c2:	76 2f       	mov	r23, r22
    21c4:	6a 2f       	mov	r22, r26
    21c6:	11 24       	eor	r1, r1
    21c8:	9f 57       	subi	r25, 0x7F	; 127
    21ca:	50 40       	sbci	r21, 0x00	; 0
    21cc:	8a f0       	brmi	.+34     	; 0x21f0 <__mulsf3_pse+0x84>
    21ce:	e1 f0       	breq	.+56     	; 0x2208 <__mulsf3_pse+0x9c>
    21d0:	88 23       	and	r24, r24
    21d2:	4a f0       	brmi	.+18     	; 0x21e6 <__mulsf3_pse+0x7a>
    21d4:	ee 0f       	add	r30, r30
    21d6:	ff 1f       	adc	r31, r31
    21d8:	bb 1f       	adc	r27, r27
    21da:	66 1f       	adc	r22, r22
    21dc:	77 1f       	adc	r23, r23
    21de:	88 1f       	adc	r24, r24
    21e0:	91 50       	subi	r25, 0x01	; 1
    21e2:	50 40       	sbci	r21, 0x00	; 0
    21e4:	a9 f7       	brne	.-22     	; 0x21d0 <__mulsf3_pse+0x64>
    21e6:	9e 3f       	cpi	r25, 0xFE	; 254
    21e8:	51 05       	cpc	r21, r1
    21ea:	70 f0       	brcs	.+28     	; 0x2208 <__mulsf3_pse+0x9c>
    21ec:	5c cf       	rjmp	.-328    	; 0x20a6 <__fp_inf>
    21ee:	a6 cf       	rjmp	.-180    	; 0x213c <__fp_szero>
    21f0:	5f 3f       	cpi	r21, 0xFF	; 255
    21f2:	ec f3       	brlt	.-6      	; 0x21ee <__mulsf3_pse+0x82>
    21f4:	98 3e       	cpi	r25, 0xE8	; 232
    21f6:	dc f3       	brlt	.-10     	; 0x21ee <__mulsf3_pse+0x82>
    21f8:	86 95       	lsr	r24
    21fa:	77 95       	ror	r23
    21fc:	67 95       	ror	r22
    21fe:	b7 95       	ror	r27
    2200:	f7 95       	ror	r31
    2202:	e7 95       	ror	r30
    2204:	9f 5f       	subi	r25, 0xFF	; 255
    2206:	c1 f7       	brne	.-16     	; 0x21f8 <__mulsf3_pse+0x8c>
    2208:	fe 2b       	or	r31, r30
    220a:	88 0f       	add	r24, r24
    220c:	91 1d       	adc	r25, r1
    220e:	96 95       	lsr	r25
    2210:	87 95       	ror	r24
    2212:	97 f9       	bld	r25, 7
    2214:	08 95       	ret

00002216 <__tablejump2__>:
    2216:	ee 0f       	add	r30, r30
    2218:	ff 1f       	adc	r31, r31
    221a:	00 24       	eor	r0, r0
    221c:	00 1c       	adc	r0, r0
    221e:	0b be       	out	0x3b, r0	; 59
    2220:	07 90       	elpm	r0, Z+
    2222:	f6 91       	elpm	r31, Z
    2224:	e0 2d       	mov	r30, r0
    2226:	09 94       	ijmp

00002228 <memcpy>:
    2228:	fb 01       	movw	r30, r22
    222a:	dc 01       	movw	r26, r24
    222c:	02 c0       	rjmp	.+4      	; 0x2232 <memcpy+0xa>
    222e:	01 90       	ld	r0, Z+
    2230:	0d 92       	st	X+, r0
    2232:	41 50       	subi	r20, 0x01	; 1
    2234:	50 40       	sbci	r21, 0x00	; 0
    2236:	d8 f7       	brcc	.-10     	; 0x222e <memcpy+0x6>
    2238:	08 95       	ret

0000223a <_exit>:
    223a:	f8 94       	cli

0000223c <__stop_program>:
    223c:	ff cf       	rjmp	.-2      	; 0x223c <__stop_program>
