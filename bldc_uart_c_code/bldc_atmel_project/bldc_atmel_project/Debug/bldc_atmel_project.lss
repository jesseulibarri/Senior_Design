
bldc_atmel_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000006ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000656  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  00800100  00800100  000006ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000738  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c64  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c5  00000000  00000000  000013f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000698  00000000  00000000  00001db9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00002454  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008477  00000000  00000000  0000257c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003e3  00000000  00000000  0000a9f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  0000add6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000048f  00000000  00000000  0000ae1e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	08 c1       	rjmp	.+528    	; 0x24a <__vector_14>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e5       	ldi	r30, 0x56	; 86
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 31       	cpi	r26, 0x1E	; 30
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	38 d1       	rcall	.+624    	; 0x334 <main>
  c4:	c6 c2       	rjmp	.+1420   	; 0x652 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <timer1_init>:
    DDRD |= (1<<PD0);   //SPI SS pin
    DDRD &= ~(1<<PD7)|(1<<PD6);  //Configure Port D Pin 7, 6 for input
    PORTD |= (1<<PD7);  //enable pullup
    timer1_init();      //initialize 16 bit timer
    uart_init(MYUBBR);	//initialize uart
    sei();
  c8:	8f b5       	in	r24, 0x2f	; 47
  ca:	83 60       	ori	r24, 0x03	; 3
  cc:	8f bd       	out	0x2f, r24	; 47
  ce:	8e b5       	in	r24, 0x2e	; 46
  d0:	88 61       	ori	r24, 0x18	; 24
  d2:	8e bd       	out	0x2e, r24	; 46
  d4:	8e b5       	in	r24, 0x2e	; 46
  d6:	83 60       	ori	r24, 0x03	; 3
  d8:	8e bd       	out	0x2e, r24	; 46
  da:	87 ea       	ldi	r24, 0xA7	; 167
  dc:	91 e6       	ldi	r25, 0x61	; 97
  de:	9b bd       	out	0x2b, r25	; 43
  e0:	8a bd       	out	0x2a, r24	; 42
  e2:	87 b7       	in	r24, 0x37	; 55
  e4:	84 60       	ori	r24, 0x04	; 4
  e6:	87 bf       	out	0x37, r24	; 55
  e8:	08 95       	ret

000000ea <motor_torque>:
  ea:	8f 92       	push	r8
  ec:	9f 92       	push	r9
  ee:	af 92       	push	r10
  f0:	bf 92       	push	r11
  f2:	cf 92       	push	r12
  f4:	df 92       	push	r13
  f6:	ef 92       	push	r14
  f8:	ff 92       	push	r15
  fa:	0f 93       	push	r16
  fc:	1f 93       	push	r17
  fe:	cf 93       	push	r28
 100:	7c 01       	movw	r14, r24
 102:	6b 01       	movw	r12, r22
 104:	8a 01       	movw	r16, r20
 106:	c0 b3       	in	r28, 0x10	; 16
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	40 e0       	ldi	r20, 0x00	; 0
 10e:	5f e3       	ldi	r21, 0x3F	; 63
 110:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_end>
 114:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_end+0x1>
 118:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end+0x2>
 11c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x3>
 120:	17 d1       	rcall	.+558    	; 0x350 <__addsf3>
 122:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_end>
 126:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_end+0x1>
 12a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end+0x2>
 12e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x3>
 132:	f8 01       	movw	r30, r16
 134:	11 82       	std	Z+1, r1	; 0x01
 136:	10 82       	st	Z, r1
 138:	2c 2f       	mov	r18, r28
 13a:	2f 67       	ori	r18, 0x7F	; 127
 13c:	23 30       	cpi	r18, 0x03	; 3
 13e:	09 f4       	brne	.+2      	; 0x142 <motor_torque+0x58>
 140:	4a c0       	rjmp	.+148    	; 0x1d6 <motor_torque+0xec>
 142:	2f 37       	cpi	r18, 0x7F	; 127
 144:	19 f0       	breq	.+6      	; 0x14c <motor_torque+0x62>
 146:	21 11       	cpse	r18, r1
 148:	2e c0       	rjmp	.+92     	; 0x1a6 <motor_torque+0xbc>
 14a:	45 c0       	rjmp	.+138    	; 0x1d6 <motor_torque+0xec>
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	48 ec       	ldi	r20, 0xC8	; 200
 152:	51 e4       	ldi	r21, 0x41	; 65
 154:	17 d2       	rcall	.+1070   	; 0x584 <__gesf2>
 156:	18 16       	cp	r1, r24
 158:	64 f4       	brge	.+24     	; 0x172 <motor_torque+0x88>
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	a8 ec       	ldi	r26, 0xC8	; 200
 160:	b1 e4       	ldi	r27, 0x41	; 65
 162:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 166:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 16a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_end+0x2>
 16e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_end+0x3>
 172:	80 90 00 01 	lds	r8, 0x0100	; 0x800100 <__data_end>
 176:	90 90 01 01 	lds	r9, 0x0101	; 0x800101 <__data_end+0x1>
 17a:	a0 90 02 01 	lds	r10, 0x0102	; 0x800102 <__data_end+0x2>
 17e:	b0 90 03 01 	lds	r11, 0x0103	; 0x800103 <__data_end+0x3>
 182:	26 ea       	ldi	r18, 0xA6	; 166
 184:	3d ee       	ldi	r19, 0xED	; 237
 186:	4f e7       	ldi	r20, 0x7F	; 127
 188:	5f e3       	ldi	r21, 0x3F	; 63
 18a:	c5 01       	movw	r24, r10
 18c:	b4 01       	movw	r22, r8
 18e:	fe d1       	rcall	.+1020   	; 0x58c <__mulsf3>
 190:	f7 01       	movw	r30, r14
 192:	60 83       	st	Z, r22
 194:	71 83       	std	Z+1, r23	; 0x01
 196:	82 83       	std	Z+2, r24	; 0x02
 198:	93 83       	std	Z+3, r25	; 0x03
 19a:	f6 01       	movw	r30, r12
 19c:	80 82       	st	Z, r8
 19e:	91 82       	std	Z+1, r9	; 0x01
 1a0:	a2 82       	std	Z+2, r10	; 0x02
 1a2:	b3 82       	std	Z+3, r11	; 0x03
 1a4:	18 c0       	rjmp	.+48     	; 0x1d6 <motor_torque+0xec>
 1a6:	20 e0       	ldi	r18, 0x00	; 0
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	a9 01       	movw	r20, r18
 1ac:	35 d1       	rcall	.+618    	; 0x418 <__cmpsf2>
 1ae:	88 23       	and	r24, r24
 1b0:	91 f0       	breq	.+36     	; 0x1d6 <motor_torque+0xec>
 1b2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_end>
 1b6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_end+0x1>
 1ba:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end+0x2>
 1be:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x3>
 1c2:	f6 01       	movw	r30, r12
 1c4:	10 82       	st	Z, r1
 1c6:	11 82       	std	Z+1, r1	; 0x01
 1c8:	12 82       	std	Z+2, r1	; 0x02
 1ca:	13 82       	std	Z+3, r1	; 0x03
 1cc:	f7 01       	movw	r30, r14
 1ce:	10 82       	st	Z, r1
 1d0:	11 82       	std	Z+1, r1	; 0x01
 1d2:	12 82       	std	Z+2, r1	; 0x02
 1d4:	13 82       	std	Z+3, r1	; 0x03
 1d6:	cf 91       	pop	r28
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	ff 90       	pop	r15
 1de:	ef 90       	pop	r14
 1e0:	df 90       	pop	r13
 1e2:	cf 90       	pop	r12
 1e4:	bf 90       	pop	r11
 1e6:	af 90       	pop	r10
 1e8:	9f 90       	pop	r9
 1ea:	8f 90       	pop	r8
 1ec:	08 95       	ret

000001ee <uart_init>:
 1ee:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 1f2:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 1f6:	88 e1       	ldi	r24, 0x18	; 24
 1f8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 1fc:	ed e9       	ldi	r30, 0x9D	; 157
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	8e 60       	ori	r24, 0x0E	; 14
 204:	80 83       	st	Z, r24
 206:	08 95       	ret

00000208 <uart_transmit>:
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
 20c:	9c 01       	movw	r18, r24
 20e:	eb e9       	ldi	r30, 0x9B	; 155
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	90 81       	ld	r25, Z
 214:	95 ff       	sbrs	r25, 5
 216:	fd cf       	rjmp	.-6      	; 0x212 <uart_transmit+0xa>
 218:	16 16       	cp	r1, r22
 21a:	17 06       	cpc	r1, r23
 21c:	9c f4       	brge	.+38     	; 0x244 <uart_transmit+0x3c>
 21e:	d9 01       	movw	r26, r18
 220:	62 0f       	add	r22, r18
 222:	73 1f       	adc	r23, r19
 224:	cc e9       	ldi	r28, 0x9C	; 156
 226:	d0 e0       	ldi	r29, 0x00	; 0
 228:	eb e9       	ldi	r30, 0x9B	; 155
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	9d 91       	ld	r25, X+
 22e:	98 83       	st	Y, r25
 230:	90 81       	ld	r25, Z
 232:	95 ff       	sbrs	r25, 5
 234:	fd cf       	rjmp	.-6      	; 0x230 <uart_transmit+0x28>
 236:	81 e2       	ldi	r24, 0x21	; 33
 238:	8a 95       	dec	r24
 23a:	f1 f7       	brne	.-4      	; 0x238 <uart_transmit+0x30>
 23c:	00 00       	nop
 23e:	a6 17       	cp	r26, r22
 240:	b7 07       	cpc	r27, r23
 242:	a1 f7       	brne	.-24     	; 0x22c <uart_transmit+0x24>
 244:	df 91       	pop	r29
 246:	cf 91       	pop	r28
 248:	08 95       	ret

0000024a <__vector_14>:
}//program_init

/************************************************************************************************
 * Name: ISR for 16-bit timer
 ************************************************************************************************/
ISR(TIMER1_OVF_vect){
 24a:	1f 92       	push	r1
 24c:	0f 92       	push	r0
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	0f 92       	push	r0
 252:	11 24       	eor	r1, r1
 254:	0b b6       	in	r0, 0x3b	; 59
 256:	0f 92       	push	r0
 258:	2f 93       	push	r18
 25a:	3f 93       	push	r19
 25c:	4f 93       	push	r20
 25e:	5f 93       	push	r21
 260:	6f 93       	push	r22
 262:	7f 93       	push	r23
 264:	8f 93       	push	r24
 266:	9f 93       	push	r25
 268:	af 93       	push	r26
 26a:	bf 93       	push	r27
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	ef 93       	push	r30
 272:	ff 93       	push	r31
	
	//ISR for the 16 bit timer
    PORTB ^= (1<<PB7);
 274:	88 b3       	in	r24, 0x18	; 24
 276:	80 58       	subi	r24, 0x80	; 128
 278:	88 bb       	out	0x18, r24	; 24
    PORTF |= (1<<PF0);
 27a:	c2 e6       	ldi	r28, 0x62	; 98
 27c:	d0 e0       	ldi	r29, 0x00	; 0
 27e:	88 81       	ld	r24, Y
 280:	81 60       	ori	r24, 0x01	; 1
 282:	88 83       	st	Y, r24
    motor_torque(&torque_right, &torque_left, &steering_angle);	//Update motor torques
 284:	48 e0       	ldi	r20, 0x08	; 8
 286:	51 e0       	ldi	r21, 0x01	; 1
 288:	6a e0       	ldi	r22, 0x0A	; 10
 28a:	71 e0       	ldi	r23, 0x01	; 1
 28c:	8e e0       	ldi	r24, 0x0E	; 14
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	2c df       	rcall	.-424    	; 0xea <motor_torque>
    steering_angle_float = (float)steering_angle;
 292:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <steering_angle>
 296:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <steering_angle+0x1>
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	c0 d0       	rcall	.+384    	; 0x420 <__floatunsisf>
 2a0:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <steering_angle_float>
 2a4:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <steering_angle_float+0x1>
 2a8:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <steering_angle_float+0x2>
 2ac:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <steering_angle_float+0x3>
    union {
        float a;
        unsigned char bytes[4];
    } u;
    u.a = *src;
    memcpy(dest, u.bytes, 4);
 2b0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <torque_right>
 2b4:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <torque_right+0x1>
 2b8:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <torque_right+0x2>
 2bc:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <torque_right+0x3>
 2c0:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <torque_r_bytes>
 2c4:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <torque_r_bytes+0x1>
 2c8:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <torque_r_bytes+0x2>
 2cc:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <torque_r_bytes+0x3>
 2d0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <torque_left>
 2d4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <torque_left+0x1>
 2d8:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <torque_left+0x2>
 2dc:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <torque_left+0x3>
 2e0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <torque_l_bytes>
 2e4:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <torque_l_bytes+0x1>
 2e8:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <torque_l_bytes+0x2>
 2ec:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <torque_l_bytes+0x3>

    float_to_bytes(&torque_right, torque_r_bytes);
    float_to_bytes(&torque_left, torque_l_bytes);
    //float_to_bytes(&steering_angle_float, steering_angle_bytes);

    uart_transmit(torque_r_bytes,4);		//transmit right torque value - float, 4 bytes
 2f0:	64 e0       	ldi	r22, 0x04	; 4
 2f2:	70 e0       	ldi	r23, 0x00	; 0
 2f4:	86 e1       	ldi	r24, 0x16	; 22
 2f6:	91 e0       	ldi	r25, 0x01	; 1
 2f8:	87 df       	rcall	.-242    	; 0x208 <uart_transmit>
    uart_transmit(torque_l_bytes,4);    		//transmit left torque value - float, 4 bytes
 2fa:	64 e0       	ldi	r22, 0x04	; 4
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	82 e1       	ldi	r24, 0x12	; 18
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	82 df       	rcall	.-252    	; 0x208 <uart_transmit>
    //uart_transmit(steering_angle_bytes,4);		//transmit steering encoder value - uint16, 2 bytes

//    spi_init();					//Used to initalize SPI for LCD screen if being used
    PORTF &= ~(1<<PF0);
 304:	88 81       	ld	r24, Y
 306:	8e 7f       	andi	r24, 0xFE	; 254
 308:	88 83       	st	Y, r24
}//timer1_isr
 30a:	ff 91       	pop	r31
 30c:	ef 91       	pop	r30
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	bf 91       	pop	r27
 314:	af 91       	pop	r26
 316:	9f 91       	pop	r25
 318:	8f 91       	pop	r24
 31a:	7f 91       	pop	r23
 31c:	6f 91       	pop	r22
 31e:	5f 91       	pop	r21
 320:	4f 91       	pop	r20
 322:	3f 91       	pop	r19
 324:	2f 91       	pop	r18
 326:	0f 90       	pop	r0
 328:	0b be       	out	0x3b, r0	; 59
 32a:	0f 90       	pop	r0
 32c:	0f be       	out	0x3f, r0	; 63
 32e:	0f 90       	pop	r0
 330:	1f 90       	pop	r1
 332:	18 95       	reti

00000334 <main>:
/************************************************************************************************
 * Name: Main program, initalize all required ports, timers and UART. Loop infinitely.
 ************************************************************************************************/
int main(){
	
    DDRB |= (1<<PB7)|(1<<PB6)|(1<<PB5)|(1<<PB4);
 334:	87 b3       	in	r24, 0x17	; 23
 336:	80 6f       	ori	r24, 0xF0	; 240
 338:	87 bb       	out	0x17, r24	; 23
    DDRF = 0xFF;
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    //DDRD |= (1<<PD0);   //SPI SS pin
    DDRD &= ~(1<<PD7)|(1<<PD6);  //Configure Port D Pin 7, 6 for input
 340:	8f 98       	cbi	0x11, 7	; 17
    PORTD |= (1<<PD7);  //enable pullup
 342:	97 9a       	sbi	0x12, 7	; 18
    timer1_init();      //initialize 16 bit timer
 344:	c1 de       	rcall	.-638    	; 0xc8 <timer1_init>
    uart_init(MYUBBR);	//initialize uart
 346:	8c e0       	ldi	r24, 0x0C	; 12
 348:	52 df       	rcall	.-348    	; 0x1ee <uart_init>
    sei();
 34a:	78 94       	sei

    while(1){
    }//while
 34c:	ff cf       	rjmp	.-2      	; 0x34c <main+0x18>

0000034e <__subsf3>:
 34e:	50 58       	subi	r21, 0x80	; 128

00000350 <__addsf3>:
 350:	bb 27       	eor	r27, r27
 352:	aa 27       	eor	r26, r26
 354:	0e d0       	rcall	.+28     	; 0x372 <__addsf3x>
 356:	dc c0       	rjmp	.+440    	; 0x510 <__fp_round>
 358:	cd d0       	rcall	.+410    	; 0x4f4 <__fp_pscA>
 35a:	30 f0       	brcs	.+12     	; 0x368 <__addsf3+0x18>
 35c:	d2 d0       	rcall	.+420    	; 0x502 <__fp_pscB>
 35e:	20 f0       	brcs	.+8      	; 0x368 <__addsf3+0x18>
 360:	31 f4       	brne	.+12     	; 0x36e <__addsf3+0x1e>
 362:	9f 3f       	cpi	r25, 0xFF	; 255
 364:	11 f4       	brne	.+4      	; 0x36a <__addsf3+0x1a>
 366:	1e f4       	brtc	.+6      	; 0x36e <__addsf3+0x1e>
 368:	c2 c0       	rjmp	.+388    	; 0x4ee <__fp_nan>
 36a:	0e f4       	brtc	.+2      	; 0x36e <__addsf3+0x1e>
 36c:	e0 95       	com	r30
 36e:	e7 fb       	bst	r30, 7
 370:	b8 c0       	rjmp	.+368    	; 0x4e2 <__fp_inf>

00000372 <__addsf3x>:
 372:	e9 2f       	mov	r30, r25
 374:	de d0       	rcall	.+444    	; 0x532 <__fp_split3>
 376:	80 f3       	brcs	.-32     	; 0x358 <__addsf3+0x8>
 378:	ba 17       	cp	r27, r26
 37a:	62 07       	cpc	r22, r18
 37c:	73 07       	cpc	r23, r19
 37e:	84 07       	cpc	r24, r20
 380:	95 07       	cpc	r25, r21
 382:	18 f0       	brcs	.+6      	; 0x38a <__addsf3x+0x18>
 384:	71 f4       	brne	.+28     	; 0x3a2 <__addsf3x+0x30>
 386:	9e f5       	brtc	.+102    	; 0x3ee <__addsf3x+0x7c>
 388:	f6 c0       	rjmp	.+492    	; 0x576 <__fp_zero>
 38a:	0e f4       	brtc	.+2      	; 0x38e <__addsf3x+0x1c>
 38c:	e0 95       	com	r30
 38e:	0b 2e       	mov	r0, r27
 390:	ba 2f       	mov	r27, r26
 392:	a0 2d       	mov	r26, r0
 394:	0b 01       	movw	r0, r22
 396:	b9 01       	movw	r22, r18
 398:	90 01       	movw	r18, r0
 39a:	0c 01       	movw	r0, r24
 39c:	ca 01       	movw	r24, r20
 39e:	a0 01       	movw	r20, r0
 3a0:	11 24       	eor	r1, r1
 3a2:	ff 27       	eor	r31, r31
 3a4:	59 1b       	sub	r21, r25
 3a6:	99 f0       	breq	.+38     	; 0x3ce <__addsf3x+0x5c>
 3a8:	59 3f       	cpi	r21, 0xF9	; 249
 3aa:	50 f4       	brcc	.+20     	; 0x3c0 <__addsf3x+0x4e>
 3ac:	50 3e       	cpi	r21, 0xE0	; 224
 3ae:	68 f1       	brcs	.+90     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3b0:	1a 16       	cp	r1, r26
 3b2:	f0 40       	sbci	r31, 0x00	; 0
 3b4:	a2 2f       	mov	r26, r18
 3b6:	23 2f       	mov	r18, r19
 3b8:	34 2f       	mov	r19, r20
 3ba:	44 27       	eor	r20, r20
 3bc:	58 5f       	subi	r21, 0xF8	; 248
 3be:	f3 cf       	rjmp	.-26     	; 0x3a6 <__addsf3x+0x34>
 3c0:	46 95       	lsr	r20
 3c2:	37 95       	ror	r19
 3c4:	27 95       	ror	r18
 3c6:	a7 95       	ror	r26
 3c8:	f0 40       	sbci	r31, 0x00	; 0
 3ca:	53 95       	inc	r21
 3cc:	c9 f7       	brne	.-14     	; 0x3c0 <__addsf3x+0x4e>
 3ce:	7e f4       	brtc	.+30     	; 0x3ee <__addsf3x+0x7c>
 3d0:	1f 16       	cp	r1, r31
 3d2:	ba 0b       	sbc	r27, r26
 3d4:	62 0b       	sbc	r22, r18
 3d6:	73 0b       	sbc	r23, r19
 3d8:	84 0b       	sbc	r24, r20
 3da:	ba f0       	brmi	.+46     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3dc:	91 50       	subi	r25, 0x01	; 1
 3de:	a1 f0       	breq	.+40     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3e0:	ff 0f       	add	r31, r31
 3e2:	bb 1f       	adc	r27, r27
 3e4:	66 1f       	adc	r22, r22
 3e6:	77 1f       	adc	r23, r23
 3e8:	88 1f       	adc	r24, r24
 3ea:	c2 f7       	brpl	.-16     	; 0x3dc <__addsf3x+0x6a>
 3ec:	0e c0       	rjmp	.+28     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ee:	ba 0f       	add	r27, r26
 3f0:	62 1f       	adc	r22, r18
 3f2:	73 1f       	adc	r23, r19
 3f4:	84 1f       	adc	r24, r20
 3f6:	48 f4       	brcc	.+18     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f8:	87 95       	ror	r24
 3fa:	77 95       	ror	r23
 3fc:	67 95       	ror	r22
 3fe:	b7 95       	ror	r27
 400:	f7 95       	ror	r31
 402:	9e 3f       	cpi	r25, 0xFE	; 254
 404:	08 f0       	brcs	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 406:	b3 cf       	rjmp	.-154    	; 0x36e <__addsf3+0x1e>
 408:	93 95       	inc	r25
 40a:	88 0f       	add	r24, r24
 40c:	08 f0       	brcs	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40e:	99 27       	eor	r25, r25
 410:	ee 0f       	add	r30, r30
 412:	97 95       	ror	r25
 414:	87 95       	ror	r24
 416:	08 95       	ret

00000418 <__cmpsf2>:
 418:	40 d0       	rcall	.+128    	; 0x49a <__fp_cmp>
 41a:	08 f4       	brcc	.+2      	; 0x41e <__cmpsf2+0x6>
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	08 95       	ret

00000420 <__floatunsisf>:
 420:	e8 94       	clt
 422:	09 c0       	rjmp	.+18     	; 0x436 <__floatsisf+0x12>

00000424 <__floatsisf>:
 424:	97 fb       	bst	r25, 7
 426:	3e f4       	brtc	.+14     	; 0x436 <__floatsisf+0x12>
 428:	90 95       	com	r25
 42a:	80 95       	com	r24
 42c:	70 95       	com	r23
 42e:	61 95       	neg	r22
 430:	7f 4f       	sbci	r23, 0xFF	; 255
 432:	8f 4f       	sbci	r24, 0xFF	; 255
 434:	9f 4f       	sbci	r25, 0xFF	; 255
 436:	99 23       	and	r25, r25
 438:	a9 f0       	breq	.+42     	; 0x464 <__floatsisf+0x40>
 43a:	f9 2f       	mov	r31, r25
 43c:	96 e9       	ldi	r25, 0x96	; 150
 43e:	bb 27       	eor	r27, r27
 440:	93 95       	inc	r25
 442:	f6 95       	lsr	r31
 444:	87 95       	ror	r24
 446:	77 95       	ror	r23
 448:	67 95       	ror	r22
 44a:	b7 95       	ror	r27
 44c:	f1 11       	cpse	r31, r1
 44e:	f8 cf       	rjmp	.-16     	; 0x440 <__floatsisf+0x1c>
 450:	fa f4       	brpl	.+62     	; 0x490 <__floatsisf+0x6c>
 452:	bb 0f       	add	r27, r27
 454:	11 f4       	brne	.+4      	; 0x45a <__floatsisf+0x36>
 456:	60 ff       	sbrs	r22, 0
 458:	1b c0       	rjmp	.+54     	; 0x490 <__floatsisf+0x6c>
 45a:	6f 5f       	subi	r22, 0xFF	; 255
 45c:	7f 4f       	sbci	r23, 0xFF	; 255
 45e:	8f 4f       	sbci	r24, 0xFF	; 255
 460:	9f 4f       	sbci	r25, 0xFF	; 255
 462:	16 c0       	rjmp	.+44     	; 0x490 <__floatsisf+0x6c>
 464:	88 23       	and	r24, r24
 466:	11 f0       	breq	.+4      	; 0x46c <__floatsisf+0x48>
 468:	96 e9       	ldi	r25, 0x96	; 150
 46a:	11 c0       	rjmp	.+34     	; 0x48e <__floatsisf+0x6a>
 46c:	77 23       	and	r23, r23
 46e:	21 f0       	breq	.+8      	; 0x478 <__floatsisf+0x54>
 470:	9e e8       	ldi	r25, 0x8E	; 142
 472:	87 2f       	mov	r24, r23
 474:	76 2f       	mov	r23, r22
 476:	05 c0       	rjmp	.+10     	; 0x482 <__floatsisf+0x5e>
 478:	66 23       	and	r22, r22
 47a:	71 f0       	breq	.+28     	; 0x498 <__floatsisf+0x74>
 47c:	96 e8       	ldi	r25, 0x86	; 134
 47e:	86 2f       	mov	r24, r22
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	2a f0       	brmi	.+10     	; 0x490 <__floatsisf+0x6c>
 486:	9a 95       	dec	r25
 488:	66 0f       	add	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	88 1f       	adc	r24, r24
 48e:	da f7       	brpl	.-10     	; 0x486 <__floatsisf+0x62>
 490:	88 0f       	add	r24, r24
 492:	96 95       	lsr	r25
 494:	87 95       	ror	r24
 496:	97 f9       	bld	r25, 7
 498:	08 95       	ret

0000049a <__fp_cmp>:
 49a:	99 0f       	add	r25, r25
 49c:	00 08       	sbc	r0, r0
 49e:	55 0f       	add	r21, r21
 4a0:	aa 0b       	sbc	r26, r26
 4a2:	e0 e8       	ldi	r30, 0x80	; 128
 4a4:	fe ef       	ldi	r31, 0xFE	; 254
 4a6:	16 16       	cp	r1, r22
 4a8:	17 06       	cpc	r1, r23
 4aa:	e8 07       	cpc	r30, r24
 4ac:	f9 07       	cpc	r31, r25
 4ae:	c0 f0       	brcs	.+48     	; 0x4e0 <__fp_cmp+0x46>
 4b0:	12 16       	cp	r1, r18
 4b2:	13 06       	cpc	r1, r19
 4b4:	e4 07       	cpc	r30, r20
 4b6:	f5 07       	cpc	r31, r21
 4b8:	98 f0       	brcs	.+38     	; 0x4e0 <__fp_cmp+0x46>
 4ba:	62 1b       	sub	r22, r18
 4bc:	73 0b       	sbc	r23, r19
 4be:	84 0b       	sbc	r24, r20
 4c0:	95 0b       	sbc	r25, r21
 4c2:	39 f4       	brne	.+14     	; 0x4d2 <__fp_cmp+0x38>
 4c4:	0a 26       	eor	r0, r26
 4c6:	61 f0       	breq	.+24     	; 0x4e0 <__fp_cmp+0x46>
 4c8:	23 2b       	or	r18, r19
 4ca:	24 2b       	or	r18, r20
 4cc:	25 2b       	or	r18, r21
 4ce:	21 f4       	brne	.+8      	; 0x4d8 <__fp_cmp+0x3e>
 4d0:	08 95       	ret
 4d2:	0a 26       	eor	r0, r26
 4d4:	09 f4       	brne	.+2      	; 0x4d8 <__fp_cmp+0x3e>
 4d6:	a1 40       	sbci	r26, 0x01	; 1
 4d8:	a6 95       	lsr	r26
 4da:	8f ef       	ldi	r24, 0xFF	; 255
 4dc:	81 1d       	adc	r24, r1
 4de:	81 1d       	adc	r24, r1
 4e0:	08 95       	ret

000004e2 <__fp_inf>:
 4e2:	97 f9       	bld	r25, 7
 4e4:	9f 67       	ori	r25, 0x7F	; 127
 4e6:	80 e8       	ldi	r24, 0x80	; 128
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	60 e0       	ldi	r22, 0x00	; 0
 4ec:	08 95       	ret

000004ee <__fp_nan>:
 4ee:	9f ef       	ldi	r25, 0xFF	; 255
 4f0:	80 ec       	ldi	r24, 0xC0	; 192
 4f2:	08 95       	ret

000004f4 <__fp_pscA>:
 4f4:	00 24       	eor	r0, r0
 4f6:	0a 94       	dec	r0
 4f8:	16 16       	cp	r1, r22
 4fa:	17 06       	cpc	r1, r23
 4fc:	18 06       	cpc	r1, r24
 4fe:	09 06       	cpc	r0, r25
 500:	08 95       	ret

00000502 <__fp_pscB>:
 502:	00 24       	eor	r0, r0
 504:	0a 94       	dec	r0
 506:	12 16       	cp	r1, r18
 508:	13 06       	cpc	r1, r19
 50a:	14 06       	cpc	r1, r20
 50c:	05 06       	cpc	r0, r21
 50e:	08 95       	ret

00000510 <__fp_round>:
 510:	09 2e       	mov	r0, r25
 512:	03 94       	inc	r0
 514:	00 0c       	add	r0, r0
 516:	11 f4       	brne	.+4      	; 0x51c <__fp_round+0xc>
 518:	88 23       	and	r24, r24
 51a:	52 f0       	brmi	.+20     	; 0x530 <__fp_round+0x20>
 51c:	bb 0f       	add	r27, r27
 51e:	40 f4       	brcc	.+16     	; 0x530 <__fp_round+0x20>
 520:	bf 2b       	or	r27, r31
 522:	11 f4       	brne	.+4      	; 0x528 <__fp_round+0x18>
 524:	60 ff       	sbrs	r22, 0
 526:	04 c0       	rjmp	.+8      	; 0x530 <__fp_round+0x20>
 528:	6f 5f       	subi	r22, 0xFF	; 255
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	08 95       	ret

00000532 <__fp_split3>:
 532:	57 fd       	sbrc	r21, 7
 534:	90 58       	subi	r25, 0x80	; 128
 536:	44 0f       	add	r20, r20
 538:	55 1f       	adc	r21, r21
 53a:	59 f0       	breq	.+22     	; 0x552 <__fp_splitA+0x10>
 53c:	5f 3f       	cpi	r21, 0xFF	; 255
 53e:	71 f0       	breq	.+28     	; 0x55c <__fp_splitA+0x1a>
 540:	47 95       	ror	r20

00000542 <__fp_splitA>:
 542:	88 0f       	add	r24, r24
 544:	97 fb       	bst	r25, 7
 546:	99 1f       	adc	r25, r25
 548:	61 f0       	breq	.+24     	; 0x562 <__fp_splitA+0x20>
 54a:	9f 3f       	cpi	r25, 0xFF	; 255
 54c:	79 f0       	breq	.+30     	; 0x56c <__fp_splitA+0x2a>
 54e:	87 95       	ror	r24
 550:	08 95       	ret
 552:	12 16       	cp	r1, r18
 554:	13 06       	cpc	r1, r19
 556:	14 06       	cpc	r1, r20
 558:	55 1f       	adc	r21, r21
 55a:	f2 cf       	rjmp	.-28     	; 0x540 <__fp_split3+0xe>
 55c:	46 95       	lsr	r20
 55e:	f1 df       	rcall	.-30     	; 0x542 <__fp_splitA>
 560:	08 c0       	rjmp	.+16     	; 0x572 <__fp_splitA+0x30>
 562:	16 16       	cp	r1, r22
 564:	17 06       	cpc	r1, r23
 566:	18 06       	cpc	r1, r24
 568:	99 1f       	adc	r25, r25
 56a:	f1 cf       	rjmp	.-30     	; 0x54e <__fp_splitA+0xc>
 56c:	86 95       	lsr	r24
 56e:	71 05       	cpc	r23, r1
 570:	61 05       	cpc	r22, r1
 572:	08 94       	sec
 574:	08 95       	ret

00000576 <__fp_zero>:
 576:	e8 94       	clt

00000578 <__fp_szero>:
 578:	bb 27       	eor	r27, r27
 57a:	66 27       	eor	r22, r22
 57c:	77 27       	eor	r23, r23
 57e:	cb 01       	movw	r24, r22
 580:	97 f9       	bld	r25, 7
 582:	08 95       	ret

00000584 <__gesf2>:
 584:	8a df       	rcall	.-236    	; 0x49a <__fp_cmp>
 586:	08 f4       	brcc	.+2      	; 0x58a <__gesf2+0x6>
 588:	8f ef       	ldi	r24, 0xFF	; 255
 58a:	08 95       	ret

0000058c <__mulsf3>:
 58c:	0b d0       	rcall	.+22     	; 0x5a4 <__mulsf3x>
 58e:	c0 cf       	rjmp	.-128    	; 0x510 <__fp_round>
 590:	b1 df       	rcall	.-158    	; 0x4f4 <__fp_pscA>
 592:	28 f0       	brcs	.+10     	; 0x59e <__mulsf3+0x12>
 594:	b6 df       	rcall	.-148    	; 0x502 <__fp_pscB>
 596:	18 f0       	brcs	.+6      	; 0x59e <__mulsf3+0x12>
 598:	95 23       	and	r25, r21
 59a:	09 f0       	breq	.+2      	; 0x59e <__mulsf3+0x12>
 59c:	a2 cf       	rjmp	.-188    	; 0x4e2 <__fp_inf>
 59e:	a7 cf       	rjmp	.-178    	; 0x4ee <__fp_nan>
 5a0:	11 24       	eor	r1, r1
 5a2:	ea cf       	rjmp	.-44     	; 0x578 <__fp_szero>

000005a4 <__mulsf3x>:
 5a4:	c6 df       	rcall	.-116    	; 0x532 <__fp_split3>
 5a6:	a0 f3       	brcs	.-24     	; 0x590 <__mulsf3+0x4>

000005a8 <__mulsf3_pse>:
 5a8:	95 9f       	mul	r25, r21
 5aa:	d1 f3       	breq	.-12     	; 0x5a0 <__mulsf3+0x14>
 5ac:	95 0f       	add	r25, r21
 5ae:	50 e0       	ldi	r21, 0x00	; 0
 5b0:	55 1f       	adc	r21, r21
 5b2:	62 9f       	mul	r22, r18
 5b4:	f0 01       	movw	r30, r0
 5b6:	72 9f       	mul	r23, r18
 5b8:	bb 27       	eor	r27, r27
 5ba:	f0 0d       	add	r31, r0
 5bc:	b1 1d       	adc	r27, r1
 5be:	63 9f       	mul	r22, r19
 5c0:	aa 27       	eor	r26, r26
 5c2:	f0 0d       	add	r31, r0
 5c4:	b1 1d       	adc	r27, r1
 5c6:	aa 1f       	adc	r26, r26
 5c8:	64 9f       	mul	r22, r20
 5ca:	66 27       	eor	r22, r22
 5cc:	b0 0d       	add	r27, r0
 5ce:	a1 1d       	adc	r26, r1
 5d0:	66 1f       	adc	r22, r22
 5d2:	82 9f       	mul	r24, r18
 5d4:	22 27       	eor	r18, r18
 5d6:	b0 0d       	add	r27, r0
 5d8:	a1 1d       	adc	r26, r1
 5da:	62 1f       	adc	r22, r18
 5dc:	73 9f       	mul	r23, r19
 5de:	b0 0d       	add	r27, r0
 5e0:	a1 1d       	adc	r26, r1
 5e2:	62 1f       	adc	r22, r18
 5e4:	83 9f       	mul	r24, r19
 5e6:	a0 0d       	add	r26, r0
 5e8:	61 1d       	adc	r22, r1
 5ea:	22 1f       	adc	r18, r18
 5ec:	74 9f       	mul	r23, r20
 5ee:	33 27       	eor	r19, r19
 5f0:	a0 0d       	add	r26, r0
 5f2:	61 1d       	adc	r22, r1
 5f4:	23 1f       	adc	r18, r19
 5f6:	84 9f       	mul	r24, r20
 5f8:	60 0d       	add	r22, r0
 5fa:	21 1d       	adc	r18, r1
 5fc:	82 2f       	mov	r24, r18
 5fe:	76 2f       	mov	r23, r22
 600:	6a 2f       	mov	r22, r26
 602:	11 24       	eor	r1, r1
 604:	9f 57       	subi	r25, 0x7F	; 127
 606:	50 40       	sbci	r21, 0x00	; 0
 608:	8a f0       	brmi	.+34     	; 0x62c <__mulsf3_pse+0x84>
 60a:	e1 f0       	breq	.+56     	; 0x644 <__mulsf3_pse+0x9c>
 60c:	88 23       	and	r24, r24
 60e:	4a f0       	brmi	.+18     	; 0x622 <__mulsf3_pse+0x7a>
 610:	ee 0f       	add	r30, r30
 612:	ff 1f       	adc	r31, r31
 614:	bb 1f       	adc	r27, r27
 616:	66 1f       	adc	r22, r22
 618:	77 1f       	adc	r23, r23
 61a:	88 1f       	adc	r24, r24
 61c:	91 50       	subi	r25, 0x01	; 1
 61e:	50 40       	sbci	r21, 0x00	; 0
 620:	a9 f7       	brne	.-22     	; 0x60c <__mulsf3_pse+0x64>
 622:	9e 3f       	cpi	r25, 0xFE	; 254
 624:	51 05       	cpc	r21, r1
 626:	70 f0       	brcs	.+28     	; 0x644 <__mulsf3_pse+0x9c>
 628:	5c cf       	rjmp	.-328    	; 0x4e2 <__fp_inf>
 62a:	a6 cf       	rjmp	.-180    	; 0x578 <__fp_szero>
 62c:	5f 3f       	cpi	r21, 0xFF	; 255
 62e:	ec f3       	brlt	.-6      	; 0x62a <__mulsf3_pse+0x82>
 630:	98 3e       	cpi	r25, 0xE8	; 232
 632:	dc f3       	brlt	.-10     	; 0x62a <__mulsf3_pse+0x82>
 634:	86 95       	lsr	r24
 636:	77 95       	ror	r23
 638:	67 95       	ror	r22
 63a:	b7 95       	ror	r27
 63c:	f7 95       	ror	r31
 63e:	e7 95       	ror	r30
 640:	9f 5f       	subi	r25, 0xFF	; 255
 642:	c1 f7       	brne	.-16     	; 0x634 <__mulsf3_pse+0x8c>
 644:	fe 2b       	or	r31, r30
 646:	88 0f       	add	r24, r24
 648:	91 1d       	adc	r25, r1
 64a:	96 95       	lsr	r25
 64c:	87 95       	ror	r24
 64e:	97 f9       	bld	r25, 7
 650:	08 95       	ret

00000652 <_exit>:
 652:	f8 94       	cli

00000654 <__stop_program>:
 654:	ff cf       	rjmp	.-2      	; 0x654 <__stop_program>
